0: t18 interferes with:t15 t14 t13 t12 
1: t12 interferes with:t18 t15 t14 t13 
2: t13 interferes with:t19 t18 t15 t14 
3: t14 interferes with:t20 t19 t18 t15 
4: t15 interferes with:t21 t20 t19 t18 
5: t19 interferes with:t18 t15 t14 t13 
6: t20 interferes with:t19 t18 t15 t14 
7: t21 interferes with:t20 t19 t18 t15 
8: t22 interferes with:t21 t20 t19 t18 
9: t23 interferes with:t22 t21 t20 t19 t18 
10: t6 interferes with:t17 t2 t22 t21 t20 t19 t18 
11: t24 interferes with:t23 t22 t21 t20 t19 t18 t6 
12: t7 interferes with:t17 t2 t23 t22 t21 t20 t19 t18 t6 
13: t2 interferes with:t51 t46 t41 t36 t31 t26 t17 t22 t21 t20 t19 t18 
14: t4 interferes with:t17 t22 t21 t20 t19 t18 t2 
15: t5 interferes with:t17 t22 t21 t20 t19 t18 t2 
16: t8 interferes with:t17 t22 t21 t20 t19 t18 t2 
17: t9 interferes with:t17 t22 t21 t20 t19 t18 t2 
18: t10 interferes with:t17 t22 t21 t20 t19 t18 t2 
19: t11 interferes with:t17 t22 t21 t20 t19 t18 t2 
20: t16 interferes with:t22 t21 t20 t19 t18 
21: t17 interferes with:t22 t21 t20 t19 t18 
22: t25 interferes with:t22 t21 t20 t19 t18 t17 
23: t26 interferes with:t25 t22 t21 t20 t19 t18 t17 
24: t27 interferes with:t26 t22 t21 t20 t19 t18 t17 
25: t28 interferes with:t17 t27 t22 t21 t20 t19 t18 
26: t29 interferes with:t28 t22 t21 t20 t19 t18 t17 
27: t30 interferes with:t22 t21 t20 t19 t18 t17 
28: t31 interferes with:t30 t22 t21 t20 t19 t18 t17 
29: t32 interferes with:t31 t22 t21 t20 t19 t18 t17 
30: t33 interferes with:t17 t32 t22 t21 t20 t19 t18 
31: t34 interferes with:t33 t22 t21 t20 t19 t18 t17 
32: t35 interferes with:t22 t21 t20 t19 t18 t17 
33: t36 interferes with:t35 t22 t21 t20 t19 t18 t17 
34: t37 interferes with:t36 t22 t21 t20 t19 t18 t17 
35: t38 interferes with:t17 t37 t22 t21 t20 t19 t18 
36: t39 interferes with:t38 t22 t21 t20 t19 t18 t17 
37: t40 interferes with:t22 t21 t20 t19 t18 t17 
38: t41 interferes with:t40 t22 t21 t20 t19 t18 t17 
39: t42 interferes with:t41 t22 t21 t20 t19 t18 t17 
40: t43 interferes with:t17 t42 t22 t21 t20 t19 t18 
41: t44 interferes with:t22 t21 t20 t19 t18 t17 
42: t45 interferes with:t22 t21 t20 t19 t18 t17 
43: t46 interferes with:t45 t22 t21 t20 t19 t18 t17 
44: t47 interferes with:t46 t22 t21 t20 t19 t18 t17 
45: t48 interferes with:t17 t47 t22 t21 t20 t19 t18 
46: t49 interferes with:t22 t21 t20 t19 t18 t17 
47: t50 interferes with:t22 t21 t20 t19 t18 t17 
48: t51 interferes with:t50 t22 t21 t20 t19 t18 t17 
49: t52 interferes with:t51 t22 t21 t20 t19 t18 t17 
50: t53 interferes with:t52 t22 t21 t20 t19 t18 
51: t54 interferes with:t22 t21 t20 t19 t18 
52: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L19: : def => null, use => null
movq %t3, %t18 # default move : def => [t18=>t18], use => [t3=>rbx]
movq %t12, %t19 # default move : def => [t19=>t19], use => [t12=>r12]
movq %t13, %t20 # default move : def => [t20=>t20], use => [t13=>r13]
movq %t14, %t21 # default move : def => [t21=>t21], use => [t14=>r14]
movq %t15, %t22 # default move : def => [t22=>t22], use => [t15=>r15]
movq $0, %t23 # const : def => [t23=>t23], use => null
movq %t23, %t6 # move arg 1 to temp : def => [t6=>rsi], use => [t23=>t23]
movq $10, %t24 # const : def => [t24=>t24], use => null
movq %t24, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t24=>t24]
call initArray # default call : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t23=>t23,t6=>rsi,t24=>t24,t7=>rdi]
movq %t2, %t16 # default move : def => [t16=>t16], use => [t2=>rax]
movq %t16, %t17 # default move : def => [t17=>t17], use => [t16=>t16]
movq $0, %t25 # const : def => [t25=>t25], use => null
movq $8, %t26 # const : def => [t26=>t26], use => null
movq %t25, %t27 # mul lexp -> r : def => [t27=>t27], use => [t25=>t25]
movq %t27, %t2 # mul r -> rax : def => [t2=>rax], use => [t27=>t27]
imul %t2 # mul rax * rexp  : def => [t2=>rax,t5=>rdx], use => [t2=>rax,t26=>t26]
movq %t2, %t27 # mul rax -> r : def => [t27=>t27], use => [t2=>rax]
movq %t17, %t28 # add lexp -> r : def => [t28=>t28], use => [t17=>t17]
add %t27, %t28 : def => [t28=>t28], use => [t27=>t27,t28=>t28]
movq $10, %t29 # const : def => [t29=>t29], use => null
movq %t29, (%t28) # store : def => null, use => [t29=>t29,t28=>t28]
movq $9, %t30 # const : def => [t30=>t30], use => null
movq $8, %t31 # const : def => [t31=>t31], use => null
movq %t30, %t32 # mul lexp -> r : def => [t32=>t32], use => [t30=>t30]
movq %t32, %t2 # mul r -> rax : def => [t2=>rax], use => [t32=>t32]
imul %t2 # mul rax * rexp  : def => [t2=>rax,t5=>rdx], use => [t2=>rax,t31=>t31]
movq %t2, %t32 # mul rax -> r : def => [t32=>t32], use => [t2=>rax]
movq %t17, %t33 # add lexp -> r : def => [t33=>t33], use => [t17=>t17]
add %t32, %t33 : def => [t33=>t33], use => [t32=>t32,t33=>t33]
movq $9, %t34 # const : def => [t34=>t34], use => null
movq %t34, (%t33) # store : def => null, use => [t34=>t34,t33=>t33]
movq $5, %t35 # const : def => [t35=>t35], use => null
movq $8, %t36 # const : def => [t36=>t36], use => null
movq %t35, %t37 # mul lexp -> r : def => [t37=>t37], use => [t35=>t35]
movq %t37, %t2 # mul r -> rax : def => [t2=>rax], use => [t37=>t37]
imul %t2 # mul rax * rexp  : def => [t2=>rax,t5=>rdx], use => [t2=>rax,t36=>t36]
movq %t2, %t37 # mul rax -> r : def => [t37=>t37], use => [t2=>rax]
movq %t17, %t38 # add lexp -> r : def => [t38=>t38], use => [t17=>t17]
add %t37, %t38 : def => [t38=>t38], use => [t37=>t37,t38=>t38]
movq $5, %t39 # const : def => [t39=>t39], use => null
movq %t39, (%t38) # store : def => null, use => [t39=>t39,t38=>t38]
movq $5, %t40 # const : def => [t40=>t40], use => null
movq $8, %t41 # const : def => [t41=>t41], use => null
movq %t40, %t42 # mul lexp -> r : def => [t42=>t42], use => [t40=>t40]
movq %t42, %t2 # mul r -> rax : def => [t2=>rax], use => [t42=>t42]
imul %t2 # mul rax * rexp  : def => [t2=>rax,t5=>rdx], use => [t2=>rax,t41=>t41]
movq %t2, %t42 # mul rax -> r : def => [t42=>t42], use => [t2=>rax]
movq %t17, %t43 # add lexp -> r : def => [t43=>t43], use => [t17=>t17]
add %t42, %t43 : def => [t43=>t43], use => [t42=>t42,t43=>t43]
movq (%t43), %t44 # default load : def => [t44=>t44], use => [t43=>t43]
movq %t44, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t44=>t44]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t44=>t44,t7=>rdi]
movq $0, %t45 # const : def => [t45=>t45], use => null
movq $8, %t46 # const : def => [t46=>t46], use => null
movq %t45, %t47 # mul lexp -> r : def => [t47=>t47], use => [t45=>t45]
movq %t47, %t2 # mul r -> rax : def => [t2=>rax], use => [t47=>t47]
imul %t2 # mul rax * rexp  : def => [t2=>rax,t5=>rdx], use => [t2=>rax,t46=>t46]
movq %t2, %t47 # mul rax -> r : def => [t47=>t47], use => [t2=>rax]
movq %t17, %t48 # add lexp -> r : def => [t48=>t48], use => [t17=>t17]
add %t47, %t48 : def => [t48=>t48], use => [t47=>t47,t48=>t48]
movq (%t48), %t49 # default load : def => [t49=>t49], use => [t48=>t48]
movq %t49, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t49=>t49]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t49=>t49,t7=>rdi]
movq $9, %t50 # const : def => [t50=>t50], use => null
movq $8, %t51 # const : def => [t51=>t51], use => null
movq %t50, %t52 # mul lexp -> r : def => [t52=>t52], use => [t50=>t50]
movq %t52, %t2 # mul r -> rax : def => [t2=>rax], use => [t52=>t52]
imul %t2 # mul rax * rexp  : def => [t2=>rax,t5=>rdx], use => [t2=>rax,t51=>t51]
movq %t2, %t52 # mul rax -> r : def => [t52=>t52], use => [t2=>rax]
movq %t17, %t53 # add lexp -> r : def => [t53=>t53], use => [t17=>t17]
add %t52, %t53 : def => [t53=>t53], use => [t52=>t52,t53=>t53]
movq (%t53), %t54 # default load : def => [t54=>t54], use => [t53=>t53]
movq %t54, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t54=>t54]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t54=>t54,t7=>rdi]
movq %t22, %t15 # default move : def => [t15=>r15], use => [t22=>t22]
movq %t21, %t14 # default move : def => [t14=>r14], use => [t21=>t21]
movq %t20, %t13 # default move : def => [t13=>r13], use => [t20=>t20]
movq %t19, %t12 # default move : def => [t12=>r12], use => [t19=>t19]
movq %t18, %t3 # default move : def => [t3=>rbx], use => [t18=>t18]
jmp L18 : def => null, use => null
L18: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L19: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t18 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t18=>t18]
movq %t12, %t19 # default move => [t13=>r13,t14=>r14,t15=>r15,t18=>t18,t19=>t19]
movq %t13, %t20 # default move => [t14=>r14,t15=>r15,t18=>t18,t19=>t19,t20=>t20]
movq %t14, %t21 # default move => [t15=>r15,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t15, %t22 # default move => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $0, %t23 # const => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23]
movq %t23, %t6 # move arg 1 to temp => [t6=>rsi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23]
movq $10, %t24 # const => [t6=>rsi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24]
movq %t24, %t7 # move arg 0 to temp => [t6=>rsi,t7=>rdi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24]
call initArray # default call => [t2=>rax,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t2, %t16 # default move => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t16, %t17 # default move => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $0, %t25 # const => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t25=>t25]
movq $8, %t26 # const => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t25=>t25,t26=>t26]
movq %t25, %t27 # mul lexp -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t26=>t26,t27=>t27]
movq %t27, %t2 # mul r -> rax => [t2=>rax,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t26=>t26]
imul %t2 # mul rax * rexp  => [t2=>rax,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t2, %t27 # mul rax -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t27=>t27]
movq %t17, %t28 # add lexp -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t27=>t27,t28=>t28]
add %t27, %t28 => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t28=>t28]
movq $10, %t29 # const => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t28=>t28,t29=>t29]
movq %t29, (%t28) # store => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $9, %t30 # const => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t30=>t30]
movq $8, %t31 # const => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t30=>t30,t31=>t31]
movq %t30, %t32 # mul lexp -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t31=>t31,t32=>t32]
movq %t32, %t2 # mul r -> rax => [t2=>rax,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t31=>t31]
imul %t2 # mul rax * rexp  => [t2=>rax,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t2, %t32 # mul rax -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t32=>t32]
movq %t17, %t33 # add lexp -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t32=>t32,t33=>t33]
add %t32, %t33 => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t33=>t33]
movq $9, %t34 # const => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t33=>t33,t34=>t34]
movq %t34, (%t33) # store => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $5, %t35 # const => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t35=>t35]
movq $8, %t36 # const => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t35=>t35,t36=>t36]
movq %t35, %t37 # mul lexp -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t36=>t36,t37=>t37]
movq %t37, %t2 # mul r -> rax => [t2=>rax,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t36=>t36]
imul %t2 # mul rax * rexp  => [t2=>rax,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t2, %t37 # mul rax -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t37=>t37]
movq %t17, %t38 # add lexp -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t37=>t37,t38=>t38]
add %t37, %t38 => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t38=>t38]
movq $5, %t39 # const => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t38=>t38,t39=>t39]
movq %t39, (%t38) # store => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $5, %t40 # const => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t40=>t40]
movq $8, %t41 # const => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t40=>t40,t41=>t41]
movq %t40, %t42 # mul lexp -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t41=>t41,t42=>t42]
movq %t42, %t2 # mul r -> rax => [t2=>rax,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t41=>t41]
imul %t2 # mul rax * rexp  => [t2=>rax,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t2, %t42 # mul rax -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t42=>t42]
movq %t17, %t43 # add lexp -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t42=>t42,t43=>t43]
add %t42, %t43 => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t43=>t43]
movq (%t43), %t44 # default load => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t44=>t44]
movq %t44, %t7 # move arg 0 to temp => [t7=>rdi,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t44=>t44]
call printi # exp call ( no return value ) => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $0, %t45 # const => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t45=>t45]
movq $8, %t46 # const => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t45=>t45,t46=>t46]
movq %t45, %t47 # mul lexp -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t46=>t46,t47=>t47]
movq %t47, %t2 # mul r -> rax => [t2=>rax,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t46=>t46]
imul %t2 # mul rax * rexp  => [t2=>rax,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t2, %t47 # mul rax -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t47=>t47]
movq %t17, %t48 # add lexp -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t47=>t47,t48=>t48]
add %t47, %t48 => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t48=>t48]
movq (%t48), %t49 # default load => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t49=>t49]
movq %t49, %t7 # move arg 0 to temp => [t7=>rdi,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t49=>t49]
call printi # exp call ( no return value ) => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $9, %t50 # const => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t50=>t50]
movq $8, %t51 # const => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t50=>t50,t51=>t51]
movq %t50, %t52 # mul lexp -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t51=>t51,t52=>t52]
movq %t52, %t2 # mul r -> rax => [t2=>rax,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t51=>t51]
imul %t2 # mul rax * rexp  => [t2=>rax,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t2, %t52 # mul rax -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t52=>t52]
movq %t17, %t53 # add lexp -> r => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t52=>t52,t53=>t53]
add %t52, %t53 => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t53=>t53]
movq (%t53), %t54 # default load => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t54=>t54]
movq %t54, %t7 # move arg 0 to temp => [t7=>rdi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t54=>t54]
call printi # exp call ( no return value ) => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t22, %t15 # default move => [t15=>r15,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t21, %t14 # default move => [t14=>r14,t15=>r15,t18=>t18,t19=>t19,t20=>t20]
movq %t20, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t18=>t18,t19=>t19]
movq %t19, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t18=>t18]
movq %t18, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L18 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L18: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                  t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36 t37 t38 t39 t40 t41 t42 t43 t44 t45 t46 t47 t48 t49 t50 t51 t52 t53 t54 rc def
L19:                                                |                             |   |   |   |                                                                                                                                                              5 null
movq %t3, %t18 # default move                                                     |   |   |   |           |                                                                                                                                                  5 [t18=>t18]
movq %t12, %t19 # default move                                                        |   |   |           |   |                                                                                                                                              5 [t19=>t19]
movq %t13, %t20 # default move                                                            |   |           |   |   |                                                                                                                                          5 [t20=>t20]
movq %t14, %t21 # default move                                                                |           |   |   |   |                                                                                                                                      5 [t21=>t21]
movq %t15, %t22 # default move                                                                            |   |   |   |   |                                                                                                                                  5 [t22=>t22]
movq $0, %t23 # const                                                                                     |   |   |   |   |   |                                                                                                                              6 [t23=>t23]
movq %t23, %t6 # move arg 1 to temp                          |                                            |   |   |   |   |   |                                                                                                                              7 [t6=>rsi]
movq $10, %t24 # const                                       |                                            |   |   |   |   |   |   |                                                                                                                          8 [t24=>t24]
movq %t24, %t7 # move arg 0 to temp                          |  |                                         |   |   |   |   |   |   |                                                                                                                          9 [t7=>rdi]
call initArray # default call                    |                                                        |   |   |   |   |                                                                                                                                  6 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t2, %t16 # default move                                                                     |       |   |   |   |   |                                                                                                                                  6 [t16=>t16]
movq %t16, %t17 # default move                                                                        |   |   |   |   |   |                                                                                                                                  6 [t17=>t17]
movq $0, %t25 # const                                                                                 |   |   |   |   |   |           |                                                                                                                      7 [t25=>t25]
movq $8, %t26 # const                                                                                 |   |   |   |   |   |           |   |                                                                                                                  8 [t26=>t26]
movq %t25, %t27 # mul lexp -> r                                                                       |   |   |   |   |   |               |   |                                                                                                              8 [t27=>t27]
movq %t27, %t2 # mul r -> rax                    |                                                    |   |   |   |   |   |               |                                                                                                                  8 [t2=>rax]
imul %t2 # mul rax * rexp                        |                                                    |   |   |   |   |   |                                                                                                                                  7 [t2=>rax,t5=>rdx]
movq %t2, %t27 # mul rax -> r                                                                         |   |   |   |   |   |                   |                                                                                                              7 [t27=>t27]
movq %t17, %t28 # add lexp -> r                                                                       |   |   |   |   |   |                   |   |                                                                                                          8 [t28=>t28]
add %t27, %t28                                                                                        |   |   |   |   |   |                       |                                                                                                          7 [t28=>t28]
movq $10, %t29 # const                                                                                |   |   |   |   |   |                       |   |                                                                                                      8 [t29=>t29]
movq %t29, (%t28) # store                                                                             |   |   |   |   |   |                                                                                                                                  6 null
movq $9, %t30 # const                                                                                 |   |   |   |   |   |                               |                                                                                                  7 [t30=>t30]
movq $8, %t31 # const                                                                                 |   |   |   |   |   |                               |   |                                                                                              8 [t31=>t31]
movq %t30, %t32 # mul lexp -> r                                                                       |   |   |   |   |   |                                   |   |                                                                                          8 [t32=>t32]
movq %t32, %t2 # mul r -> rax                    |                                                    |   |   |   |   |   |                                   |                                                                                              8 [t2=>rax]
imul %t2 # mul rax * rexp                        |                                                    |   |   |   |   |   |                                                                                                                                  7 [t2=>rax,t5=>rdx]
movq %t2, %t32 # mul rax -> r                                                                         |   |   |   |   |   |                                       |                                                                                          7 [t32=>t32]
movq %t17, %t33 # add lexp -> r                                                                       |   |   |   |   |   |                                       |   |                                                                                      8 [t33=>t33]
add %t32, %t33                                                                                        |   |   |   |   |   |                                           |                                                                                      7 [t33=>t33]
movq $9, %t34 # const                                                                                 |   |   |   |   |   |                                           |   |                                                                                  8 [t34=>t34]
movq %t34, (%t33) # store                                                                             |   |   |   |   |   |                                                                                                                                  6 null
movq $5, %t35 # const                                                                                 |   |   |   |   |   |                                                   |                                                                              7 [t35=>t35]
movq $8, %t36 # const                                                                                 |   |   |   |   |   |                                                   |   |                                                                          8 [t36=>t36]
movq %t35, %t37 # mul lexp -> r                                                                       |   |   |   |   |   |                                                       |   |                                                                      8 [t37=>t37]
movq %t37, %t2 # mul r -> rax                    |                                                    |   |   |   |   |   |                                                       |                                                                          8 [t2=>rax]
imul %t2 # mul rax * rexp                        |                                                    |   |   |   |   |   |                                                                                                                                  7 [t2=>rax,t5=>rdx]
movq %t2, %t37 # mul rax -> r                                                                         |   |   |   |   |   |                                                           |                                                                      7 [t37=>t37]
movq %t17, %t38 # add lexp -> r                                                                       |   |   |   |   |   |                                                           |   |                                                                  8 [t38=>t38]
add %t37, %t38                                                                                        |   |   |   |   |   |                                                               |                                                                  7 [t38=>t38]
movq $5, %t39 # const                                                                                 |   |   |   |   |   |                                                               |   |                                                              8 [t39=>t39]
movq %t39, (%t38) # store                                                                             |   |   |   |   |   |                                                                                                                                  6 null
movq $5, %t40 # const                                                                                 |   |   |   |   |   |                                                                       |                                                          7 [t40=>t40]
movq $8, %t41 # const                                                                                 |   |   |   |   |   |                                                                       |   |                                                      8 [t41=>t41]
movq %t40, %t42 # mul lexp -> r                                                                       |   |   |   |   |   |                                                                           |   |                                                  8 [t42=>t42]
movq %t42, %t2 # mul r -> rax                    |                                                    |   |   |   |   |   |                                                                           |                                                      8 [t2=>rax]
imul %t2 # mul rax * rexp                        |                                                    |   |   |   |   |   |                                                                                                                                  7 [t2=>rax,t5=>rdx]
movq %t2, %t42 # mul rax -> r                                                                         |   |   |   |   |   |                                                                               |                                                  7 [t42=>t42]
movq %t17, %t43 # add lexp -> r                                                                       |   |   |   |   |   |                                                                               |   |                                              8 [t43=>t43]
add %t42, %t43                                                                                        |   |   |   |   |   |                                                                                   |                                              7 [t43=>t43]
movq (%t43), %t44 # default load                                                                      |   |   |   |   |   |                                                                                       |                                          7 [t44=>t44]
movq %t44, %t7 # move arg 0 to temp                             |                                     |   |   |   |   |   |                                                                                       |                                          8 [t7=>rdi]
call printi # exp call ( no return value )                                                            |   |   |   |   |   |                                                                                                                                  6 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq $0, %t45 # const                                                                                 |   |   |   |   |   |                                                                                           |                                      7 [t45=>t45]
movq $8, %t46 # const                                                                                 |   |   |   |   |   |                                                                                           |   |                                  8 [t46=>t46]
movq %t45, %t47 # mul lexp -> r                                                                       |   |   |   |   |   |                                                                                               |   |                              8 [t47=>t47]
movq %t47, %t2 # mul r -> rax                    |                                                    |   |   |   |   |   |                                                                                               |                                  8 [t2=>rax]
imul %t2 # mul rax * rexp                        |                                                    |   |   |   |   |   |                                                                                                                                  7 [t2=>rax,t5=>rdx]
movq %t2, %t47 # mul rax -> r                                                                         |   |   |   |   |   |                                                                                                   |                              7 [t47=>t47]
movq %t17, %t48 # add lexp -> r                                                                       |   |   |   |   |   |                                                                                                   |   |                          8 [t48=>t48]
add %t47, %t48                                                                                        |   |   |   |   |   |                                                                                                       |                          7 [t48=>t48]
movq (%t48), %t49 # default load                                                                      |   |   |   |   |   |                                                                                                           |                      7 [t49=>t49]
movq %t49, %t7 # move arg 0 to temp                             |                                     |   |   |   |   |   |                                                                                                           |                      8 [t7=>rdi]
call printi # exp call ( no return value )                                                            |   |   |   |   |   |                                                                                                                                  6 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq $9, %t50 # const                                                                                 |   |   |   |   |   |                                                                                                               |                  7 [t50=>t50]
movq $8, %t51 # const                                                                                 |   |   |   |   |   |                                                                                                               |   |              8 [t51=>t51]
movq %t50, %t52 # mul lexp -> r                                                                       |   |   |   |   |   |                                                                                                                   |   |          8 [t52=>t52]
movq %t52, %t2 # mul r -> rax                    |                                                    |   |   |   |   |   |                                                                                                                   |              8 [t2=>rax]
imul %t2 # mul rax * rexp                        |                                                    |   |   |   |   |   |                                                                                                                                  7 [t2=>rax,t5=>rdx]
movq %t2, %t52 # mul rax -> r                                                                         |   |   |   |   |   |                                                                                                                       |          7 [t52=>t52]
movq %t17, %t53 # add lexp -> r                                                                           |   |   |   |   |                                                                                                                       |   |      7 [t53=>t53]
add %t52, %t53                                                                                            |   |   |   |   |                                                                                                                           |      6 [t53=>t53]
movq (%t53), %t54 # default load                                                                          |   |   |   |   |                                                                                                                               |  6 [t54=>t54]
movq %t54, %t7 # move arg 0 to temp                             |                                         |   |   |   |   |                                                                                                                               |  7 [t7=>rdi]
call printi # exp call ( no return value )                                                                |   |   |   |   |                                                                                                                                  5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t22, %t15 # default move                                                                |           |   |   |   |                                                                                                                                      5 [t15=>r15]
movq %t21, %t14 # default move                                                            |   |           |   |   |                                                                                                                                          5 [t14=>r14]
movq %t20, %t13 # default move                                                        |   |   |           |   |                                                                                                                                              5 [t13=>r13]
movq %t19, %t12 # default move                                                    |   |   |   |           |                                                                                                                                                  5 [t12=>r12]
movq %t18, %t3 # default move                       |                             |   |   |   |                                                                                                                                                              5 [t3=>rbx]
jmp L18                                             |                             |   |   |   |                                                                                                                                                              5 null
L18:                                                |                             |   |   |   |                                                                                                                                                              5 null
# sink                                                                                                                                                                                                                                                       0 null
t17 cost: 2
0: t18 interferes with:t15 t14 t13 t12 t0 
1: t0 interferes with:
2: t12 interferes with:t18 t15 t14 t13 
3: t13 interferes with:t19 t18 t15 t14 
4: t14 interferes with:t20 t19 t18 t15 
5: t15 interferes with:t21 t20 t19 t18 
6: t19 interferes with:t18 t15 t14 t13 t0 
7: t20 interferes with:t19 t18 t15 t14 t0 
8: t21 interferes with:t20 t19 t18 t15 t0 
9: t22 interferes with:t21 t20 t19 t18 t0 
10: t23 interferes with:t22 t21 t20 t19 t18 t0 
11: t6 interferes with:t2 t22 t21 t20 t19 t18 t0 
12: t24 interferes with:t23 t22 t21 t20 t19 t18 t6 t0 
13: t7 interferes with:t2 t23 t22 t21 t20 t19 t18 t6 t0 
14: t2 interferes with:t51 t46 t41 t36 t31 t26 t22 t21 t20 t19 t18 t0 
15: t4 interferes with:t22 t21 t20 t19 t18 t2 t0 
16: t5 interferes with:t22 t21 t20 t19 t18 t2 t0 
17: t8 interferes with:t22 t21 t20 t19 t18 t2 t0 
18: t9 interferes with:t22 t21 t20 t19 t18 t2 t0 
19: t10 interferes with:t22 t21 t20 t19 t18 t2 t0 
20: t11 interferes with:t22 t21 t20 t19 t18 t2 t0 
21: t16 interferes with:t22 t21 t20 t19 t18 t0 
22: t17 interferes with:t52 t47 t42 t37 t32 t27 t22 t21 t20 t19 t18 t0 
23: t55 interferes with:t22 t21 t20 t19 t18 t0 
24: t25 interferes with:t22 t21 t20 t19 t18 t0 
25: t26 interferes with:t25 t22 t21 t20 t19 t18 t0 
26: t27 interferes with:t26 t22 t21 t20 t19 t18 t0 
27: t56 interferes with:t27 t22 t21 t20 t19 t18 t0 
28: t28 interferes with:t27 t22 t21 t20 t19 t18 t0 
29: t29 interferes with:t28 t22 t21 t20 t19 t18 t0 
30: t30 interferes with:t22 t21 t20 t19 t18 t0 
31: t31 interferes with:t30 t22 t21 t20 t19 t18 t0 
32: t32 interferes with:t31 t22 t21 t20 t19 t18 t0 
33: t57 interferes with:t32 t22 t21 t20 t19 t18 t0 
34: t33 interferes with:t32 t22 t21 t20 t19 t18 t0 
35: t34 interferes with:t33 t22 t21 t20 t19 t18 t0 
36: t35 interferes with:t22 t21 t20 t19 t18 t0 
37: t36 interferes with:t35 t22 t21 t20 t19 t18 t0 
38: t37 interferes with:t36 t22 t21 t20 t19 t18 t0 
39: t58 interferes with:t37 t22 t21 t20 t19 t18 t0 
40: t38 interferes with:t37 t22 t21 t20 t19 t18 t0 
41: t39 interferes with:t38 t22 t21 t20 t19 t18 t0 
42: t40 interferes with:t22 t21 t20 t19 t18 t0 
43: t41 interferes with:t40 t22 t21 t20 t19 t18 t0 
44: t42 interferes with:t41 t22 t21 t20 t19 t18 t0 
45: t59 interferes with:t42 t22 t21 t20 t19 t18 t0 
46: t43 interferes with:t42 t22 t21 t20 t19 t18 t0 
47: t44 interferes with:t22 t21 t20 t19 t18 t0 
48: t45 interferes with:t22 t21 t20 t19 t18 t0 
49: t46 interferes with:t45 t22 t21 t20 t19 t18 t0 
50: t47 interferes with:t46 t22 t21 t20 t19 t18 t0 
51: t60 interferes with:t47 t22 t21 t20 t19 t18 t0 
52: t48 interferes with:t47 t22 t21 t20 t19 t18 t0 
53: t49 interferes with:t22 t21 t20 t19 t18 t0 
54: t50 interferes with:t22 t21 t20 t19 t18 t0 
55: t51 interferes with:t50 t22 t21 t20 t19 t18 t0 
56: t52 interferes with:t51 t22 t21 t20 t19 t18 t0 
57: t61 interferes with:t52 t22 t21 t20 t19 t18 
58: t53 interferes with:t52 t22 t21 t20 t19 t18 
59: t54 interferes with:t22 t21 t20 t19 t18 
60: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L19: : def => null, use => null
movq %t3, %t18 # default move : def => [t18=>t18], use => [t3=>rbx]
movq %t12, %t19 # default move : def => [t19=>t19], use => [t12=>r12]
movq %t13, %t20 # default move : def => [t20=>t20], use => [t13=>r13]
movq %t14, %t21 # default move : def => [t21=>t21], use => [t14=>r14]
movq %t15, %t22 # default move : def => [t22=>t22], use => [t15=>r15]
movq $0, %t23 # const : def => [t23=>t23], use => null
movq %t23, %t6 # move arg 1 to temp : def => [t6=>rsi], use => [t23=>t23]
movq $10, %t24 # const : def => [t24=>t24], use => null
movq %t24, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t24=>t24]
call initArray # default call : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t23=>t23,t6=>rsi,t24=>t24,t7=>rdi]
movq %t2, %t16 # default move : def => [t16=>t16], use => [t2=>rax]
movq %t16, %t17 # default move : def => [t17=>t17], use => [t16=>t16]
movq %t17, %t55 # spill s : def => [t55=>t55], use => [t17=>t17]
movq %t55, -8(%t0) # spill s : def => null, use => [t0=>rbp,t55=>t55]
movq $0, %t25 # const : def => [t25=>t25], use => null
movq $8, %t26 # const : def => [t26=>t26], use => null
movq %t25, %t27 # mul lexp -> r : def => [t27=>t27], use => [t25=>t25]
movq %t27, %t2 # mul r -> rax : def => [t2=>rax], use => [t27=>t27]
imul %t2 # mul rax * rexp  : def => [t2=>rax,t5=>rdx], use => [t2=>rax,t26=>t26]
movq %t2, %t27 # mul rax -> r : def => [t27=>t27], use => [t2=>rax]
movq -8(%t0), %t56 # spill l : def => [t56=>t56], use => [t0=>rbp]
movq %t56, %t17 # spill l : def => [t17=>t17], use => [t56=>t56]
movq %t17, %t28 # add lexp -> r : def => [t28=>t28], use => [t17=>t17]
add %t27, %t28 : def => [t28=>t28], use => [t27=>t27,t28=>t28]
movq $10, %t29 # const : def => [t29=>t29], use => null
movq %t29, (%t28) # store : def => null, use => [t29=>t29,t28=>t28]
movq $9, %t30 # const : def => [t30=>t30], use => null
movq $8, %t31 # const : def => [t31=>t31], use => null
movq %t30, %t32 # mul lexp -> r : def => [t32=>t32], use => [t30=>t30]
movq %t32, %t2 # mul r -> rax : def => [t2=>rax], use => [t32=>t32]
imul %t2 # mul rax * rexp  : def => [t2=>rax,t5=>rdx], use => [t2=>rax,t31=>t31]
movq %t2, %t32 # mul rax -> r : def => [t32=>t32], use => [t2=>rax]
movq -8(%t0), %t57 # spill l : def => [t57=>t57], use => [t0=>rbp]
movq %t57, %t17 # spill l : def => [t17=>t17], use => [t57=>t57]
movq %t17, %t33 # add lexp -> r : def => [t33=>t33], use => [t17=>t17]
add %t32, %t33 : def => [t33=>t33], use => [t32=>t32,t33=>t33]
movq $9, %t34 # const : def => [t34=>t34], use => null
movq %t34, (%t33) # store : def => null, use => [t34=>t34,t33=>t33]
movq $5, %t35 # const : def => [t35=>t35], use => null
movq $8, %t36 # const : def => [t36=>t36], use => null
movq %t35, %t37 # mul lexp -> r : def => [t37=>t37], use => [t35=>t35]
movq %t37, %t2 # mul r -> rax : def => [t2=>rax], use => [t37=>t37]
imul %t2 # mul rax * rexp  : def => [t2=>rax,t5=>rdx], use => [t2=>rax,t36=>t36]
movq %t2, %t37 # mul rax -> r : def => [t37=>t37], use => [t2=>rax]
movq -8(%t0), %t58 # spill l : def => [t58=>t58], use => [t0=>rbp]
movq %t58, %t17 # spill l : def => [t17=>t17], use => [t58=>t58]
movq %t17, %t38 # add lexp -> r : def => [t38=>t38], use => [t17=>t17]
add %t37, %t38 : def => [t38=>t38], use => [t37=>t37,t38=>t38]
movq $5, %t39 # const : def => [t39=>t39], use => null
movq %t39, (%t38) # store : def => null, use => [t39=>t39,t38=>t38]
movq $5, %t40 # const : def => [t40=>t40], use => null
movq $8, %t41 # const : def => [t41=>t41], use => null
movq %t40, %t42 # mul lexp -> r : def => [t42=>t42], use => [t40=>t40]
movq %t42, %t2 # mul r -> rax : def => [t2=>rax], use => [t42=>t42]
imul %t2 # mul rax * rexp  : def => [t2=>rax,t5=>rdx], use => [t2=>rax,t41=>t41]
movq %t2, %t42 # mul rax -> r : def => [t42=>t42], use => [t2=>rax]
movq -8(%t0), %t59 # spill l : def => [t59=>t59], use => [t0=>rbp]
movq %t59, %t17 # spill l : def => [t17=>t17], use => [t59=>t59]
movq %t17, %t43 # add lexp -> r : def => [t43=>t43], use => [t17=>t17]
add %t42, %t43 : def => [t43=>t43], use => [t42=>t42,t43=>t43]
movq (%t43), %t44 # default load : def => [t44=>t44], use => [t43=>t43]
movq %t44, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t44=>t44]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t44=>t44,t7=>rdi]
movq $0, %t45 # const : def => [t45=>t45], use => null
movq $8, %t46 # const : def => [t46=>t46], use => null
movq %t45, %t47 # mul lexp -> r : def => [t47=>t47], use => [t45=>t45]
movq %t47, %t2 # mul r -> rax : def => [t2=>rax], use => [t47=>t47]
imul %t2 # mul rax * rexp  : def => [t2=>rax,t5=>rdx], use => [t2=>rax,t46=>t46]
movq %t2, %t47 # mul rax -> r : def => [t47=>t47], use => [t2=>rax]
movq -8(%t0), %t60 # spill l : def => [t60=>t60], use => [t0=>rbp]
movq %t60, %t17 # spill l : def => [t17=>t17], use => [t60=>t60]
movq %t17, %t48 # add lexp -> r : def => [t48=>t48], use => [t17=>t17]
add %t47, %t48 : def => [t48=>t48], use => [t47=>t47,t48=>t48]
movq (%t48), %t49 # default load : def => [t49=>t49], use => [t48=>t48]
movq %t49, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t49=>t49]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t49=>t49,t7=>rdi]
movq $9, %t50 # const : def => [t50=>t50], use => null
movq $8, %t51 # const : def => [t51=>t51], use => null
movq %t50, %t52 # mul lexp -> r : def => [t52=>t52], use => [t50=>t50]
movq %t52, %t2 # mul r -> rax : def => [t2=>rax], use => [t52=>t52]
imul %t2 # mul rax * rexp  : def => [t2=>rax,t5=>rdx], use => [t2=>rax,t51=>t51]
movq %t2, %t52 # mul rax -> r : def => [t52=>t52], use => [t2=>rax]
movq -8(%t0), %t61 # spill l : def => [t61=>t61], use => [t0=>rbp]
movq %t61, %t17 # spill l : def => [t17=>t17], use => [t61=>t61]
movq %t17, %t53 # add lexp -> r : def => [t53=>t53], use => [t17=>t17]
add %t52, %t53 : def => [t53=>t53], use => [t52=>t52,t53=>t53]
movq (%t53), %t54 # default load : def => [t54=>t54], use => [t53=>t53]
movq %t54, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t54=>t54]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t54=>t54,t7=>rdi]
movq %t22, %t15 # default move : def => [t15=>r15], use => [t22=>t22]
movq %t21, %t14 # default move : def => [t14=>r14], use => [t21=>t21]
movq %t20, %t13 # default move : def => [t13=>r13], use => [t20=>t20]
movq %t19, %t12 # default move : def => [t12=>r12], use => [t19=>t19]
movq %t18, %t3 # default move : def => [t3=>rbx], use => [t18=>t18]
jmp L18 : def => null, use => null
L18: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L19: => [t0=>rbp,t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t18 # default move => [t0=>rbp,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t18=>t18]
movq %t12, %t19 # default move => [t0=>rbp,t13=>r13,t14=>r14,t15=>r15,t18=>t18,t19=>t19]
movq %t13, %t20 # default move => [t0=>rbp,t14=>r14,t15=>r15,t18=>t18,t19=>t19,t20=>t20]
movq %t14, %t21 # default move => [t0=>rbp,t15=>r15,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t15, %t22 # default move => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $0, %t23 # const => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23]
movq %t23, %t6 # move arg 1 to temp => [t0=>rbp,t6=>rsi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23]
movq $10, %t24 # const => [t0=>rbp,t6=>rsi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24]
movq %t24, %t7 # move arg 0 to temp => [t0=>rbp,t6=>rsi,t7=>rdi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24]
call initArray # default call => [t0=>rbp,t2=>rax,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t2, %t16 # default move => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t16, %t17 # default move => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t17, %t55 # spill s => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t55=>t55]
movq %t55, -8(%t0) # spill s => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $0, %t25 # const => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t25=>t25]
movq $8, %t26 # const => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t25=>t25,t26=>t26]
movq %t25, %t27 # mul lexp -> r => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t26=>t26,t27=>t27]
movq %t27, %t2 # mul r -> rax => [t0=>rbp,t2=>rax,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t26=>t26]
imul %t2 # mul rax * rexp  => [t0=>rbp,t2=>rax,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t2, %t27 # mul rax -> r => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t27=>t27]
movq -8(%t0), %t56 # spill l => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t27=>t27,t56=>t56]
movq %t56, %t17 # spill l => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t27=>t27]
movq %t17, %t28 # add lexp -> r => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t27=>t27,t28=>t28]
add %t27, %t28 => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t28=>t28]
movq $10, %t29 # const => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t28=>t28,t29=>t29]
movq %t29, (%t28) # store => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $9, %t30 # const => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t30=>t30]
movq $8, %t31 # const => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t30=>t30,t31=>t31]
movq %t30, %t32 # mul lexp -> r => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t31=>t31,t32=>t32]
movq %t32, %t2 # mul r -> rax => [t0=>rbp,t2=>rax,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t31=>t31]
imul %t2 # mul rax * rexp  => [t0=>rbp,t2=>rax,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t2, %t32 # mul rax -> r => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t32=>t32]
movq -8(%t0), %t57 # spill l => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t32=>t32,t57=>t57]
movq %t57, %t17 # spill l => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t32=>t32]
movq %t17, %t33 # add lexp -> r => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t32=>t32,t33=>t33]
add %t32, %t33 => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t33=>t33]
movq $9, %t34 # const => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t33=>t33,t34=>t34]
movq %t34, (%t33) # store => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $5, %t35 # const => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t35=>t35]
movq $8, %t36 # const => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t35=>t35,t36=>t36]
movq %t35, %t37 # mul lexp -> r => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t36=>t36,t37=>t37]
movq %t37, %t2 # mul r -> rax => [t0=>rbp,t2=>rax,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t36=>t36]
imul %t2 # mul rax * rexp  => [t0=>rbp,t2=>rax,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t2, %t37 # mul rax -> r => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t37=>t37]
movq -8(%t0), %t58 # spill l => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t37=>t37,t58=>t58]
movq %t58, %t17 # spill l => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t37=>t37]
movq %t17, %t38 # add lexp -> r => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t37=>t37,t38=>t38]
add %t37, %t38 => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t38=>t38]
movq $5, %t39 # const => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t38=>t38,t39=>t39]
movq %t39, (%t38) # store => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $5, %t40 # const => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t40=>t40]
movq $8, %t41 # const => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t40=>t40,t41=>t41]
movq %t40, %t42 # mul lexp -> r => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t41=>t41,t42=>t42]
movq %t42, %t2 # mul r -> rax => [t0=>rbp,t2=>rax,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t41=>t41]
imul %t2 # mul rax * rexp  => [t0=>rbp,t2=>rax,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t2, %t42 # mul rax -> r => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t42=>t42]
movq -8(%t0), %t59 # spill l => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t42=>t42,t59=>t59]
movq %t59, %t17 # spill l => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t42=>t42]
movq %t17, %t43 # add lexp -> r => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t42=>t42,t43=>t43]
add %t42, %t43 => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t43=>t43]
movq (%t43), %t44 # default load => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t44=>t44]
movq %t44, %t7 # move arg 0 to temp => [t0=>rbp,t7=>rdi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t44=>t44]
call printi # exp call ( no return value ) => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $0, %t45 # const => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t45=>t45]
movq $8, %t46 # const => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t45=>t45,t46=>t46]
movq %t45, %t47 # mul lexp -> r => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t46=>t46,t47=>t47]
movq %t47, %t2 # mul r -> rax => [t0=>rbp,t2=>rax,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t46=>t46]
imul %t2 # mul rax * rexp  => [t0=>rbp,t2=>rax,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t2, %t47 # mul rax -> r => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t47=>t47]
movq -8(%t0), %t60 # spill l => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t47=>t47,t60=>t60]
movq %t60, %t17 # spill l => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t47=>t47]
movq %t17, %t48 # add lexp -> r => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t47=>t47,t48=>t48]
add %t47, %t48 => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t48=>t48]
movq (%t48), %t49 # default load => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t49=>t49]
movq %t49, %t7 # move arg 0 to temp => [t0=>rbp,t7=>rdi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t49=>t49]
call printi # exp call ( no return value ) => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $9, %t50 # const => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t50=>t50]
movq $8, %t51 # const => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t50=>t50,t51=>t51]
movq %t50, %t52 # mul lexp -> r => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t51=>t51,t52=>t52]
movq %t52, %t2 # mul r -> rax => [t0=>rbp,t2=>rax,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t51=>t51]
imul %t2 # mul rax * rexp  => [t0=>rbp,t2=>rax,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t2, %t52 # mul rax -> r => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t52=>t52]
movq -8(%t0), %t61 # spill l => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t52=>t52,t61=>t61]
movq %t61, %t17 # spill l => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t52=>t52]
movq %t17, %t53 # add lexp -> r => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t52=>t52,t53=>t53]
add %t52, %t53 => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t53=>t53]
movq (%t53), %t54 # default load => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t54=>t54]
movq %t54, %t7 # move arg 0 to temp => [t7=>rdi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t54=>t54]
call printi # exp call ( no return value ) => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t22, %t15 # default move => [t15=>r15,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t21, %t14 # default move => [t14=>r14,t15=>r15,t18=>t18,t19=>t19,t20=>t20]
movq %t20, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t18=>t18,t19=>t19]
movq %t19, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t18=>t18]
movq %t18, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L18 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L18: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                  t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36 t37 t38 t39 t40 t41 t42 t43 t44 t45 t46 t47 t48 t49 t50 t51 t52 t53 t54 t55 t56 t57 t58 t59 t60 t61 rc def
L19:                                       |        |                             |   |   |   |                                                                                                                                                                                          6 null
movq %t3, %t18 # default move              |                                      |   |   |   |           |                                                                                                                                                                              6 [t18=>t18]
movq %t12, %t19 # default move             |                                          |   |   |           |   |                                                                                                                                                                          6 [t19=>t19]
movq %t13, %t20 # default move             |                                              |   |           |   |   |                                                                                                                                                                      6 [t20=>t20]
movq %t14, %t21 # default move             |                                                  |           |   |   |   |                                                                                                                                                                  6 [t21=>t21]
movq %t15, %t22 # default move             |                                                              |   |   |   |   |                                                                                                                                                              6 [t22=>t22]
movq $0, %t23 # const                      |                                                              |   |   |   |   |   |                                                                                                                                                          7 [t23=>t23]
movq %t23, %t6 # move arg 1 to temp        |                 |                                            |   |   |   |   |   |                                                                                                                                                          8 [t6=>rsi]
movq $10, %t24 # const                     |                 |                                            |   |   |   |   |   |   |                                                                                                                                                      9 [t24=>t24]
movq %t24, %t7 # move arg 0 to temp        |                 |  |                                         |   |   |   |   |   |   |                                                                                                                                                      10 [t7=>rdi]
call initArray # default call              |     |                                                        |   |   |   |   |                                                                                                                                                              7 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t2, %t16 # default move              |                                                      |       |   |   |   |   |                                                                                                                                                              7 [t16=>t16]
movq %t16, %t17 # default move             |                                                          |   |   |   |   |   |                                                                                                                                                              7 [t17=>t17]
movq %t17, %t55 # spill s                  |                                                              |   |   |   |   |                                                                                                                                   |                          7 [t55=>t55]
movq %t55, -8(%t0) # spill s               |                                                              |   |   |   |   |                                                                                                                                                              6 null
movq $0, %t25 # const                      |                                                              |   |   |   |   |           |                                                                                                                                                  7 [t25=>t25]
movq $8, %t26 # const                      |                                                              |   |   |   |   |           |   |                                                                                                                                              8 [t26=>t26]
movq %t25, %t27 # mul lexp -> r            |                                                              |   |   |   |   |               |   |                                                                                                                                          8 [t27=>t27]
movq %t27, %t2 # mul r -> rax              |     |                                                        |   |   |   |   |               |                                                                                                                                              8 [t2=>rax]
imul %t2 # mul rax * rexp                  |     |                                                        |   |   |   |   |                                                                                                                                                              7 [t2=>rax,t5=>rdx]
movq %t2, %t27 # mul rax -> r              |                                                              |   |   |   |   |                   |                                                                                                                                          7 [t27=>t27]
movq -8(%t0), %t56 # spill l               |                                                              |   |   |   |   |                   |                                                                                                                   |                      8 [t56=>t56]
movq %t56, %t17 # spill l                  |                                                          |   |   |   |   |   |                   |                                                                                                                                          8 [t17=>t17]
movq %t17, %t28 # add lexp -> r            |                                                              |   |   |   |   |                   |   |                                                                                                                                      8 [t28=>t28]
add %t27, %t28                             |                                                              |   |   |   |   |                       |                                                                                                                                      7 [t28=>t28]
movq $10, %t29 # const                     |                                                              |   |   |   |   |                       |   |                                                                                                                                  8 [t29=>t29]
movq %t29, (%t28) # store                  |                                                              |   |   |   |   |                                                                                                                                                              6 null
movq $9, %t30 # const                      |                                                              |   |   |   |   |                               |                                                                                                                              7 [t30=>t30]
movq $8, %t31 # const                      |                                                              |   |   |   |   |                               |   |                                                                                                                          8 [t31=>t31]
movq %t30, %t32 # mul lexp -> r            |                                                              |   |   |   |   |                                   |   |                                                                                                                      8 [t32=>t32]
movq %t32, %t2 # mul r -> rax              |     |                                                        |   |   |   |   |                                   |                                                                                                                          8 [t2=>rax]
imul %t2 # mul rax * rexp                  |     |                                                        |   |   |   |   |                                                                                                                                                              7 [t2=>rax,t5=>rdx]
movq %t2, %t32 # mul rax -> r              |                                                              |   |   |   |   |                                       |                                                                                                                      7 [t32=>t32]
movq -8(%t0), %t57 # spill l               |                                                              |   |   |   |   |                                       |                                                                                                   |                  8 [t57=>t57]
movq %t57, %t17 # spill l                  |                                                          |   |   |   |   |   |                                       |                                                                                                                      8 [t17=>t17]
movq %t17, %t33 # add lexp -> r            |                                                              |   |   |   |   |                                       |   |                                                                                                                  8 [t33=>t33]
add %t32, %t33                             |                                                              |   |   |   |   |                                           |                                                                                                                  7 [t33=>t33]
movq $9, %t34 # const                      |                                                              |   |   |   |   |                                           |   |                                                                                                              8 [t34=>t34]
movq %t34, (%t33) # store                  |                                                              |   |   |   |   |                                                                                                                                                              6 null
movq $5, %t35 # const                      |                                                              |   |   |   |   |                                                   |                                                                                                          7 [t35=>t35]
movq $8, %t36 # const                      |                                                              |   |   |   |   |                                                   |   |                                                                                                      8 [t36=>t36]
movq %t35, %t37 # mul lexp -> r            |                                                              |   |   |   |   |                                                       |   |                                                                                                  8 [t37=>t37]
movq %t37, %t2 # mul r -> rax              |     |                                                        |   |   |   |   |                                                       |                                                                                                      8 [t2=>rax]
imul %t2 # mul rax * rexp                  |     |                                                        |   |   |   |   |                                                                                                                                                              7 [t2=>rax,t5=>rdx]
movq %t2, %t37 # mul rax -> r              |                                                              |   |   |   |   |                                                           |                                                                                                  7 [t37=>t37]
movq -8(%t0), %t58 # spill l               |                                                              |   |   |   |   |                                                           |                                                                                   |              8 [t58=>t58]
movq %t58, %t17 # spill l                  |                                                          |   |   |   |   |   |                                                           |                                                                                                  8 [t17=>t17]
movq %t17, %t38 # add lexp -> r            |                                                              |   |   |   |   |                                                           |   |                                                                                              8 [t38=>t38]
add %t37, %t38                             |                                                              |   |   |   |   |                                                               |                                                                                              7 [t38=>t38]
movq $5, %t39 # const                      |                                                              |   |   |   |   |                                                               |   |                                                                                          8 [t39=>t39]
movq %t39, (%t38) # store                  |                                                              |   |   |   |   |                                                                                                                                                              6 null
movq $5, %t40 # const                      |                                                              |   |   |   |   |                                                                       |                                                                                      7 [t40=>t40]
movq $8, %t41 # const                      |                                                              |   |   |   |   |                                                                       |   |                                                                                  8 [t41=>t41]
movq %t40, %t42 # mul lexp -> r            |                                                              |   |   |   |   |                                                                           |   |                                                                              8 [t42=>t42]
movq %t42, %t2 # mul r -> rax              |     |                                                        |   |   |   |   |                                                                           |                                                                                  8 [t2=>rax]
imul %t2 # mul rax * rexp                  |     |                                                        |   |   |   |   |                                                                                                                                                              7 [t2=>rax,t5=>rdx]
movq %t2, %t42 # mul rax -> r              |                                                              |   |   |   |   |                                                                               |                                                                              7 [t42=>t42]
movq -8(%t0), %t59 # spill l               |                                                              |   |   |   |   |                                                                               |                                                                   |          8 [t59=>t59]
movq %t59, %t17 # spill l                  |                                                          |   |   |   |   |   |                                                                               |                                                                              8 [t17=>t17]
movq %t17, %t43 # add lexp -> r            |                                                              |   |   |   |   |                                                                               |   |                                                                          8 [t43=>t43]
add %t42, %t43                             |                                                              |   |   |   |   |                                                                                   |                                                                          7 [t43=>t43]
movq (%t43), %t44 # default load           |                                                              |   |   |   |   |                                                                                       |                                                                      7 [t44=>t44]
movq %t44, %t7 # move arg 0 to temp        |                    |                                         |   |   |   |   |                                                                                       |                                                                      8 [t7=>rdi]
call printi # exp call ( no return value ) |                                                              |   |   |   |   |                                                                                                                                                              6 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq $0, %t45 # const                      |                                                              |   |   |   |   |                                                                                           |                                                                  7 [t45=>t45]
movq $8, %t46 # const                      |                                                              |   |   |   |   |                                                                                           |   |                                                              8 [t46=>t46]
movq %t45, %t47 # mul lexp -> r            |                                                              |   |   |   |   |                                                                                               |   |                                                          8 [t47=>t47]
movq %t47, %t2 # mul r -> rax              |     |                                                        |   |   |   |   |                                                                                               |                                                              8 [t2=>rax]
imul %t2 # mul rax * rexp                  |     |                                                        |   |   |   |   |                                                                                                                                                              7 [t2=>rax,t5=>rdx]
movq %t2, %t47 # mul rax -> r              |                                                              |   |   |   |   |                                                                                                   |                                                          7 [t47=>t47]
movq -8(%t0), %t60 # spill l               |                                                              |   |   |   |   |                                                                                                   |                                                   |      8 [t60=>t60]
movq %t60, %t17 # spill l                  |                                                          |   |   |   |   |   |                                                                                                   |                                                          8 [t17=>t17]
movq %t17, %t48 # add lexp -> r            |                                                              |   |   |   |   |                                                                                                   |   |                                                      8 [t48=>t48]
add %t47, %t48                             |                                                              |   |   |   |   |                                                                                                       |                                                      7 [t48=>t48]
movq (%t48), %t49 # default load           |                                                              |   |   |   |   |                                                                                                           |                                                  7 [t49=>t49]
movq %t49, %t7 # move arg 0 to temp        |                    |                                         |   |   |   |   |                                                                                                           |                                                  8 [t7=>rdi]
call printi # exp call ( no return value ) |                                                              |   |   |   |   |                                                                                                                                                              6 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq $9, %t50 # const                      |                                                              |   |   |   |   |                                                                                                               |                                              7 [t50=>t50]
movq $8, %t51 # const                      |                                                              |   |   |   |   |                                                                                                               |   |                                          8 [t51=>t51]
movq %t50, %t52 # mul lexp -> r            |                                                              |   |   |   |   |                                                                                                                   |   |                                      8 [t52=>t52]
movq %t52, %t2 # mul r -> rax              |     |                                                        |   |   |   |   |                                                                                                                   |                                          8 [t2=>rax]
imul %t2 # mul rax * rexp                  |     |                                                        |   |   |   |   |                                                                                                                                                              7 [t2=>rax,t5=>rdx]
movq %t2, %t52 # mul rax -> r              |                                                              |   |   |   |   |                                                                                                                       |                                      7 [t52=>t52]
movq -8(%t0), %t61 # spill l                                                                              |   |   |   |   |                                                                                                                       |                                   |  7 [t61=>t61]
movq %t61, %t17 # spill l                                                                             |   |   |   |   |   |                                                                                                                       |                                      7 [t17=>t17]
movq %t17, %t53 # add lexp -> r                                                                           |   |   |   |   |                                                                                                                       |   |                                  7 [t53=>t53]
add %t52, %t53                                                                                            |   |   |   |   |                                                                                                                           |                                  6 [t53=>t53]
movq (%t53), %t54 # default load                                                                          |   |   |   |   |                                                                                                                               |                              6 [t54=>t54]
movq %t54, %t7 # move arg 0 to temp                             |                                         |   |   |   |   |                                                                                                                               |                              7 [t7=>rdi]
call printi # exp call ( no return value )                                                                |   |   |   |   |                                                                                                                                                              5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t22, %t15 # default move                                                                |           |   |   |   |                                                                                                                                                                  5 [t15=>r15]
movq %t21, %t14 # default move                                                            |   |           |   |   |                                                                                                                                                                      5 [t14=>r14]
movq %t20, %t13 # default move                                                        |   |   |           |   |                                                                                                                                                                          5 [t13=>r13]
movq %t19, %t12 # default move                                                    |   |   |   |           |                                                                                                                                                                              5 [t12=>r12]
movq %t18, %t3 # default move                       |                             |   |   |   |                                                                                                                                                                                          5 [t3=>rbx]
jmp L18                                             |                             |   |   |   |                                                                                                                                                                                          5 null
L18:                                                |                             |   |   |   |                                                                                                                                                                                          5 null
# sink                                                                                                                                                                                                                                                                                   0 null
[92mTest Result: ./tests/array_assign.tig passed.[0m
0: t18 interferes with:t15 t14 t13 t12 
1: t12 interferes with:t18 t15 t14 t13 
2: t13 interferes with:t19 t18 t15 t14 
3: t14 interferes with:t20 t19 t18 t15 
4: t15 interferes with:t21 t20 t19 t18 
5: t19 interferes with:t18 t15 t14 t13 
6: t20 interferes with:t19 t18 t15 t14 
7: t21 interferes with:t20 t19 t18 t15 
8: t22 interferes with:t21 t20 t19 t18 
9: t23 interferes with:t22 t21 t20 t19 t18 
10: t6 interferes with:t2 t22 t21 t20 t19 t18 
11: t24 interferes with:t23 t22 t21 t20 t19 t18 t6 
12: t7 interferes with:t2 t23 t22 t21 t20 t19 t18 t6 
13: t2 interferes with:t26 t17 t22 t21 t20 t19 t18 
14: t4 interferes with:t22 t21 t20 t19 t18 t2 
15: t5 interferes with:t17 t22 t21 t20 t19 t18 t2 
16: t8 interferes with:t22 t21 t20 t19 t18 t2 
17: t9 interferes with:t22 t21 t20 t19 t18 t2 
18: t10 interferes with:t22 t21 t20 t19 t18 t2 
19: t11 interferes with:t22 t21 t20 t19 t18 t2 
20: t16 interferes with:t22 t21 t20 t19 t18 
21: t17 interferes with:t22 t21 t20 t19 t18 
22: t25 interferes with:t22 t21 t20 t19 t18 t17 
23: t26 interferes with:t25 t22 t21 t20 t19 t18 t17 
24: t27 interferes with:t26 t22 t21 t20 t19 t18 t17 
25: t28 interferes with:t27 t22 t21 t20 t19 t18 
26: t29 interferes with:t22 t21 t20 t19 t18 
27: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L4: : def => null, use => null
movq %t3, %t18 # default move : def => [t18=>t18], use => [t3=>rbx]
movq %t12, %t19 # default move : def => [t19=>t19], use => [t12=>r12]
movq %t13, %t20 # default move : def => [t20=>t20], use => [t13=>r13]
movq %t14, %t21 # default move : def => [t21=>t21], use => [t14=>r14]
movq %t15, %t22 # default move : def => [t22=>t22], use => [t15=>r15]
movq $0, %t23 # const : def => [t23=>t23], use => null
movq %t23, %t6 # move arg 1 to temp : def => [t6=>rsi], use => [t23=>t23]
movq $10, %t24 # const : def => [t24=>t24], use => null
movq %t24, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t24=>t24]
call initArray # default call : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t23=>t23,t6=>rsi,t24=>t24,t7=>rdi]
movq %t2, %t16 # default move : def => [t16=>t16], use => [t2=>rax]
movq %t16, %t17 # default move : def => [t17=>t17], use => [t16=>t16]
movq $0, %t25 # const : def => [t25=>t25], use => null
movq $8, %t26 # const : def => [t26=>t26], use => null
movq %t25, %t27 # mul lexp -> r : def => [t27=>t27], use => [t25=>t25]
movq %t27, %t2 # mul r -> rax : def => [t2=>rax], use => [t27=>t27]
imul %t2 # mul rax * rexp  : def => [t2=>rax,t5=>rdx], use => [t2=>rax,t26=>t26]
movq %t2, %t27 # mul rax -> r : def => [t27=>t27], use => [t2=>rax]
movq %t17, %t28 # add lexp -> r : def => [t28=>t28], use => [t17=>t17]
add %t27, %t28 : def => [t28=>t28], use => [t27=>t27,t28=>t28]
movq (%t28), %t29 # default load : def => [t29=>t29], use => [t28=>t28]
movq %t29, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t29=>t29]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t29=>t29,t7=>rdi]
movq %t22, %t15 # default move : def => [t15=>r15], use => [t22=>t22]
movq %t21, %t14 # default move : def => [t14=>r14], use => [t21=>t21]
movq %t20, %t13 # default move : def => [t13=>r13], use => [t20=>t20]
movq %t19, %t12 # default move : def => [t12=>r12], use => [t19=>t19]
movq %t18, %t3 # default move : def => [t3=>rbx], use => [t18=>t18]
jmp L3 : def => null, use => null
L3: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L4: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t18 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t18=>t18]
movq %t12, %t19 # default move => [t13=>r13,t14=>r14,t15=>r15,t18=>t18,t19=>t19]
movq %t13, %t20 # default move => [t14=>r14,t15=>r15,t18=>t18,t19=>t19,t20=>t20]
movq %t14, %t21 # default move => [t15=>r15,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t15, %t22 # default move => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $0, %t23 # const => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23]
movq %t23, %t6 # move arg 1 to temp => [t6=>rsi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23]
movq $10, %t24 # const => [t6=>rsi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24]
movq %t24, %t7 # move arg 0 to temp => [t6=>rsi,t7=>rdi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24]
call initArray # default call => [t2=>rax,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t2, %t16 # default move => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t16, %t17 # default move => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $0, %t25 # const => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t25=>t25]
movq $8, %t26 # const => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t25=>t25,t26=>t26]
movq %t25, %t27 # mul lexp -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t26=>t26,t27=>t27]
movq %t27, %t2 # mul r -> rax => [t2=>rax,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t26=>t26]
imul %t2 # mul rax * rexp  => [t2=>rax,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t2, %t27 # mul rax -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t27=>t27]
movq %t17, %t28 # add lexp -> r => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t27=>t27,t28=>t28]
add %t27, %t28 => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t28=>t28]
movq (%t28), %t29 # default load => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t29=>t29]
movq %t29, %t7 # move arg 0 to temp => [t7=>rdi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t29=>t29]
call printi # exp call ( no return value ) => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t22, %t15 # default move => [t15=>r15,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t21, %t14 # default move => [t14=>r14,t15=>r15,t18=>t18,t19=>t19,t20=>t20]
movq %t20, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t18=>t18,t19=>t19]
movq %t19, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t18=>t18]
movq %t18, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L3 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L3: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                  t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 rc def
L4:                                                 |                             |   |   |   |                                                          5 null
movq %t3, %t18 # default move                                                     |   |   |   |           |                                              5 [t18=>t18]
movq %t12, %t19 # default move                                                        |   |   |           |   |                                          5 [t19=>t19]
movq %t13, %t20 # default move                                                            |   |           |   |   |                                      5 [t20=>t20]
movq %t14, %t21 # default move                                                                |           |   |   |   |                                  5 [t21=>t21]
movq %t15, %t22 # default move                                                                            |   |   |   |   |                              5 [t22=>t22]
movq $0, %t23 # const                                                                                     |   |   |   |   |   |                          6 [t23=>t23]
movq %t23, %t6 # move arg 1 to temp                          |                                            |   |   |   |   |   |                          7 [t6=>rsi]
movq $10, %t24 # const                                       |                                            |   |   |   |   |   |   |                      8 [t24=>t24]
movq %t24, %t7 # move arg 0 to temp                          |  |                                         |   |   |   |   |   |   |                      9 [t7=>rdi]
call initArray # default call                    |                                                        |   |   |   |   |                              6 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t2, %t16 # default move                                                                     |       |   |   |   |   |                              6 [t16=>t16]
movq %t16, %t17 # default move                                                                        |   |   |   |   |   |                              6 [t17=>t17]
movq $0, %t25 # const                                                                                 |   |   |   |   |   |           |                  7 [t25=>t25]
movq $8, %t26 # const                                                                                 |   |   |   |   |   |           |   |              8 [t26=>t26]
movq %t25, %t27 # mul lexp -> r                                                                       |   |   |   |   |   |               |   |          8 [t27=>t27]
movq %t27, %t2 # mul r -> rax                    |                                                    |   |   |   |   |   |               |              8 [t2=>rax]
imul %t2 # mul rax * rexp                        |                                                    |   |   |   |   |   |                              7 [t2=>rax,t5=>rdx]
movq %t2, %t27 # mul rax -> r                                                                         |   |   |   |   |   |                   |          7 [t27=>t27]
movq %t17, %t28 # add lexp -> r                                                                           |   |   |   |   |                   |   |      7 [t28=>t28]
add %t27, %t28                                                                                            |   |   |   |   |                       |      6 [t28=>t28]
movq (%t28), %t29 # default load                                                                          |   |   |   |   |                           |  6 [t29=>t29]
movq %t29, %t7 # move arg 0 to temp                             |                                         |   |   |   |   |                           |  7 [t7=>rdi]
call printi # exp call ( no return value )                                                                |   |   |   |   |                              5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t22, %t15 # default move                                                                |           |   |   |   |                                  5 [t15=>r15]
movq %t21, %t14 # default move                                                            |   |           |   |   |                                      5 [t14=>r14]
movq %t20, %t13 # default move                                                        |   |   |           |   |                                          5 [t13=>r13]
movq %t19, %t12 # default move                                                    |   |   |   |           |                                              5 [t12=>r12]
movq %t18, %t3 # default move                       |                             |   |   |   |                                                          5 [t3=>rbx]
jmp L3                                              |                             |   |   |   |                                                          5 null
L3:                                                 |                             |   |   |   |                                                          5 null
# sink                                                                                                                                                   0 null
[92mTest Result: ./tests/array_dec.tig passed.[0m
0: t23 interferes with:t15 t14 t13 t12 t0 
1: t0 interferes with:
2: t12 interferes with:t23 t15 t14 t13 
3: t13 interferes with:t24 t23 t15 t14 
4: t14 interferes with:t25 t24 t23 t15 
5: t15 interferes with:t26 t25 t24 t23 
6: t24 interferes with:t23 t15 t14 t13 t0 
7: t25 interferes with:t24 t23 t15 t14 t0 
8: t26 interferes with:t25 t24 t23 t15 t0 
9: t27 interferes with:t26 t25 t24 t23 t0 
10: t29 interferes with:t27 t26 t25 t24 t23 t0 
11: t6 interferes with:t2 t27 t26 t25 t24 t23 t0 
12: t7 interferes with:t2 t29 t27 t26 t25 t24 t23 t6 
13: t2 interferes with:t27 t26 t25 t24 t23 
14: t4 interferes with:t27 t26 t25 t24 t23 t2 
15: t5 interferes with:t27 t26 t25 t24 t23 t2 
16: t8 interferes with:t27 t26 t25 t24 t23 t2 
17: t9 interferes with:t27 t26 t25 t24 t23 t2 
18: t10 interferes with:t27 t26 t25 t24 t23 t2 
19: t11 interferes with:t27 t26 t25 t24 t23 t2 
20: t28 interferes with:t27 t26 t25 t24 t23 
21: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L5: : def => null, use => null
movq %t3, %t23 # default move : def => [t23=>t23], use => [t3=>rbx]
movq %t12, %t24 # default move : def => [t24=>t24], use => [t12=>r12]
movq %t13, %t25 # default move : def => [t25=>t25], use => [t13=>r13]
movq %t14, %t26 # default move : def => [t26=>t26], use => [t14=>r14]
movq %t15, %t27 # default move : def => [t27=>t27], use => [t15=>r15]
movq $5, %t29 # const : def => [t29=>t29], use => null
movq %t29, %t6 # move arg 1 to temp : def => [t6=>rsi], use => [t29=>t29]
movq %t0, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t0=>rbp]
call L0 # default call : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t29=>t29,t6=>rsi,t0=>rbp,t7=>rdi]
movq %t2, %t28 # default move : def => [t28=>t28], use => [t2=>rax]
movq %t28, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t28=>t28]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t28=>t28,t7=>rdi]
movq %t27, %t15 # default move : def => [t15=>r15], use => [t27=>t27]
movq %t26, %t14 # default move : def => [t14=>r14], use => [t26=>t26]
movq %t25, %t13 # default move : def => [t13=>r13], use => [t25=>t25]
movq %t24, %t12 # default move : def => [t12=>r12], use => [t24=>t24]
movq %t23, %t3 # default move : def => [t3=>rbx], use => [t23=>t23]
jmp L4 : def => null, use => null
L4: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L5: => [t0=>rbp,t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t23 # default move => [t0=>rbp,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t23=>t23]
movq %t12, %t24 # default move => [t0=>rbp,t13=>r13,t14=>r14,t15=>r15,t23=>t23,t24=>t24]
movq %t13, %t25 # default move => [t0=>rbp,t14=>r14,t15=>r15,t23=>t23,t24=>t24,t25=>t25]
movq %t14, %t26 # default move => [t0=>rbp,t15=>r15,t23=>t23,t24=>t24,t25=>t25,t26=>t26]
movq %t15, %t27 # default move => [t0=>rbp,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27]
movq $5, %t29 # const => [t0=>rbp,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t29=>t29]
movq %t29, %t6 # move arg 1 to temp => [t0=>rbp,t6=>rsi,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t29=>t29]
movq %t0, %t7 # move arg 0 to temp => [t0=>rbp,t6=>rsi,t7=>rdi,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t29=>t29]
call L0 # default call => [t2=>rax,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27]
movq %t2, %t28 # default move => [t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28]
movq %t28, %t7 # move arg 0 to temp => [t7=>rdi,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28]
call printi # exp call ( no return value ) => [t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27]
movq %t27, %t15 # default move => [t15=>r15,t23=>t23,t24=>t24,t25=>t25,t26=>t26]
movq %t26, %t14 # default move => [t14=>r14,t15=>r15,t23=>t23,t24=>t24,t25=>t25]
movq %t25, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t23=>t23,t24=>t24]
movq %t24, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t23=>t23]
movq %t23, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L4 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L4: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                  t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 rc def
L5:                                        |        |                             |   |   |   |                                                          6 null
movq %t3, %t23 # default move              |                                      |   |   |   |                               |                          6 [t23=>t23]
movq %t12, %t24 # default move             |                                          |   |   |                               |   |                      6 [t24=>t24]
movq %t13, %t25 # default move             |                                              |   |                               |   |   |                  6 [t25=>t25]
movq %t14, %t26 # default move             |                                                  |                               |   |   |   |              6 [t26=>t26]
movq %t15, %t27 # default move             |                                                                                  |   |   |   |   |          6 [t27=>t27]
movq $5, %t29 # const                      |                                                                                  |   |   |   |   |       |  7 [t29=>t29]
movq %t29, %t6 # move arg 1 to temp        |                 |                                                                |   |   |   |   |       |  8 [t6=>rsi]
movq %t0, %t7 # move arg 0 to temp         |                 |  |                                                             |   |   |   |   |       |  9 [t7=>rdi]
call L0 # default call                           |                                                                            |   |   |   |   |          6 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t2, %t28 # default move                                                                                                 |   |   |   |   |   |      6 [t28=>t28]
movq %t28, %t7 # move arg 0 to temp                             |                                                             |   |   |   |   |   |      7 [t7=>rdi]
call printi # exp call ( no return value )                                                                                    |   |   |   |   |          5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t27, %t15 # default move                                                                |                               |   |   |   |              5 [t15=>r15]
movq %t26, %t14 # default move                                                            |   |                               |   |   |                  5 [t14=>r14]
movq %t25, %t13 # default move                                                        |   |   |                               |   |                      5 [t13=>r13]
movq %t24, %t12 # default move                                                    |   |   |   |                               |                          5 [t12=>r12]
movq %t23, %t3 # default move                       |                             |   |   |   |                                                          5 [t3=>rbx]
jmp L4                                              |                             |   |   |   |                                                          5 null
L4:                                                 |                             |   |   |   |                                                          5 null
# sink                                                                                                                                                   0 null
0: t16 interferes with:t15 t14 t13 t12 t3 t0 
1: t0 interferes with:
2: t3 interferes with:t15 t14 t13 t12 
3: t12 interferes with:t18 t15 t14 t13 
4: t13 interferes with:t19 t18 t15 t14 
5: t14 interferes with:t20 t19 t18 t15 
6: t15 interferes with:t21 t20 t19 t18 
7: t18 interferes with:t16 t15 t14 t13 t12 t0 
8: t19 interferes with:t18 t16 t15 t14 t13 t0 
9: t20 interferes with:t19 t18 t16 t15 t14 t0 
10: t21 interferes with:t20 t19 t18 t16 t15 t0 
11: t22 interferes with:t21 t20 t19 t18 t16 t0 
12: t32 interferes with:t22 t21 t20 t19 t18 t16 t0 
13: t31 interferes with:t22 t21 t20 t19 t18 t0 
14: t33 interferes with:t31 t22 t21 t20 t19 t18 t16 t0 
15: t34 interferes with:t33 t31 t22 t21 t20 t19 t18 t0 
16: t6 interferes with:t2 t31 t22 t21 t20 t19 t18 t0 
17: t35 interferes with:t34 t31 t22 t21 t20 t19 t18 t6 t0 
18: t36 interferes with:t34 t31 t22 t21 t20 t19 t18 t6 t0 
19: t37 interferes with:t34 t31 t22 t21 t20 t19 t18 t6 
20: t7 interferes with:t2 t34 t31 t22 t21 t20 t19 t18 t6 
21: t2 interferes with:t30 t31 t22 t21 t20 t19 t18 
22: t4 interferes with:t31 t22 t21 t20 t19 t18 t2 
23: t5 interferes with:t31 t22 t21 t20 t19 t18 t2 
24: t8 interferes with:t31 t22 t21 t20 t19 t18 t2 
25: t9 interferes with:t31 t22 t21 t20 t19 t18 t2 
26: t10 interferes with:t31 t22 t21 t20 t19 t18 t2 
27: t11 interferes with:t31 t22 t21 t20 t19 t18 t2 
28: t30 interferes with:t31 t22 t21 t20 t19 t18 
29: t38 interferes with:t30 t22 t21 t20 t19 t18 
30: t17 interferes with:t22 t21 t20 t19 t18 
31: t39 interferes with:t22 t21 t20 t19 t18 
registers:14
### Uses and Defs
L7: : def => null, use => null
movq %t7, -8(%t0) # store to offset : def => null, use => [t7=>rdi,t0=>rbp]
movq %t6, %t16 # default move : def => [t16=>t16], use => [t6=>rsi]
movq %t3, %t18 # default move : def => [t18=>t18], use => [t3=>rbx]
movq %t12, %t19 # default move : def => [t19=>t19], use => [t12=>r12]
movq %t13, %t20 # default move : def => [t20=>t20], use => [t13=>r13]
movq %t14, %t21 # default move : def => [t21=>t21], use => [t14=>r14]
movq %t15, %t22 # default move : def => [t22=>t22], use => [t15=>r15]
movq $1, %t32 # const : def => [t32=>t32], use => null
cmp %t16, %t32 : def => null, use => [t16=>t16,t32=>t32]
je L1 : def => null, use => null
L2: : def => null, use => null
movq %t16, %t31 # default move : def => [t31=>t31], use => [t16=>t16]
movq $1, %t33 # const : def => [t33=>t33], use => null
movq %t16, %t34 # minus lexp -> r : def => [t34=>t34], use => [t16=>t16]
sub %t33, %t34 : def => [t34=>t34], use => [t33=>t33,t34=>t34]
movq %t34, %t6 # move arg 1 to temp : def => [t6=>rsi], use => [t34=>t34]
movq $0, %t35 # const : def => [t35=>t35], use => null
movq %t35, %t36 # add lexp -> r : def => [t36=>t36], use => [t35=>t35]
add %t0, %t36 : def => [t36=>t36], use => [t0=>rbp,t36=>t36]
movq (%t36), %t37 # default load : def => [t37=>t37], use => [t36=>t36]
movq %t37, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t37=>t37]
call L0 # default call : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t34=>t34,t6=>rsi,t37=>t37,t7=>rdi]
movq %t2, %t30 # default move : def => [t30=>t30], use => [t2=>rax]
movq %t31, %t38 # mul lexp -> r : def => [t38=>t38], use => [t31=>t31]
movq %t38, %t2 # mul r -> rax : def => [t2=>rax], use => [t38=>t38]
imul %t2 # mul rax * rexp  : def => [t2=>rax,t5=>rdx], use => [t2=>rax,t30=>t30]
movq %t2, %t38 # mul rax -> r : def => [t38=>t38], use => [t2=>rax]
movq %t38, %t17 # default move : def => [t17=>t17], use => [t38=>t38]
L3: : def => null, use => null
movq %t17, %t2 # default move : def => [t2=>rax], use => [t17=>t17]
movq %t22, %t15 # default move : def => [t15=>r15], use => [t22=>t22]
movq %t21, %t14 # default move : def => [t14=>r14], use => [t21=>t21]
movq %t20, %t13 # default move : def => [t13=>r13], use => [t20=>t20]
movq %t19, %t12 # default move : def => [t12=>r12], use => [t19=>t19]
movq %t18, %t3 # default move : def => [t3=>rbx], use => [t18=>t18]
jmp L6 : def => null, use => null
L1: : def => null, use => null
movq $1, %t39 # const : def => [t39=>t39], use => null
movq %t39, %t17 # default move : def => [t17=>t17], use => [t39=>t39]
jmp L3 : def => null, use => null
L6: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L7: => [t0=>rbp,t3=>rbx,t6=>rsi,t7=>rdi,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t7, -8(%t0) # store to offset => [t0=>rbp,t3=>rbx,t6=>rsi,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t6, %t16 # default move => [t0=>rbp,t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16]
movq %t3, %t18 # default move => [t0=>rbp,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t18=>t18]
movq %t12, %t19 # default move => [t0=>rbp,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t18=>t18,t19=>t19]
movq %t13, %t20 # default move => [t0=>rbp,t14=>r14,t15=>r15,t16=>t16,t18=>t18,t19=>t19,t20=>t20]
movq %t14, %t21 # default move => [t0=>rbp,t15=>r15,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t15, %t22 # default move => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $1, %t32 # const => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t32=>t32]
cmp %t16, %t32 => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
je L1 => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
L2: => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t16, %t31 # default move => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t31=>t31]
movq $1, %t33 # const => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t31=>t31,t33=>t33]
movq %t16, %t34 # minus lexp -> r => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t31=>t31,t33=>t33,t34=>t34]
sub %t33, %t34 => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t31=>t31,t34=>t34]
movq %t34, %t6 # move arg 1 to temp => [t0=>rbp,t6=>rsi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t31=>t31,t34=>t34]
movq $0, %t35 # const => [t0=>rbp,t6=>rsi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t31=>t31,t34=>t34,t35=>t35]
movq %t35, %t36 # add lexp -> r => [t0=>rbp,t6=>rsi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t31=>t31,t34=>t34,t36=>t36]
add %t0, %t36 => [t6=>rsi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t31=>t31,t34=>t34,t36=>t36]
movq (%t36), %t37 # default load => [t6=>rsi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t31=>t31,t34=>t34,t37=>t37]
movq %t37, %t7 # move arg 0 to temp => [t6=>rsi,t7=>rdi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t31=>t31,t34=>t34,t37=>t37]
call L0 # default call => [t2=>rax,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t31=>t31]
movq %t2, %t30 # default move => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t30=>t30,t31=>t31]
movq %t31, %t38 # mul lexp -> r => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t30=>t30,t38=>t38]
movq %t38, %t2 # mul r -> rax => [t2=>rax,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t30=>t30]
imul %t2 # mul rax * rexp  => [t2=>rax,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t2, %t38 # mul rax -> r => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t38=>t38]
movq %t38, %t17 # default move => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
L3: => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t17, %t2 # default move => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t22, %t15 # default move => [t15=>r15,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t21, %t14 # default move => [t14=>r14,t15=>r15,t18=>t18,t19=>t19,t20=>t20]
movq %t20, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t18=>t18,t19=>t19]
movq %t19, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t18=>t18]
movq %t18, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L6 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L1: => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $1, %t39 # const => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t39=>t39]
movq %t39, %t17 # default move => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
jmp L3 => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
L6: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                           t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36 t37 t38 t39 rc def
L7:                                 |        |        |  |                 |   |   |   |                                                                                                  8 null
movq %t7, -8(%t0) # store to offset |        |        |                    |   |   |   |                                                                                                  7 null
movq %t6, %t16 # default move       |        |                             |   |   |   |   |                                                                                              7 [t16=>t16]
movq %t3, %t18 # default move       |                                      |   |   |   |   |       |                                                                                      7 [t18=>t18]
movq %t12, %t19 # default move      |                                          |   |   |   |       |   |                                                                                  7 [t19=>t19]
movq %t13, %t20 # default move      |                                              |   |   |       |   |   |                                                                              7 [t20=>t20]
movq %t14, %t21 # default move      |                                                  |   |       |   |   |   |                                                                          7 [t21=>t21]
movq %t15, %t22 # default move      |                                                      |       |   |   |   |   |                                                                      7 [t22=>t22]
movq $1, %t32 # const               |                                                      |       |   |   |   |   |                                       |                              8 [t32=>t32]
cmp %t16, %t32                      |                                                      |       |   |   |   |   |                                                                      7 null
je L1                               |                                                      |       |   |   |   |   |                                                                      7 null
L2:                                 |                                                      |       |   |   |   |   |                                                                      7 null
movq %t16, %t31 # default move      |                                                      |       |   |   |   |   |                                   |                                  8 [t31=>t31]
movq $1, %t33 # const               |                                                      |       |   |   |   |   |                                   |       |                          9 [t33=>t33]
movq %t16, %t34 # minus lexp -> r   |                                                              |   |   |   |   |                                   |       |   |                      9 [t34=>t34]
sub %t33, %t34                      |                                                              |   |   |   |   |                                   |           |                      8 [t34=>t34]
movq %t34, %t6 # move arg 1 to temp |                 |                                            |   |   |   |   |                                   |           |                      9 [t6=>rsi]
movq $0, %t35 # const               |                 |                                            |   |   |   |   |                                   |           |   |                  10 [t35=>t35]
movq %t35, %t36 # add lexp -> r     |                 |                                            |   |   |   |   |                                   |           |       |              10 [t36=>t36]
add %t0, %t36                                         |                                            |   |   |   |   |                                   |           |       |              9 [t36=>t36]
movq (%t36), %t37 # default load                      |                                            |   |   |   |   |                                   |           |           |          9 [t37=>t37]
movq %t37, %t7 # move arg 0 to temp                   |  |                                         |   |   |   |   |                                   |           |           |          10 [t7=>rdi]
call L0 # default call                    |                                                        |   |   |   |   |                                   |                                  7 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t2, %t30 # default move                                                                      |   |   |   |   |                               |   |                                  7 [t30=>t30]
movq %t31, %t38 # mul lexp -> r                                                                    |   |   |   |   |                               |                               |      7 [t38=>t38]
movq %t38, %t2 # mul r -> rax             |                                                        |   |   |   |   |                               |                                      7 [t2=>rax]
imul %t2 # mul rax * rexp                 |                                                        |   |   |   |   |                                                                      6 [t2=>rax,t5=>rdx]
movq %t2, %t38 # mul rax -> r                                                                      |   |   |   |   |                                                               |      6 [t38=>t38]
movq %t38, %t17 # default move                                                                 |   |   |   |   |   |                                                                      6 [t17=>t17]
L3:                                                                                            |   |   |   |   |   |                                                                      6 null
movq %t17, %t2 # default move                                                                      |   |   |   |   |                                                                      5 [t2=>rax]
movq %t22, %t15 # default move                                                         |           |   |   |   |                                                                          5 [t15=>r15]
movq %t21, %t14 # default move                                                     |   |           |   |   |                                                                              5 [t14=>r14]
movq %t20, %t13 # default move                                                 |   |   |           |   |                                                                                  5 [t13=>r13]
movq %t19, %t12 # default move                                             |   |   |   |           |                                                                                      5 [t12=>r12]
movq %t18, %t3 # default move                |                             |   |   |   |                                                                                                  5 [t3=>rbx]
jmp L6                                       |                             |   |   |   |                                                                                                  5 null
L1:                                                                                                |   |   |   |   |                                                                      5 null
movq $1, %t39 # const                                                                              |   |   |   |   |                                                                   |  6 [t39=>t39]
movq %t39, %t17 # default move                                                                 |   |   |   |   |   |                                                                      6 [t17=>t17]
jmp L3                                                                                         |   |   |   |   |   |                                                                      6 null
L6:                                          |                             |   |   |   |                                                                                                  5 null
# sink                                                                                                                                                                                    0 null
t31 cost: 2
0: t16 interferes with:t15 t14 t13 t12 t3 t0 
1: t0 interferes with:
2: t3 interferes with:t15 t14 t13 t12 
3: t12 interferes with:t18 t15 t14 t13 
4: t13 interferes with:t19 t18 t15 t14 
5: t14 interferes with:t20 t19 t18 t15 
6: t15 interferes with:t21 t20 t19 t18 
7: t18 interferes with:t16 t15 t14 t13 t12 t0 
8: t19 interferes with:t18 t16 t15 t14 t13 t0 
9: t20 interferes with:t19 t18 t16 t15 t14 t0 
10: t21 interferes with:t20 t19 t18 t16 t15 t0 
11: t22 interferes with:t21 t20 t19 t18 t16 t0 
12: t32 interferes with:t22 t21 t20 t19 t18 t16 t0 
13: t31 interferes with:t30 t22 t21 t20 t19 t18 t0 
14: t40 interferes with:t22 t21 t20 t19 t18 t16 t0 
15: t33 interferes with:t22 t21 t20 t19 t18 t16 t0 
16: t34 interferes with:t33 t22 t21 t20 t19 t18 t0 
17: t6 interferes with:t2 t22 t21 t20 t19 t18 t0 
18: t35 interferes with:t34 t22 t21 t20 t19 t18 t6 t0 
19: t36 interferes with:t34 t22 t21 t20 t19 t18 t6 t0 
20: t37 interferes with:t34 t22 t21 t20 t19 t18 t6 t0 
21: t7 interferes with:t2 t34 t22 t21 t20 t19 t18 t6 t0 
22: t2 interferes with:t30 t22 t21 t20 t19 t18 t0 
23: t4 interferes with:t22 t21 t20 t19 t18 t2 t0 
24: t5 interferes with:t22 t21 t20 t19 t18 t2 t0 
25: t8 interferes with:t22 t21 t20 t19 t18 t2 t0 
26: t9 interferes with:t22 t21 t20 t19 t18 t2 t0 
27: t10 interferes with:t22 t21 t20 t19 t18 t2 t0 
28: t11 interferes with:t22 t21 t20 t19 t18 t2 t0 
29: t30 interferes with:t22 t21 t20 t19 t18 t0 
30: t41 interferes with:t30 t22 t21 t20 t19 t18 
31: t38 interferes with:t30 t22 t21 t20 t19 t18 
32: t17 interferes with:t22 t21 t20 t19 t18 
33: t39 interferes with:t22 t21 t20 t19 t18 
registers:14
### Uses and Defs
L7: : def => null, use => null
movq %t7, -8(%t0) # store to offset : def => null, use => [t7=>rdi,t0=>rbp]
movq %t6, %t16 # default move : def => [t16=>t16], use => [t6=>rsi]
movq %t3, %t18 # default move : def => [t18=>t18], use => [t3=>rbx]
movq %t12, %t19 # default move : def => [t19=>t19], use => [t12=>r12]
movq %t13, %t20 # default move : def => [t20=>t20], use => [t13=>r13]
movq %t14, %t21 # default move : def => [t21=>t21], use => [t14=>r14]
movq %t15, %t22 # default move : def => [t22=>t22], use => [t15=>r15]
movq $1, %t32 # const : def => [t32=>t32], use => null
cmp %t16, %t32 : def => null, use => [t16=>t16,t32=>t32]
je L1 : def => null, use => null
L2: : def => null, use => null
movq %t16, %t31 # default move : def => [t31=>t31], use => [t16=>t16]
movq %t31, %t40 # spill s : def => [t40=>t40], use => [t31=>t31]
movq %t40, -16(%t0) # spill s : def => null, use => [t0=>rbp,t40=>t40]
movq $1, %t33 # const : def => [t33=>t33], use => null
movq %t16, %t34 # minus lexp -> r : def => [t34=>t34], use => [t16=>t16]
sub %t33, %t34 : def => [t34=>t34], use => [t33=>t33,t34=>t34]
movq %t34, %t6 # move arg 1 to temp : def => [t6=>rsi], use => [t34=>t34]
movq $0, %t35 # const : def => [t35=>t35], use => null
movq %t35, %t36 # add lexp -> r : def => [t36=>t36], use => [t35=>t35]
add %t0, %t36 : def => [t36=>t36], use => [t0=>rbp,t36=>t36]
movq (%t36), %t37 # default load : def => [t37=>t37], use => [t36=>t36]
movq %t37, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t37=>t37]
call L0 # default call : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t34=>t34,t6=>rsi,t37=>t37,t7=>rdi]
movq %t2, %t30 # default move : def => [t30=>t30], use => [t2=>rax]
movq -16(%t0), %t41 # spill l : def => [t41=>t41], use => [t0=>rbp]
movq %t41, %t31 # spill l : def => [t31=>t31], use => [t41=>t41]
movq %t31, %t38 # mul lexp -> r : def => [t38=>t38], use => [t31=>t31]
movq %t38, %t2 # mul r -> rax : def => [t2=>rax], use => [t38=>t38]
imul %t2 # mul rax * rexp  : def => [t2=>rax,t5=>rdx], use => [t2=>rax,t30=>t30]
movq %t2, %t38 # mul rax -> r : def => [t38=>t38], use => [t2=>rax]
movq %t38, %t17 # default move : def => [t17=>t17], use => [t38=>t38]
L3: : def => null, use => null
movq %t17, %t2 # default move : def => [t2=>rax], use => [t17=>t17]
movq %t22, %t15 # default move : def => [t15=>r15], use => [t22=>t22]
movq %t21, %t14 # default move : def => [t14=>r14], use => [t21=>t21]
movq %t20, %t13 # default move : def => [t13=>r13], use => [t20=>t20]
movq %t19, %t12 # default move : def => [t12=>r12], use => [t19=>t19]
movq %t18, %t3 # default move : def => [t3=>rbx], use => [t18=>t18]
jmp L6 : def => null, use => null
L1: : def => null, use => null
movq $1, %t39 # const : def => [t39=>t39], use => null
movq %t39, %t17 # default move : def => [t17=>t17], use => [t39=>t39]
jmp L3 : def => null, use => null
L6: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L7: => [t0=>rbp,t3=>rbx,t6=>rsi,t7=>rdi,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t7, -8(%t0) # store to offset => [t0=>rbp,t3=>rbx,t6=>rsi,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t6, %t16 # default move => [t0=>rbp,t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16]
movq %t3, %t18 # default move => [t0=>rbp,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t18=>t18]
movq %t12, %t19 # default move => [t0=>rbp,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t18=>t18,t19=>t19]
movq %t13, %t20 # default move => [t0=>rbp,t14=>r14,t15=>r15,t16=>t16,t18=>t18,t19=>t19,t20=>t20]
movq %t14, %t21 # default move => [t0=>rbp,t15=>r15,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t15, %t22 # default move => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $1, %t32 # const => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t32=>t32]
cmp %t16, %t32 => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
je L1 => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
L2: => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t16, %t31 # default move => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t31=>t31]
movq %t31, %t40 # spill s => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t40=>t40]
movq %t40, -16(%t0) # spill s => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $1, %t33 # const => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t33=>t33]
movq %t16, %t34 # minus lexp -> r => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t33=>t33,t34=>t34]
sub %t33, %t34 => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t34=>t34]
movq %t34, %t6 # move arg 1 to temp => [t0=>rbp,t6=>rsi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t34=>t34]
movq $0, %t35 # const => [t0=>rbp,t6=>rsi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t34=>t34,t35=>t35]
movq %t35, %t36 # add lexp -> r => [t0=>rbp,t6=>rsi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t34=>t34,t36=>t36]
add %t0, %t36 => [t0=>rbp,t6=>rsi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t34=>t34,t36=>t36]
movq (%t36), %t37 # default load => [t0=>rbp,t6=>rsi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t34=>t34,t37=>t37]
movq %t37, %t7 # move arg 0 to temp => [t0=>rbp,t6=>rsi,t7=>rdi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t34=>t34,t37=>t37]
call L0 # default call => [t0=>rbp,t2=>rax,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t2, %t30 # default move => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t30=>t30]
movq -16(%t0), %t41 # spill l => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t30=>t30,t41=>t41]
movq %t41, %t31 # spill l => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t30=>t30,t31=>t31]
movq %t31, %t38 # mul lexp -> r => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t30=>t30,t38=>t38]
movq %t38, %t2 # mul r -> rax => [t2=>rax,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t30=>t30]
imul %t2 # mul rax * rexp  => [t2=>rax,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t2, %t38 # mul rax -> r => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t38=>t38]
movq %t38, %t17 # default move => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
L3: => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t17, %t2 # default move => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t22, %t15 # default move => [t15=>r15,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t21, %t14 # default move => [t14=>r14,t15=>r15,t18=>t18,t19=>t19,t20=>t20]
movq %t20, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t18=>t18,t19=>t19]
movq %t19, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t18=>t18]
movq %t18, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L6 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L1: => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $1, %t39 # const => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t39=>t39]
movq %t39, %t17 # default move => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
jmp L3 => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
L6: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                           t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36 t37 t38 t39 t40 t41 rc def
L7:                                 |        |        |  |                 |   |   |   |                                                                                                          8 null
movq %t7, -8(%t0) # store to offset |        |        |                    |   |   |   |                                                                                                          7 null
movq %t6, %t16 # default move       |        |                             |   |   |   |   |                                                                                                      7 [t16=>t16]
movq %t3, %t18 # default move       |                                      |   |   |   |   |       |                                                                                              7 [t18=>t18]
movq %t12, %t19 # default move      |                                          |   |   |   |       |   |                                                                                          7 [t19=>t19]
movq %t13, %t20 # default move      |                                              |   |   |       |   |   |                                                                                      7 [t20=>t20]
movq %t14, %t21 # default move      |                                                  |   |       |   |   |   |                                                                                  7 [t21=>t21]
movq %t15, %t22 # default move      |                                                      |       |   |   |   |   |                                                                              7 [t22=>t22]
movq $1, %t32 # const               |                                                      |       |   |   |   |   |                                       |                                      8 [t32=>t32]
cmp %t16, %t32                      |                                                      |       |   |   |   |   |                                                                              7 null
je L1                               |                                                      |       |   |   |   |   |                                                                              7 null
L2:                                 |                                                      |       |   |   |   |   |                                                                              7 null
movq %t16, %t31 # default move      |                                                      |       |   |   |   |   |                                   |                                          8 [t31=>t31]
movq %t31, %t40 # spill s           |                                                      |       |   |   |   |   |                                                                       |      8 [t40=>t40]
movq %t40, -16(%t0) # spill s       |                                                      |       |   |   |   |   |                                                                              7 null
movq $1, %t33 # const               |                                                      |       |   |   |   |   |                                           |                                  8 [t33=>t33]
movq %t16, %t34 # minus lexp -> r   |                                                              |   |   |   |   |                                           |   |                              8 [t34=>t34]
sub %t33, %t34                      |                                                              |   |   |   |   |                                               |                              7 [t34=>t34]
movq %t34, %t6 # move arg 1 to temp |                 |                                            |   |   |   |   |                                               |                              8 [t6=>rsi]
movq $0, %t35 # const               |                 |                                            |   |   |   |   |                                               |   |                          9 [t35=>t35]
movq %t35, %t36 # add lexp -> r     |                 |                                            |   |   |   |   |                                               |       |                      9 [t36=>t36]
add %t0, %t36                       |                 |                                            |   |   |   |   |                                               |       |                      9 [t36=>t36]
movq (%t36), %t37 # default load    |                 |                                            |   |   |   |   |                                               |           |                  9 [t37=>t37]
movq %t37, %t7 # move arg 0 to temp |                 |  |                                         |   |   |   |   |                                               |           |                  10 [t7=>rdi]
call L0 # default call              |     |                                                        |   |   |   |   |                                                                              7 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t2, %t30 # default move       |                                                              |   |   |   |   |                               |                                              7 [t30=>t30]
movq -16(%t0), %t41 # spill l                                                                      |   |   |   |   |                               |                                           |  7 [t41=>t41]
movq %t41, %t31 # spill l                                                                          |   |   |   |   |                               |   |                                          7 [t31=>t31]
movq %t31, %t38 # mul lexp -> r                                                                    |   |   |   |   |                               |                               |              7 [t38=>t38]
movq %t38, %t2 # mul r -> rax             |                                                        |   |   |   |   |                               |                                              7 [t2=>rax]
imul %t2 # mul rax * rexp                 |                                                        |   |   |   |   |                                                                              6 [t2=>rax,t5=>rdx]
movq %t2, %t38 # mul rax -> r                                                                      |   |   |   |   |                                                               |              6 [t38=>t38]
movq %t38, %t17 # default move                                                                 |   |   |   |   |   |                                                                              6 [t17=>t17]
L3:                                                                                            |   |   |   |   |   |                                                                              6 null
movq %t17, %t2 # default move                                                                      |   |   |   |   |                                                                              5 [t2=>rax]
movq %t22, %t15 # default move                                                         |           |   |   |   |                                                                                  5 [t15=>r15]
movq %t21, %t14 # default move                                                     |   |           |   |   |                                                                                      5 [t14=>r14]
movq %t20, %t13 # default move                                                 |   |   |           |   |                                                                                          5 [t13=>r13]
movq %t19, %t12 # default move                                             |   |   |   |           |                                                                                              5 [t12=>r12]
movq %t18, %t3 # default move                |                             |   |   |   |                                                                                                          5 [t3=>rbx]
jmp L6                                       |                             |   |   |   |                                                                                                          5 null
L1:                                                                                                |   |   |   |   |                                                                              5 null
movq $1, %t39 # const                                                                              |   |   |   |   |                                                                   |          6 [t39=>t39]
movq %t39, %t17 # default move                                                                 |   |   |   |   |   |                                                                              6 [t17=>t17]
jmp L3                                                                                         |   |   |   |   |   |                                                                              6 null
L6:                                          |                             |   |   |   |                                                                                                          5 null
# sink                                                                                                                                                                                            0 null
[91mTest Result: ./tests/factorial.tig failed.[0m
0: t16 interferes with:t15 t14 t13 t12 
1: t12 interferes with:t16 t15 t14 t13 
2: t13 interferes with:t17 t16 t15 t14 
3: t14 interferes with:t18 t17 t16 t15 
4: t15 interferes with:t19 t18 t17 t16 
5: t17 interferes with:t16 t15 t14 t13 
6: t18 interferes with:t17 t16 t15 t14 
7: t19 interferes with:t18 t17 t16 t15 
8: t20 interferes with:t19 t18 t17 t16 
9: t2 interferes with:t20 t19 t18 t17 t16 
10: t4 interferes with:t20 t19 t18 t17 t16 
11: t5 interferes with:t20 t19 t18 t17 t16 
12: t6 interferes with:t20 t19 t18 t17 t16 
13: t7 interferes with:t20 t19 t18 t17 t16 
14: t8 interferes with:t20 t19 t18 t17 t16 
15: t9 interferes with:t20 t19 t18 t17 t16 
16: t10 interferes with:t20 t19 t18 t17 t16 
17: t11 interferes with:t20 t19 t18 t17 t16 
18: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L1: : def => null, use => null
movq %t3, %t16 # default move : def => [t16=>t16], use => [t3=>rbx]
movq %t12, %t17 # default move : def => [t17=>t17], use => [t12=>r12]
movq %t13, %t18 # default move : def => [t18=>t18], use => [t13=>r13]
movq %t14, %t19 # default move : def => [t19=>t19], use => [t14=>r14]
movq %t15, %t20 # default move : def => [t20=>t20], use => [t15=>r15]
call flush # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => null
movq %t20, %t15 # default move : def => [t15=>r15], use => [t20=>t20]
movq %t19, %t14 # default move : def => [t14=>r14], use => [t19=>t19]
movq %t18, %t13 # default move : def => [t13=>r13], use => [t18=>t18]
movq %t17, %t12 # default move : def => [t12=>r12], use => [t17=>t17]
movq %t16, %t3 # default move : def => [t3=>rbx], use => [t16=>t16]
jmp L0 : def => null, use => null
L0: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L1: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t16 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16]
movq %t12, %t17 # default move => [t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17]
movq %t13, %t18 # default move => [t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18]
movq %t14, %t19 # default move => [t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19]
movq %t15, %t20 # default move => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
call flush # exp call ( no return value ) => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
movq %t20, %t15 # default move => [t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19]
movq %t19, %t14 # default move => [t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18]
movq %t18, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17]
movq %t17, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16]
movq %t16, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L0 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L0: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                 t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 rc def
L1:                                                |                             |   |   |   |                      5 null
movq %t3, %t16 # default move                                                    |   |   |   |   |                  5 [t16=>t16]
movq %t12, %t17 # default move                                                       |   |   |   |   |              5 [t17=>t17]
movq %t13, %t18 # default move                                                           |   |   |   |   |          5 [t18=>t18]
movq %t14, %t19 # default move                                                               |   |   |   |   |      5 [t19=>t19]
movq %t15, %t20 # default move                                                                   |   |   |   |   |  5 [t20=>t20]
call flush # exp call ( no return value )                                                        |   |   |   |   |  5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t20, %t15 # default move                                                               |   |   |   |   |      5 [t15=>r15]
movq %t19, %t14 # default move                                                           |   |   |   |   |          5 [t14=>r14]
movq %t18, %t13 # default move                                                       |   |   |   |   |              5 [t13=>r13]
movq %t17, %t12 # default move                                                   |   |   |   |   |                  5 [t12=>r12]
movq %t16, %t3 # default move                      |                             |   |   |   |                      5 [t3=>rbx]
jmp L0                                             |                             |   |   |   |                      5 null
L0:                                                |                             |   |   |   |                      5 null
# sink                                                                                                              0 null
[92mTest Result: ./tests/flush.tig passed.[0m
0: t29 interferes with:t15 t14 t13 t12 t1 t0 
1: t0 interferes with:
2: t1 interferes with:
3: t12 interferes with:t29 t15 t14 t13 
4: t13 interferes with:t30 t29 t15 t14 
5: t14 interferes with:t31 t30 t29 t15 
6: t15 interferes with:t32 t31 t30 t29 
7: t30 interferes with:t29 t15 t14 t13 t1 t0 
8: t31 interferes with:t30 t29 t15 t14 t1 t0 
9: t32 interferes with:t31 t30 t29 t15 t1 t0 
10: t33 interferes with:t32 t31 t30 t29 t1 t0 
11: t35 interferes with:t33 t32 t31 t30 t29 t1 t0 
12: t36 interferes with:t35 t33 t32 t31 t30 t29 t1 t0 
13: t37 interferes with:t36 t35 t33 t32 t31 t30 t29 t1 t0 
14: t38 interferes with:t37 t36 t35 t33 t32 t31 t30 t29 t0 
15: t9 interferes with:t2 t37 t36 t35 t33 t32 t31 t30 t29 t0 
16: t39 interferes with:t38 t37 t36 t35 t33 t32 t31 t30 t29 t9 t0 
17: t8 interferes with:t2 t38 t37 t36 t35 t33 t32 t31 t30 t29 t9 t0 
18: t40 interferes with:t39 t38 t37 t36 t35 t33 t32 t31 t30 t29 t9 t8 t0 
19: t4 interferes with:t2 t39 t38 t37 t36 t35 t33 t32 t31 t30 t29 t9 t8 t0 
20: t41 interferes with:t40 t39 t38 t37 t36 t35 t33 t32 t31 t30 t29 t9 t8 t4 t0 
21: t5 interferes with:t2 t40 t39 t38 t37 t36 t35 t33 t32 t31 t30 t29 t9 t8 t4 t0 
22: t42 interferes with:t41 t40 t39 t38 t37 t36 t35 t33 t32 t31 t30 t29 t9 t8 t5 t4 t0 
23: t6 interferes with:t2 t41 t40 t39 t38 t37 t36 t35 t33 t32 t31 t30 t29 t9 t8 t5 t4 t0 
24: t7 interferes with:t2 t42 t41 t40 t39 t38 t37 t36 t35 t33 t32 t31 t30 t29 t9 t8 t6 t5 t4 
25: t2 interferes with:t33 t32 t31 t30 t29 
26: t10 interferes with:t33 t32 t31 t30 t29 t2 
27: t11 interferes with:t33 t32 t31 t30 t29 t2 
28: t34 interferes with:t33 t32 t31 t30 t29 
29: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L2: : def => null, use => null
movq %t3, %t29 # default move : def => [t29=>t29], use => [t3=>rbx]
movq %t12, %t30 # default move : def => [t30=>t30], use => [t12=>r12]
movq %t13, %t31 # default move : def => [t31=>t31], use => [t13=>r13]
movq %t14, %t32 # default move : def => [t32=>t32], use => [t14=>r14]
movq %t15, %t33 # default move : def => [t33=>t33], use => [t15=>r15]
movq $8, %t35 # const : def => [t35=>t35], use => null
pushq %t35 # move arg 8 to stack : def => null, use => [t1=>rsp,t35=>t35]
movq $7, %t36 # const : def => [t36=>t36], use => null
pushq %t36 # move arg 7 to stack : def => null, use => [t1=>rsp,t36=>t36]
movq $6, %t37 # const : def => [t37=>t37], use => null
pushq %t37 # move arg 6 to stack : def => null, use => [t1=>rsp,t37=>t37]
movq $5, %t38 # const : def => [t38=>t38], use => null
movq %t38, %t9 # move arg 5 to temp : def => [t9=>r9], use => [t38=>t38]
movq $4, %t39 # const : def => [t39=>t39], use => null
movq %t39, %t8 # move arg 4 to temp : def => [t8=>r8], use => [t39=>t39]
movq $3, %t40 # const : def => [t40=>t40], use => null
movq %t40, %t4 # move arg 3 to temp : def => [t4=>rcx], use => [t40=>t40]
movq $2, %t41 # const : def => [t41=>t41], use => null
movq %t41, %t5 # move arg 2 to temp : def => [t5=>rdx], use => [t41=>t41]
movq $1, %t42 # const : def => [t42=>t42], use => null
movq %t42, %t6 # move arg 1 to temp : def => [t6=>rsi], use => [t42=>t42]
movq %t0, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t0=>rbp]
call L0 # default call : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t35=>t35,t36=>t36,t37=>t37,t38=>t38,t9=>r9,t39=>t39,t8=>r8,t40=>t40,t4=>rcx,t41=>t41,t5=>rdx,t42=>t42,t6=>rsi,t0=>rbp,t7=>rdi]
movq %t2, %t34 # default move : def => [t34=>t34], use => [t2=>rax]
movq %t34, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t34=>t34]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t34=>t34,t7=>rdi]
movq %t33, %t15 # default move : def => [t15=>r15], use => [t33=>t33]
movq %t32, %t14 # default move : def => [t14=>r14], use => [t32=>t32]
movq %t31, %t13 # default move : def => [t13=>r13], use => [t31=>t31]
movq %t30, %t12 # default move : def => [t12=>r12], use => [t30=>t30]
movq %t29, %t3 # default move : def => [t3=>rbx], use => [t29=>t29]
jmp L1 : def => null, use => null
L1: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L2: => [t0=>rbp,t1=>rsp,t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t29 # default move => [t0=>rbp,t1=>rsp,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t29=>t29]
movq %t12, %t30 # default move => [t0=>rbp,t1=>rsp,t13=>r13,t14=>r14,t15=>r15,t29=>t29,t30=>t30]
movq %t13, %t31 # default move => [t0=>rbp,t1=>rsp,t14=>r14,t15=>r15,t29=>t29,t30=>t30,t31=>t31]
movq %t14, %t32 # default move => [t0=>rbp,t1=>rsp,t15=>r15,t29=>t29,t30=>t30,t31=>t31,t32=>t32]
movq %t15, %t33 # default move => [t0=>rbp,t1=>rsp,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t33=>t33]
movq $8, %t35 # const => [t0=>rbp,t1=>rsp,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t33=>t33,t35=>t35]
pushq %t35 # move arg 8 to stack => [t0=>rbp,t1=>rsp,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t33=>t33,t35=>t35]
movq $7, %t36 # const => [t0=>rbp,t1=>rsp,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t33=>t33,t35=>t35,t36=>t36]
pushq %t36 # move arg 7 to stack => [t0=>rbp,t1=>rsp,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t33=>t33,t35=>t35,t36=>t36]
movq $6, %t37 # const => [t0=>rbp,t1=>rsp,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t33=>t33,t35=>t35,t36=>t36,t37=>t37]
pushq %t37 # move arg 6 to stack => [t0=>rbp,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t33=>t33,t35=>t35,t36=>t36,t37=>t37]
movq $5, %t38 # const => [t0=>rbp,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t33=>t33,t35=>t35,t36=>t36,t37=>t37,t38=>t38]
movq %t38, %t9 # move arg 5 to temp => [t0=>rbp,t9=>r9,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t33=>t33,t35=>t35,t36=>t36,t37=>t37,t38=>t38]
movq $4, %t39 # const => [t0=>rbp,t9=>r9,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t33=>t33,t35=>t35,t36=>t36,t37=>t37,t38=>t38,t39=>t39]
movq %t39, %t8 # move arg 4 to temp => [t0=>rbp,t8=>r8,t9=>r9,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t33=>t33,t35=>t35,t36=>t36,t37=>t37,t38=>t38,t39=>t39]
movq $3, %t40 # const => [t0=>rbp,t8=>r8,t9=>r9,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t33=>t33,t35=>t35,t36=>t36,t37=>t37,t38=>t38,t39=>t39,t40=>t40]
movq %t40, %t4 # move arg 3 to temp => [t0=>rbp,t4=>rcx,t8=>r8,t9=>r9,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t33=>t33,t35=>t35,t36=>t36,t37=>t37,t38=>t38,t39=>t39,t40=>t40]
movq $2, %t41 # const => [t0=>rbp,t4=>rcx,t8=>r8,t9=>r9,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t33=>t33,t35=>t35,t36=>t36,t37=>t37,t38=>t38,t39=>t39,t40=>t40,t41=>t41]
movq %t41, %t5 # move arg 2 to temp => [t0=>rbp,t4=>rcx,t5=>rdx,t8=>r8,t9=>r9,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t33=>t33,t35=>t35,t36=>t36,t37=>t37,t38=>t38,t39=>t39,t40=>t40,t41=>t41]
movq $1, %t42 # const => [t0=>rbp,t4=>rcx,t5=>rdx,t8=>r8,t9=>r9,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t33=>t33,t35=>t35,t36=>t36,t37=>t37,t38=>t38,t39=>t39,t40=>t40,t41=>t41,t42=>t42]
movq %t42, %t6 # move arg 1 to temp => [t0=>rbp,t4=>rcx,t5=>rdx,t6=>rsi,t8=>r8,t9=>r9,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t33=>t33,t35=>t35,t36=>t36,t37=>t37,t38=>t38,t39=>t39,t40=>t40,t41=>t41,t42=>t42]
movq %t0, %t7 # move arg 0 to temp => [t0=>rbp,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t33=>t33,t35=>t35,t36=>t36,t37=>t37,t38=>t38,t39=>t39,t40=>t40,t41=>t41,t42=>t42]
call L0 # default call => [t2=>rax,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t33=>t33]
movq %t2, %t34 # default move => [t29=>t29,t30=>t30,t31=>t31,t32=>t32,t33=>t33,t34=>t34]
movq %t34, %t7 # move arg 0 to temp => [t7=>rdi,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t33=>t33,t34=>t34]
call printi # exp call ( no return value ) => [t29=>t29,t30=>t30,t31=>t31,t32=>t32,t33=>t33]
movq %t33, %t15 # default move => [t15=>r15,t29=>t29,t30=>t30,t31=>t31,t32=>t32]
movq %t32, %t14 # default move => [t14=>r14,t15=>r15,t29=>t29,t30=>t30,t31=>t31]
movq %t31, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t29=>t29,t30=>t30]
movq %t30, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t29=>t29]
movq %t29, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L1 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L1: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                  t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36 t37 t38 t39 t40 t41 t42 rc def
L2:                                        |  |     |                             |   |   |   |                                                                                                              7 null
movq %t3, %t29 # default move              |  |                                   |   |   |   |                                                       |                                                      7 [t29=>t29]
movq %t12, %t30 # default move             |  |                                       |   |   |                                                       |   |                                                  7 [t30=>t30]
movq %t13, %t31 # default move             |  |                                           |   |                                                       |   |   |                                              7 [t31=>t31]
movq %t14, %t32 # default move             |  |                                               |                                                       |   |   |   |                                          7 [t32=>t32]
movq %t15, %t33 # default move             |  |                                                                                                       |   |   |   |   |                                      7 [t33=>t33]
movq $8, %t35 # const                      |  |                                                                                                       |   |   |   |   |       |                              8 [t35=>t35]
pushq %t35 # move arg 8 to stack           |  |                                                                                                       |   |   |   |   |       |                              8 null
movq $7, %t36 # const                      |  |                                                                                                       |   |   |   |   |       |   |                          9 [t36=>t36]
pushq %t36 # move arg 7 to stack           |  |                                                                                                       |   |   |   |   |       |   |                          9 null
movq $6, %t37 # const                      |  |                                                                                                       |   |   |   |   |       |   |   |                      10 [t37=>t37]
pushq %t37 # move arg 6 to stack           |                                                                                                          |   |   |   |   |       |   |   |                      9 null
movq $5, %t38 # const                      |                                                                                                          |   |   |   |   |       |   |   |   |                  10 [t38=>t38]
movq %t38, %t9 # move arg 5 to temp        |                          |                                                                               |   |   |   |   |       |   |   |   |                  11 [t9=>r9]
movq $4, %t39 # const                      |                          |                                                                               |   |   |   |   |       |   |   |   |   |              12 [t39=>t39]
movq %t39, %t8 # move arg 4 to temp        |                       |  |                                                                               |   |   |   |   |       |   |   |   |   |              13 [t8=>r8]
movq $3, %t40 # const                      |                       |  |                                                                               |   |   |   |   |       |   |   |   |   |   |          14 [t40=>t40]
movq %t40, %t4 # move arg 3 to temp        |           |           |  |                                                                               |   |   |   |   |       |   |   |   |   |   |          15 [t4=>rcx]
movq $2, %t41 # const                      |           |           |  |                                                                               |   |   |   |   |       |   |   |   |   |   |   |      16 [t41=>t41]
movq %t41, %t5 # move arg 2 to temp        |           |  |        |  |                                                                               |   |   |   |   |       |   |   |   |   |   |   |      17 [t5=>rdx]
movq $1, %t42 # const                      |           |  |        |  |                                                                               |   |   |   |   |       |   |   |   |   |   |   |   |  18 [t42=>t42]
movq %t42, %t6 # move arg 1 to temp        |           |  |  |     |  |                                                                               |   |   |   |   |       |   |   |   |   |   |   |   |  19 [t6=>rsi]
movq %t0, %t7 # move arg 0 to temp         |           |  |  |  |  |  |                                                                               |   |   |   |   |       |   |   |   |   |   |   |   |  20 [t7=>rdi]
call L0 # default call                           |                                                                                                    |   |   |   |   |                                      6 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t2, %t34 # default move                                                                                                                         |   |   |   |   |   |                                  6 [t34=>t34]
movq %t34, %t7 # move arg 0 to temp                             |                                                                                     |   |   |   |   |   |                                  7 [t7=>rdi]
call printi # exp call ( no return value )                                                                                                            |   |   |   |   |                                      5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t33, %t15 # default move                                                                |                                                       |   |   |   |                                          5 [t15=>r15]
movq %t32, %t14 # default move                                                            |   |                                                       |   |   |                                              5 [t14=>r14]
movq %t31, %t13 # default move                                                        |   |   |                                                       |   |                                                  5 [t13=>r13]
movq %t30, %t12 # default move                                                    |   |   |   |                                                       |                                                      5 [t12=>r12]
movq %t29, %t3 # default move                       |                             |   |   |   |                                                                                                              5 [t3=>rbx]
jmp L1                                              |                             |   |   |   |                                                                                                              5 null
L1:                                                 |                             |   |   |   |                                                                                                              5 null
# sink                                                                                                                                                                                                       0 null
0: t16 interferes with:t15 t14 t13 t12 t9 t8 t5 t4 t3 t0 
1: t0 interferes with:
2: t3 interferes with:t15 t14 t13 t12 
3: t4 interferes with:
4: t5 interferes with:t28 t27 t26 t25 t24 t23 t22 t21 t20 t19 t18 t2 
5: t8 interferes with:
6: t9 interferes with:
7: t12 interferes with:t24 t15 t14 t13 
8: t13 interferes with:t25 t24 t15 t14 
9: t14 interferes with:t26 t25 t24 t15 
10: t15 interferes with:t27 t26 t25 t24 
11: t17 interferes with:t16 t15 t14 t13 t12 t9 t8 t4 t3 t0 
12: t18 interferes with:t17 t16 t15 t14 t13 t12 t9 t8 t3 t0 
13: t19 interferes with:t18 t17 t16 t15 t14 t13 t12 t9 t3 t0 
14: t20 interferes with:t19 t18 t17 t16 t15 t14 t13 t12 t3 t0 
15: t21 interferes with:t20 t19 t18 t17 t16 t15 t14 t13 t12 t3 t0 
16: t22 interferes with:t21 t20 t19 t18 t17 t16 t15 t14 t13 t12 t3 t0 
17: t23 interferes with:t22 t21 t20 t19 t18 t17 t16 t15 t14 t13 t12 t3 
18: t24 interferes with:t23 t22 t21 t20 t19 t18 t17 t16 t15 t14 t13 t12 
19: t25 interferes with:t24 t23 t22 t21 t20 t19 t18 t17 t16 t15 t14 t13 
20: t26 interferes with:t25 t24 t23 t22 t21 t20 t19 t18 t17 t16 t15 t14 
21: t27 interferes with:t26 t25 t24 t23 t22 t21 t20 t19 t18 t17 t16 t15 
22: t28 interferes with:t27 t26 t25 t24 t23 t22 t21 t20 t19 t18 t17 t16 
23: t43 interferes with:t28 t27 t26 t25 t24 t23 t22 t21 t20 t19 t18 t17 
24: t2 interferes with:t28 t27 t26 t25 t24 t23 t22 t21 t20 t19 t18 t17 
25: t44 interferes with:t28 t27 t26 t25 t24 t23 t22 t21 t20 t19 t18 
26: t45 interferes with:t28 t27 t26 t25 t24 t23 t22 t21 t20 t19 
27: t46 interferes with:t28 t27 t26 t25 t24 t23 t22 t21 t20 
28: t47 interferes with:t28 t27 t26 t25 t24 t23 t22 t21 
29: t48 interferes with:t28 t27 t26 t25 t24 t23 t22 
30: t49 interferes with:t28 t27 t26 t25 t24 t23 
registers:14
### Uses and Defs
L4: : def => null, use => null
movq %t7, -8(%t0) # store to offset : def => null, use => [t7=>rdi,t0=>rbp]
movq %t6, %t16 # default move : def => [t16=>t16], use => [t6=>rsi]
movq %t5, %t17 # default move : def => [t17=>t17], use => [t5=>rdx]
movq %t4, %t18 # default move : def => [t18=>t18], use => [t4=>rcx]
movq %t8, %t19 # default move : def => [t19=>t19], use => [t8=>r8]
movq %t9, %t20 # default move : def => [t20=>t20], use => [t9=>r9]
movq 16(%t0), %t21 # load to offset : def => [t21=>t21], use => [t0=>rbp]
movq 24(%t0), %t22 # load to offset : def => [t22=>t22], use => [t0=>rbp]
movq 32(%t0), %t23 # load to offset : def => [t23=>t23], use => [t0=>rbp]
movq %t3, %t24 # default move : def => [t24=>t24], use => [t3=>rbx]
movq %t12, %t25 # default move : def => [t25=>t25], use => [t12=>r12]
movq %t13, %t26 # default move : def => [t26=>t26], use => [t13=>r13]
movq %t14, %t27 # default move : def => [t27=>t27], use => [t14=>r14]
movq %t15, %t28 # default move : def => [t28=>t28], use => [t15=>r15]
movq %t16, %t43 # mul lexp -> r : def => [t43=>t43], use => [t16=>t16]
movq %t43, %t2 # mul r -> rax : def => [t2=>rax], use => [t43=>t43]
imul %t2 # mul rax * rexp  : def => [t2=>rax,t5=>rdx], use => [t2=>rax,t17=>t17]
movq %t2, %t43 # mul rax -> r : def => [t43=>t43], use => [t2=>rax]
movq %t43, %t44 # add lexp -> r : def => [t44=>t44], use => [t43=>t43]
add %t18, %t44 : def => [t44=>t44], use => [t18=>t18,t44=>t44]
movq %t44, %t45 # add lexp -> r : def => [t45=>t45], use => [t44=>t44]
add %t19, %t45 : def => [t45=>t45], use => [t19=>t19,t45=>t45]
movq %t45, %t46 # add lexp -> r : def => [t46=>t46], use => [t45=>t45]
add %t20, %t46 : def => [t46=>t46], use => [t20=>t20,t46=>t46]
movq %t46, %t47 # add lexp -> r : def => [t47=>t47], use => [t46=>t46]
add %t21, %t47 : def => [t47=>t47], use => [t21=>t21,t47=>t47]
movq %t47, %t48 # add lexp -> r : def => [t48=>t48], use => [t47=>t47]
add %t22, %t48 : def => [t48=>t48], use => [t22=>t22,t48=>t48]
movq %t48, %t49 # add lexp -> r : def => [t49=>t49], use => [t48=>t48]
add %t23, %t49 : def => [t49=>t49], use => [t23=>t23,t49=>t49]
movq %t49, %t2 # default move : def => [t2=>rax], use => [t49=>t49]
movq %t28, %t15 # default move : def => [t15=>r15], use => [t28=>t28]
movq %t27, %t14 # default move : def => [t14=>r14], use => [t27=>t27]
movq %t26, %t13 # default move : def => [t13=>r13], use => [t26=>t26]
movq %t25, %t12 # default move : def => [t12=>r12], use => [t25=>t25]
movq %t24, %t3 # default move : def => [t3=>rbx], use => [t24=>t24]
jmp L3 : def => null, use => null
L3: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L4: => [t0=>rbp,t3=>rbx,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t7, -8(%t0) # store to offset => [t0=>rbp,t3=>rbx,t4=>rcx,t5=>rdx,t6=>rsi,t8=>r8,t9=>r9,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t6, %t16 # default move => [t0=>rbp,t3=>rbx,t4=>rcx,t5=>rdx,t8=>r8,t9=>r9,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16]
movq %t5, %t17 # default move => [t0=>rbp,t3=>rbx,t4=>rcx,t8=>r8,t9=>r9,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17]
movq %t4, %t18 # default move => [t0=>rbp,t3=>rbx,t8=>r8,t9=>r9,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18]
movq %t8, %t19 # default move => [t0=>rbp,t3=>rbx,t9=>r9,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19]
movq %t9, %t20 # default move => [t0=>rbp,t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
movq 16(%t0), %t21 # load to offset => [t0=>rbp,t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq 24(%t0), %t22 # load to offset => [t0=>rbp,t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq 32(%t0), %t23 # load to offset => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23]
movq %t3, %t24 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24]
movq %t12, %t25 # default move => [t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25]
movq %t13, %t26 # default move => [t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26]
movq %t14, %t27 # default move => [t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27]
movq %t15, %t28 # default move => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28]
movq %t16, %t43 # mul lexp -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t43=>t43]
movq %t43, %t2 # mul r -> rax => [t2=>rax,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28]
imul %t2 # mul rax * rexp  => [t2=>rax,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28]
movq %t2, %t43 # mul rax -> r => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t43=>t43]
movq %t43, %t44 # add lexp -> r => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t44=>t44]
add %t18, %t44 => [t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t44=>t44]
movq %t44, %t45 # add lexp -> r => [t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t45=>t45]
add %t19, %t45 => [t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t45=>t45]
movq %t45, %t46 # add lexp -> r => [t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t46=>t46]
add %t20, %t46 => [t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t46=>t46]
movq %t46, %t47 # add lexp -> r => [t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t47=>t47]
add %t21, %t47 => [t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t47=>t47]
movq %t47, %t48 # add lexp -> r => [t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t48=>t48]
add %t22, %t48 => [t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t48=>t48]
movq %t48, %t49 # add lexp -> r => [t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t49=>t49]
add %t23, %t49 => [t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t49=>t49]
movq %t49, %t2 # default move => [t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28]
movq %t28, %t15 # default move => [t15=>r15,t24=>t24,t25=>t25,t26=>t26,t27=>t27]
movq %t27, %t14 # default move => [t14=>r14,t15=>r15,t24=>t24,t25=>t25,t26=>t26]
movq %t26, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t24=>t24,t25=>t25]
movq %t25, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t24=>t24]
movq %t24, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L3 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L3: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                           t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36 t37 t38 t39 t40 t41 t42 t43 t44 t45 t46 t47 t48 t49 rc def
L4:                                 |        |  |  |  |  |  |  |           |   |   |   |                                                                                                                                          12 null
movq %t7, -8(%t0) # store to offset |        |  |  |  |     |  |           |   |   |   |                                                                                                                                          11 null
movq %t6, %t16 # default move       |        |  |  |        |  |           |   |   |   |   |                                                                                                                                      11 [t16=>t16]
movq %t5, %t17 # default move       |        |  |           |  |           |   |   |   |   |   |                                                                                                                                  11 [t17=>t17]
movq %t4, %t18 # default move       |        |              |  |           |   |   |   |   |   |   |                                                                                                                              11 [t18=>t18]
movq %t8, %t19 # default move       |        |                 |           |   |   |   |   |   |   |   |                                                                                                                          11 [t19=>t19]
movq %t9, %t20 # default move       |        |                             |   |   |   |   |   |   |   |   |                                                                                                                      11 [t20=>t20]
movq 16(%t0), %t21 # load to offset |        |                             |   |   |   |   |   |   |   |   |   |                                                                                                                  12 [t21=>t21]
movq 24(%t0), %t22 # load to offset |        |                             |   |   |   |   |   |   |   |   |   |   |                                                                                                              13 [t22=>t22]
movq 32(%t0), %t23 # load to offset          |                             |   |   |   |   |   |   |   |   |   |   |   |                                                                                                          13 [t23=>t23]
movq %t3, %t24 # default move                                              |   |   |   |   |   |   |   |   |   |   |   |   |                                                                                                      13 [t24=>t24]
movq %t12, %t25 # default move                                                 |   |   |   |   |   |   |   |   |   |   |   |   |                                                                                                  13 [t25=>t25]
movq %t13, %t26 # default move                                                     |   |   |   |   |   |   |   |   |   |   |   |   |                                                                                              13 [t26=>t26]
movq %t14, %t27 # default move                                                         |   |   |   |   |   |   |   |   |   |   |   |   |                                                                                          13 [t27=>t27]
movq %t15, %t28 # default move                                                             |   |   |   |   |   |   |   |   |   |   |   |   |                                                                                      13 [t28=>t28]
movq %t16, %t43 # mul lexp -> r                                                                |   |   |   |   |   |   |   |   |   |   |   |                                                           |                          13 [t43=>t43]
movq %t43, %t2 # mul r -> rax             |                                                    |   |   |   |   |   |   |   |   |   |   |   |                                                                                      13 [t2=>rax]
imul %t2 # mul rax * rexp                 |                                                        |   |   |   |   |   |   |   |   |   |   |                                                                                      12 [t2=>rax,t5=>rdx]
movq %t2, %t43 # mul rax -> r                                                                      |   |   |   |   |   |   |   |   |   |   |                                                           |                          12 [t43=>t43]
movq %t43, %t44 # add lexp -> r                                                                    |   |   |   |   |   |   |   |   |   |   |                                                               |                      12 [t44=>t44]
add %t18, %t44                                                                                         |   |   |   |   |   |   |   |   |   |                                                               |                      11 [t44=>t44]
movq %t44, %t45 # add lexp -> r                                                                        |   |   |   |   |   |   |   |   |   |                                                                   |                  11 [t45=>t45]
add %t19, %t45                                                                                             |   |   |   |   |   |   |   |   |                                                                   |                  10 [t45=>t45]
movq %t45, %t46 # add lexp -> r                                                                            |   |   |   |   |   |   |   |   |                                                                       |              10 [t46=>t46]
add %t20, %t46                                                                                                 |   |   |   |   |   |   |   |                                                                       |              9 [t46=>t46]
movq %t46, %t47 # add lexp -> r                                                                                |   |   |   |   |   |   |   |                                                                           |          9 [t47=>t47]
add %t21, %t47                                                                                                     |   |   |   |   |   |   |                                                                           |          8 [t47=>t47]
movq %t47, %t48 # add lexp -> r                                                                                    |   |   |   |   |   |   |                                                                               |      8 [t48=>t48]
add %t22, %t48                                                                                                         |   |   |   |   |   |                                                                               |      7 [t48=>t48]
movq %t48, %t49 # add lexp -> r                                                                                        |   |   |   |   |   |                                                                                   |  7 [t49=>t49]
add %t23, %t49                                                                                                             |   |   |   |   |                                                                                   |  6 [t49=>t49]
movq %t49, %t2 # default move                                                                                              |   |   |   |   |                                                                                      5 [t2=>rax]
movq %t28, %t15 # default move                                                         |                                   |   |   |   |                                                                                          5 [t15=>r15]
movq %t27, %t14 # default move                                                     |   |                                   |   |   |                                                                                              5 [t14=>r14]
movq %t26, %t13 # default move                                                 |   |   |                                   |   |                                                                                                  5 [t13=>r13]
movq %t25, %t12 # default move                                             |   |   |   |                                   |                                                                                                      5 [t12=>r12]
movq %t24, %t3 # default move                |                             |   |   |   |                                                                                                                                          5 [t3=>rbx]
jmp L3                                       |                             |   |   |   |                                                                                                                                          5 null
L3:                                          |                             |   |   |   |                                                                                                                                          5 null
# sink                                                                                                                                                                                                                            0 null
[91mTest Result: ./tests/function_eight_arg.tig failed.[0m
0: t26 interferes with:t15 t14 t13 t12 t0 
1: t0 interferes with:
2: t12 interferes with:t26 t15 t14 t13 
3: t13 interferes with:t27 t26 t15 t14 
4: t14 interferes with:t28 t27 t26 t15 
5: t15 interferes with:t29 t28 t27 t26 
6: t27 interferes with:t26 t15 t14 t13 t0 
7: t28 interferes with:t27 t26 t15 t14 t0 
8: t29 interferes with:t28 t27 t26 t15 t0 
9: t30 interferes with:t29 t28 t27 t26 t0 
10: t32 interferes with:t30 t29 t28 t27 t26 t0 
11: t9 interferes with:t2 t30 t29 t28 t27 t26 t0 
12: t33 interferes with:t32 t30 t29 t28 t27 t26 t9 t0 
13: t8 interferes with:t2 t32 t30 t29 t28 t27 t26 t9 t0 
14: t34 interferes with:t33 t32 t30 t29 t28 t27 t26 t9 t8 t0 
15: t4 interferes with:t2 t33 t32 t30 t29 t28 t27 t26 t9 t8 t0 
16: t35 interferes with:t34 t33 t32 t30 t29 t28 t27 t26 t9 t8 t4 t0 
17: t5 interferes with:t2 t34 t33 t32 t30 t29 t28 t27 t26 t9 t8 t4 t0 
18: t36 interferes with:t35 t34 t33 t32 t30 t29 t28 t27 t26 t9 t8 t5 t4 t0 
19: t6 interferes with:t2 t35 t34 t33 t32 t30 t29 t28 t27 t26 t9 t8 t5 t4 t0 
20: t7 interferes with:t2 t36 t35 t34 t33 t32 t30 t29 t28 t27 t26 t9 t8 t6 t5 t4 
21: t2 interferes with:t30 t29 t28 t27 t26 
22: t10 interferes with:t30 t29 t28 t27 t26 t2 
23: t11 interferes with:t30 t29 t28 t27 t26 t2 
24: t31 interferes with:t30 t29 t28 t27 t26 
25: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L2: : def => null, use => null
movq %t3, %t26 # default move : def => [t26=>t26], use => [t3=>rbx]
movq %t12, %t27 # default move : def => [t27=>t27], use => [t12=>r12]
movq %t13, %t28 # default move : def => [t28=>t28], use => [t13=>r13]
movq %t14, %t29 # default move : def => [t29=>t29], use => [t14=>r14]
movq %t15, %t30 # default move : def => [t30=>t30], use => [t15=>r15]
movq $5, %t32 # const : def => [t32=>t32], use => null
movq %t32, %t9 # move arg 5 to temp : def => [t9=>r9], use => [t32=>t32]
movq $4, %t33 # const : def => [t33=>t33], use => null
movq %t33, %t8 # move arg 4 to temp : def => [t8=>r8], use => [t33=>t33]
movq $3, %t34 # const : def => [t34=>t34], use => null
movq %t34, %t4 # move arg 3 to temp : def => [t4=>rcx], use => [t34=>t34]
movq $2, %t35 # const : def => [t35=>t35], use => null
movq %t35, %t5 # move arg 2 to temp : def => [t5=>rdx], use => [t35=>t35]
movq $1, %t36 # const : def => [t36=>t36], use => null
movq %t36, %t6 # move arg 1 to temp : def => [t6=>rsi], use => [t36=>t36]
movq %t0, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t0=>rbp]
call L0 # default call : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t32=>t32,t9=>r9,t33=>t33,t8=>r8,t34=>t34,t4=>rcx,t35=>t35,t5=>rdx,t36=>t36,t6=>rsi,t0=>rbp,t7=>rdi]
movq %t2, %t31 # default move : def => [t31=>t31], use => [t2=>rax]
movq %t31, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t31=>t31]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t31=>t31,t7=>rdi]
movq %t30, %t15 # default move : def => [t15=>r15], use => [t30=>t30]
movq %t29, %t14 # default move : def => [t14=>r14], use => [t29=>t29]
movq %t28, %t13 # default move : def => [t13=>r13], use => [t28=>t28]
movq %t27, %t12 # default move : def => [t12=>r12], use => [t27=>t27]
movq %t26, %t3 # default move : def => [t3=>rbx], use => [t26=>t26]
jmp L1 : def => null, use => null
L1: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L2: => [t0=>rbp,t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t26 # default move => [t0=>rbp,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t26=>t26]
movq %t12, %t27 # default move => [t0=>rbp,t13=>r13,t14=>r14,t15=>r15,t26=>t26,t27=>t27]
movq %t13, %t28 # default move => [t0=>rbp,t14=>r14,t15=>r15,t26=>t26,t27=>t27,t28=>t28]
movq %t14, %t29 # default move => [t0=>rbp,t15=>r15,t26=>t26,t27=>t27,t28=>t28,t29=>t29]
movq %t15, %t30 # default move => [t0=>rbp,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30]
movq $5, %t32 # const => [t0=>rbp,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t32=>t32]
movq %t32, %t9 # move arg 5 to temp => [t0=>rbp,t9=>r9,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t32=>t32]
movq $4, %t33 # const => [t0=>rbp,t9=>r9,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t32=>t32,t33=>t33]
movq %t33, %t8 # move arg 4 to temp => [t0=>rbp,t8=>r8,t9=>r9,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t32=>t32,t33=>t33]
movq $3, %t34 # const => [t0=>rbp,t8=>r8,t9=>r9,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t32=>t32,t33=>t33,t34=>t34]
movq %t34, %t4 # move arg 3 to temp => [t0=>rbp,t4=>rcx,t8=>r8,t9=>r9,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t32=>t32,t33=>t33,t34=>t34]
movq $2, %t35 # const => [t0=>rbp,t4=>rcx,t8=>r8,t9=>r9,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t32=>t32,t33=>t33,t34=>t34,t35=>t35]
movq %t35, %t5 # move arg 2 to temp => [t0=>rbp,t4=>rcx,t5=>rdx,t8=>r8,t9=>r9,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t32=>t32,t33=>t33,t34=>t34,t35=>t35]
movq $1, %t36 # const => [t0=>rbp,t4=>rcx,t5=>rdx,t8=>r8,t9=>r9,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t32=>t32,t33=>t33,t34=>t34,t35=>t35,t36=>t36]
movq %t36, %t6 # move arg 1 to temp => [t0=>rbp,t4=>rcx,t5=>rdx,t6=>rsi,t8=>r8,t9=>r9,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t32=>t32,t33=>t33,t34=>t34,t35=>t35,t36=>t36]
movq %t0, %t7 # move arg 0 to temp => [t0=>rbp,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t32=>t32,t33=>t33,t34=>t34,t35=>t35,t36=>t36]
call L0 # default call => [t2=>rax,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30]
movq %t2, %t31 # default move => [t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t31=>t31]
movq %t31, %t7 # move arg 0 to temp => [t7=>rdi,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t31=>t31]
call printi # exp call ( no return value ) => [t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30]
movq %t30, %t15 # default move => [t15=>r15,t26=>t26,t27=>t27,t28=>t28,t29=>t29]
movq %t29, %t14 # default move => [t14=>r14,t15=>r15,t26=>t26,t27=>t27,t28=>t28]
movq %t28, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t26=>t26,t27=>t27]
movq %t27, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t26=>t26]
movq %t26, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L1 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L1: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                  t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36 rc def
L2:                                        |        |                             |   |   |   |                                                                                      6 null
movq %t3, %t26 # default move              |                                      |   |   |   |                                           |                                          6 [t26=>t26]
movq %t12, %t27 # default move             |                                          |   |   |                                           |   |                                      6 [t27=>t27]
movq %t13, %t28 # default move             |                                              |   |                                           |   |   |                                  6 [t28=>t28]
movq %t14, %t29 # default move             |                                                  |                                           |   |   |   |                              6 [t29=>t29]
movq %t15, %t30 # default move             |                                                                                              |   |   |   |   |                          6 [t30=>t30]
movq $5, %t32 # const                      |                                                                                              |   |   |   |   |       |                  7 [t32=>t32]
movq %t32, %t9 # move arg 5 to temp        |                          |                                                                   |   |   |   |   |       |                  8 [t9=>r9]
movq $4, %t33 # const                      |                          |                                                                   |   |   |   |   |       |   |              9 [t33=>t33]
movq %t33, %t8 # move arg 4 to temp        |                       |  |                                                                   |   |   |   |   |       |   |              10 [t8=>r8]
movq $3, %t34 # const                      |                       |  |                                                                   |   |   |   |   |       |   |   |          11 [t34=>t34]
movq %t34, %t4 # move arg 3 to temp        |           |           |  |                                                                   |   |   |   |   |       |   |   |          12 [t4=>rcx]
movq $2, %t35 # const                      |           |           |  |                                                                   |   |   |   |   |       |   |   |   |      13 [t35=>t35]
movq %t35, %t5 # move arg 2 to temp        |           |  |        |  |                                                                   |   |   |   |   |       |   |   |   |      14 [t5=>rdx]
movq $1, %t36 # const                      |           |  |        |  |                                                                   |   |   |   |   |       |   |   |   |   |  15 [t36=>t36]
movq %t36, %t6 # move arg 1 to temp        |           |  |  |     |  |                                                                   |   |   |   |   |       |   |   |   |   |  16 [t6=>rsi]
movq %t0, %t7 # move arg 0 to temp         |           |  |  |  |  |  |                                                                   |   |   |   |   |       |   |   |   |   |  17 [t7=>rdi]
call L0 # default call                           |                                                                                        |   |   |   |   |                          6 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t2, %t31 # default move                                                                                                             |   |   |   |   |   |                      6 [t31=>t31]
movq %t31, %t7 # move arg 0 to temp                             |                                                                         |   |   |   |   |   |                      7 [t7=>rdi]
call printi # exp call ( no return value )                                                                                                |   |   |   |   |                          5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t30, %t15 # default move                                                                |                                           |   |   |   |                              5 [t15=>r15]
movq %t29, %t14 # default move                                                            |   |                                           |   |   |                                  5 [t14=>r14]
movq %t28, %t13 # default move                                                        |   |   |                                           |   |                                      5 [t13=>r13]
movq %t27, %t12 # default move                                                    |   |   |   |                                           |                                          5 [t12=>r12]
movq %t26, %t3 # default move                       |                             |   |   |   |                                                                                      5 [t3=>rbx]
jmp L1                                              |                             |   |   |   |                                                                                      5 null
L1:                                                 |                             |   |   |   |                                                                                      5 null
# sink                                                                                                                                                                               0 null
0: t16 interferes with:t15 t14 t13 t12 t9 t8 t5 t4 t3 
1: t3 interferes with:t15 t14 t13 t12 
2: t4 interferes with:
3: t5 interferes with:
4: t8 interferes with:
5: t9 interferes with:
6: t12 interferes with:t21 t15 t14 t13 
7: t13 interferes with:t22 t21 t15 t14 
8: t14 interferes with:t23 t22 t21 t15 
9: t15 interferes with:t24 t23 t22 t21 
10: t17 interferes with:t16 t15 t14 t13 t12 t9 t8 t4 t3 
11: t18 interferes with:t17 t16 t15 t14 t13 t12 t9 t8 t3 
12: t19 interferes with:t18 t17 t16 t15 t14 t13 t12 t9 t3 
13: t20 interferes with:t19 t18 t17 t16 t15 t14 t13 t12 t3 
14: t21 interferes with:t20 t19 t18 t17 t16 t15 t14 t13 t12 
15: t22 interferes with:t21 t20 t19 t18 t17 t16 t15 t14 t13 
16: t23 interferes with:t22 t21 t20 t19 t18 t17 t16 t15 t14 
17: t24 interferes with:t23 t22 t21 t20 t19 t18 t17 t16 t15 
18: t25 interferes with:t24 t23 t22 t21 t20 t19 t18 t17 t16 
19: t37 interferes with:t25 t24 t23 t22 t21 t20 t19 t18 t17 
20: t38 interferes with:t25 t24 t23 t22 t21 t20 t19 t18 
21: t39 interferes with:t25 t24 t23 t22 t21 t20 t19 
22: t40 interferes with:t25 t24 t23 t22 t21 t20 
23: t2 interferes with:t25 t24 t23 t22 t21 
registers:14
### Uses and Defs
L4: : def => null, use => null
movq %t7, -8(%t0) # store to offset : def => null, use => [t7=>rdi,t0=>rbp]
movq %t6, %t16 # default move : def => [t16=>t16], use => [t6=>rsi]
movq %t5, %t17 # default move : def => [t17=>t17], use => [t5=>rdx]
movq %t4, %t18 # default move : def => [t18=>t18], use => [t4=>rcx]
movq %t8, %t19 # default move : def => [t19=>t19], use => [t8=>r8]
movq %t9, %t20 # default move : def => [t20=>t20], use => [t9=>r9]
movq %t3, %t21 # default move : def => [t21=>t21], use => [t3=>rbx]
movq %t12, %t22 # default move : def => [t22=>t22], use => [t12=>r12]
movq %t13, %t23 # default move : def => [t23=>t23], use => [t13=>r13]
movq %t14, %t24 # default move : def => [t24=>t24], use => [t14=>r14]
movq %t15, %t25 # default move : def => [t25=>t25], use => [t15=>r15]
movq %t16, %t37 # add lexp -> r : def => [t37=>t37], use => [t16=>t16]
add %t17, %t37 : def => [t37=>t37], use => [t17=>t17,t37=>t37]
movq %t37, %t38 # add lexp -> r : def => [t38=>t38], use => [t37=>t37]
add %t18, %t38 : def => [t38=>t38], use => [t18=>t18,t38=>t38]
movq %t38, %t39 # add lexp -> r : def => [t39=>t39], use => [t38=>t38]
add %t19, %t39 : def => [t39=>t39], use => [t19=>t19,t39=>t39]
movq %t39, %t40 # add lexp -> r : def => [t40=>t40], use => [t39=>t39]
add %t20, %t40 : def => [t40=>t40], use => [t20=>t20,t40=>t40]
movq %t40, %t2 # default move : def => [t2=>rax], use => [t40=>t40]
movq %t25, %t15 # default move : def => [t15=>r15], use => [t25=>t25]
movq %t24, %t14 # default move : def => [t14=>r14], use => [t24=>t24]
movq %t23, %t13 # default move : def => [t13=>r13], use => [t23=>t23]
movq %t22, %t12 # default move : def => [t12=>r12], use => [t22=>t22]
movq %t21, %t3 # default move : def => [t3=>rbx], use => [t21=>t21]
jmp L3 : def => null, use => null
L3: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L4: => [t0=>rbp,t3=>rbx,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t7, -8(%t0) # store to offset => [t3=>rbx,t4=>rcx,t5=>rdx,t6=>rsi,t8=>r8,t9=>r9,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t6, %t16 # default move => [t3=>rbx,t4=>rcx,t5=>rdx,t8=>r8,t9=>r9,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16]
movq %t5, %t17 # default move => [t3=>rbx,t4=>rcx,t8=>r8,t9=>r9,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17]
movq %t4, %t18 # default move => [t3=>rbx,t8=>r8,t9=>r9,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18]
movq %t8, %t19 # default move => [t3=>rbx,t9=>r9,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19]
movq %t9, %t20 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
movq %t3, %t21 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t12, %t22 # default move => [t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t13, %t23 # default move => [t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23]
movq %t14, %t24 # default move => [t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24]
movq %t15, %t25 # default move => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25]
movq %t16, %t37 # add lexp -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t37=>t37]
add %t17, %t37 => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t37=>t37]
movq %t37, %t38 # add lexp -> r => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t38=>t38]
add %t18, %t38 => [t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t38=>t38]
movq %t38, %t39 # add lexp -> r => [t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t39=>t39]
add %t19, %t39 => [t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t39=>t39]
movq %t39, %t40 # add lexp -> r => [t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t40=>t40]
add %t20, %t40 => [t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t40=>t40]
movq %t40, %t2 # default move => [t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25]
movq %t25, %t15 # default move => [t15=>r15,t21=>t21,t22=>t22,t23=>t23,t24=>t24]
movq %t24, %t14 # default move => [t14=>r14,t15=>r15,t21=>t21,t22=>t22,t23=>t23]
movq %t23, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t21=>t21,t22=>t22]
movq %t22, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t21=>t21]
movq %t21, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L3 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L3: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                           t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36 t37 t38 t39 t40 rc def
L4:                                 |        |  |  |  |  |  |  |           |   |   |   |                                                                                                      12 null
movq %t7, -8(%t0) # store to offset          |  |  |  |     |  |           |   |   |   |                                                                                                      10 null
movq %t6, %t16 # default move                |  |  |        |  |           |   |   |   |   |                                                                                                  10 [t16=>t16]
movq %t5, %t17 # default move                |  |           |  |           |   |   |   |   |   |                                                                                              10 [t17=>t17]
movq %t4, %t18 # default move                |              |  |           |   |   |   |   |   |   |                                                                                          10 [t18=>t18]
movq %t8, %t19 # default move                |                 |           |   |   |   |   |   |   |   |                                                                                      10 [t19=>t19]
movq %t9, %t20 # default move                |                             |   |   |   |   |   |   |   |   |                                                                                  10 [t20=>t20]
movq %t3, %t21 # default move                                              |   |   |   |   |   |   |   |   |   |                                                                              10 [t21=>t21]
movq %t12, %t22 # default move                                                 |   |   |   |   |   |   |   |   |   |                                                                          10 [t22=>t22]
movq %t13, %t23 # default move                                                     |   |   |   |   |   |   |   |   |   |                                                                      10 [t23=>t23]
movq %t14, %t24 # default move                                                         |   |   |   |   |   |   |   |   |   |                                                                  10 [t24=>t24]
movq %t15, %t25 # default move                                                             |   |   |   |   |   |   |   |   |   |                                                              10 [t25=>t25]
movq %t16, %t37 # add lexp -> r                                                                |   |   |   |   |   |   |   |   |                                               |              10 [t37=>t37]
add %t17, %t37                                                                                     |   |   |   |   |   |   |   |                                               |              9 [t37=>t37]
movq %t37, %t38 # add lexp -> r                                                                    |   |   |   |   |   |   |   |                                                   |          9 [t38=>t38]
add %t18, %t38                                                                                         |   |   |   |   |   |   |                                                   |          8 [t38=>t38]
movq %t38, %t39 # add lexp -> r                                                                        |   |   |   |   |   |   |                                                       |      8 [t39=>t39]
add %t19, %t39                                                                                             |   |   |   |   |   |                                                       |      7 [t39=>t39]
movq %t39, %t40 # add lexp -> r                                                                            |   |   |   |   |   |                                                           |  7 [t40=>t40]
add %t20, %t40                                                                                                 |   |   |   |   |                                                           |  6 [t40=>t40]
movq %t40, %t2 # default move                                                                                  |   |   |   |   |                                                              5 [t2=>rax]
movq %t25, %t15 # default move                                                         |                       |   |   |   |                                                                  5 [t15=>r15]
movq %t24, %t14 # default move                                                     |   |                       |   |   |                                                                      5 [t14=>r14]
movq %t23, %t13 # default move                                                 |   |   |                       |   |                                                                          5 [t13=>r13]
movq %t22, %t12 # default move                                             |   |   |   |                       |                                                                              5 [t12=>r12]
movq %t21, %t3 # default move                |                             |   |   |   |                                                                                                      5 [t3=>rbx]
jmp L3                                       |                             |   |   |   |                                                                                                      5 null
L3:                                          |                             |   |   |   |                                                                                                      5 null
# sink                                                                                                                                                                                        0 null
[92mTest Result: ./tests/function_five_arg.tig passed.[0m
0: t25 interferes with:t15 t14 t13 t12 t0 
1: t0 interferes with:
2: t12 interferes with:t25 t15 t14 t13 
3: t13 interferes with:t26 t25 t15 t14 
4: t14 interferes with:t27 t26 t25 t15 
5: t15 interferes with:t28 t27 t26 t25 
6: t26 interferes with:t25 t15 t14 t13 t0 
7: t27 interferes with:t26 t25 t15 t14 t0 
8: t28 interferes with:t27 t26 t25 t15 t0 
9: t29 interferes with:t28 t27 t26 t25 t0 
10: t31 interferes with:t29 t28 t27 t26 t25 t0 
11: t8 interferes with:t2 t29 t28 t27 t26 t25 t0 
12: t32 interferes with:t31 t29 t28 t27 t26 t25 t8 t0 
13: t4 interferes with:t2 t31 t29 t28 t27 t26 t25 t8 t0 
14: t33 interferes with:t32 t31 t29 t28 t27 t26 t25 t8 t4 t0 
15: t5 interferes with:t2 t32 t31 t29 t28 t27 t26 t25 t8 t4 t0 
16: t34 interferes with:t33 t32 t31 t29 t28 t27 t26 t25 t8 t5 t4 t0 
17: t6 interferes with:t2 t33 t32 t31 t29 t28 t27 t26 t25 t8 t5 t4 t0 
18: t7 interferes with:t2 t34 t33 t32 t31 t29 t28 t27 t26 t25 t8 t6 t5 t4 
19: t2 interferes with:t29 t28 t27 t26 t25 
20: t9 interferes with:t29 t28 t27 t26 t25 t2 
21: t10 interferes with:t29 t28 t27 t26 t25 t2 
22: t11 interferes with:t29 t28 t27 t26 t25 t2 
23: t30 interferes with:t29 t28 t27 t26 t25 
24: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L2: : def => null, use => null
movq %t3, %t25 # default move : def => [t25=>t25], use => [t3=>rbx]
movq %t12, %t26 # default move : def => [t26=>t26], use => [t12=>r12]
movq %t13, %t27 # default move : def => [t27=>t27], use => [t13=>r13]
movq %t14, %t28 # default move : def => [t28=>t28], use => [t14=>r14]
movq %t15, %t29 # default move : def => [t29=>t29], use => [t15=>r15]
movq $4, %t31 # const : def => [t31=>t31], use => null
movq %t31, %t8 # move arg 4 to temp : def => [t8=>r8], use => [t31=>t31]
movq $3, %t32 # const : def => [t32=>t32], use => null
movq %t32, %t4 # move arg 3 to temp : def => [t4=>rcx], use => [t32=>t32]
movq $2, %t33 # const : def => [t33=>t33], use => null
movq %t33, %t5 # move arg 2 to temp : def => [t5=>rdx], use => [t33=>t33]
movq $1, %t34 # const : def => [t34=>t34], use => null
movq %t34, %t6 # move arg 1 to temp : def => [t6=>rsi], use => [t34=>t34]
movq %t0, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t0=>rbp]
call L0 # default call : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t31=>t31,t8=>r8,t32=>t32,t4=>rcx,t33=>t33,t5=>rdx,t34=>t34,t6=>rsi,t0=>rbp,t7=>rdi]
movq %t2, %t30 # default move : def => [t30=>t30], use => [t2=>rax]
movq %t30, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t30=>t30]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t30=>t30,t7=>rdi]
movq %t29, %t15 # default move : def => [t15=>r15], use => [t29=>t29]
movq %t28, %t14 # default move : def => [t14=>r14], use => [t28=>t28]
movq %t27, %t13 # default move : def => [t13=>r13], use => [t27=>t27]
movq %t26, %t12 # default move : def => [t12=>r12], use => [t26=>t26]
movq %t25, %t3 # default move : def => [t3=>rbx], use => [t25=>t25]
jmp L1 : def => null, use => null
L1: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L2: => [t0=>rbp,t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t25 # default move => [t0=>rbp,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t25=>t25]
movq %t12, %t26 # default move => [t0=>rbp,t13=>r13,t14=>r14,t15=>r15,t25=>t25,t26=>t26]
movq %t13, %t27 # default move => [t0=>rbp,t14=>r14,t15=>r15,t25=>t25,t26=>t26,t27=>t27]
movq %t14, %t28 # default move => [t0=>rbp,t15=>r15,t25=>t25,t26=>t26,t27=>t27,t28=>t28]
movq %t15, %t29 # default move => [t0=>rbp,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t29=>t29]
movq $4, %t31 # const => [t0=>rbp,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t31=>t31]
movq %t31, %t8 # move arg 4 to temp => [t0=>rbp,t8=>r8,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t31=>t31]
movq $3, %t32 # const => [t0=>rbp,t8=>r8,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t31=>t31,t32=>t32]
movq %t32, %t4 # move arg 3 to temp => [t0=>rbp,t4=>rcx,t8=>r8,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t31=>t31,t32=>t32]
movq $2, %t33 # const => [t0=>rbp,t4=>rcx,t8=>r8,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t31=>t31,t32=>t32,t33=>t33]
movq %t33, %t5 # move arg 2 to temp => [t0=>rbp,t4=>rcx,t5=>rdx,t8=>r8,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t31=>t31,t32=>t32,t33=>t33]
movq $1, %t34 # const => [t0=>rbp,t4=>rcx,t5=>rdx,t8=>r8,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t31=>t31,t32=>t32,t33=>t33,t34=>t34]
movq %t34, %t6 # move arg 1 to temp => [t0=>rbp,t4=>rcx,t5=>rdx,t6=>rsi,t8=>r8,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t31=>t31,t32=>t32,t33=>t33,t34=>t34]
movq %t0, %t7 # move arg 0 to temp => [t0=>rbp,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t31=>t31,t32=>t32,t33=>t33,t34=>t34]
call L0 # default call => [t2=>rax,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t29=>t29]
movq %t2, %t30 # default move => [t25=>t25,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30]
movq %t30, %t7 # move arg 0 to temp => [t7=>rdi,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30]
call printi # exp call ( no return value ) => [t25=>t25,t26=>t26,t27=>t27,t28=>t28,t29=>t29]
movq %t29, %t15 # default move => [t15=>r15,t25=>t25,t26=>t26,t27=>t27,t28=>t28]
movq %t28, %t14 # default move => [t14=>r14,t15=>r15,t25=>t25,t26=>t26,t27=>t27]
movq %t27, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t25=>t25,t26=>t26]
movq %t26, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t25=>t25]
movq %t25, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L1 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L1: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                  t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 rc def
L2:                                        |        |                             |   |   |   |                                                                              6 null
movq %t3, %t25 # default move              |                                      |   |   |   |                                       |                                      6 [t25=>t25]
movq %t12, %t26 # default move             |                                          |   |   |                                       |   |                                  6 [t26=>t26]
movq %t13, %t27 # default move             |                                              |   |                                       |   |   |                              6 [t27=>t27]
movq %t14, %t28 # default move             |                                                  |                                       |   |   |   |                          6 [t28=>t28]
movq %t15, %t29 # default move             |                                                                                          |   |   |   |   |                      6 [t29=>t29]
movq $4, %t31 # const                      |                                                                                          |   |   |   |   |       |              7 [t31=>t31]
movq %t31, %t8 # move arg 4 to temp        |                       |                                                                  |   |   |   |   |       |              8 [t8=>r8]
movq $3, %t32 # const                      |                       |                                                                  |   |   |   |   |       |   |          9 [t32=>t32]
movq %t32, %t4 # move arg 3 to temp        |           |           |                                                                  |   |   |   |   |       |   |          10 [t4=>rcx]
movq $2, %t33 # const                      |           |           |                                                                  |   |   |   |   |       |   |   |      11 [t33=>t33]
movq %t33, %t5 # move arg 2 to temp        |           |  |        |                                                                  |   |   |   |   |       |   |   |      12 [t5=>rdx]
movq $1, %t34 # const                      |           |  |        |                                                                  |   |   |   |   |       |   |   |   |  13 [t34=>t34]
movq %t34, %t6 # move arg 1 to temp        |           |  |  |     |                                                                  |   |   |   |   |       |   |   |   |  14 [t6=>rsi]
movq %t0, %t7 # move arg 0 to temp         |           |  |  |  |  |                                                                  |   |   |   |   |       |   |   |   |  15 [t7=>rdi]
call L0 # default call                           |                                                                                    |   |   |   |   |                      6 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t2, %t30 # default move                                                                                                         |   |   |   |   |   |                  6 [t30=>t30]
movq %t30, %t7 # move arg 0 to temp                             |                                                                     |   |   |   |   |   |                  7 [t7=>rdi]
call printi # exp call ( no return value )                                                                                            |   |   |   |   |                      5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t29, %t15 # default move                                                                |                                       |   |   |   |                          5 [t15=>r15]
movq %t28, %t14 # default move                                                            |   |                                       |   |   |                              5 [t14=>r14]
movq %t27, %t13 # default move                                                        |   |   |                                       |   |                                  5 [t13=>r13]
movq %t26, %t12 # default move                                                    |   |   |   |                                       |                                      5 [t12=>r12]
movq %t25, %t3 # default move                       |                             |   |   |   |                                                                              5 [t3=>rbx]
jmp L1                                              |                             |   |   |   |                                                                              5 null
L1:                                                 |                             |   |   |   |                                                                              5 null
# sink                                                                                                                                                                       0 null
0: t16 interferes with:t15 t14 t13 t12 t8 t5 t4 t3 
1: t3 interferes with:t15 t14 t13 t12 
2: t4 interferes with:
3: t5 interferes with:
4: t8 interferes with:
5: t12 interferes with:t20 t15 t14 t13 
6: t13 interferes with:t21 t20 t15 t14 
7: t14 interferes with:t22 t21 t20 t15 
8: t15 interferes with:t23 t22 t21 t20 
9: t17 interferes with:t16 t15 t14 t13 t12 t8 t4 t3 
10: t18 interferes with:t17 t16 t15 t14 t13 t12 t8 t3 
11: t19 interferes with:t18 t17 t16 t15 t14 t13 t12 t3 
12: t20 interferes with:t19 t18 t17 t16 t15 t14 t13 t12 
13: t21 interferes with:t20 t19 t18 t17 t16 t15 t14 t13 
14: t22 interferes with:t21 t20 t19 t18 t17 t16 t15 t14 
15: t23 interferes with:t22 t21 t20 t19 t18 t17 t16 t15 
16: t24 interferes with:t23 t22 t21 t20 t19 t18 t17 t16 
17: t35 interferes with:t24 t23 t22 t21 t20 t19 t18 t17 
18: t36 interferes with:t24 t23 t22 t21 t20 t19 t18 
19: t37 interferes with:t24 t23 t22 t21 t20 t19 
20: t2 interferes with:t24 t23 t22 t21 t20 
registers:14
### Uses and Defs
L4: : def => null, use => null
movq %t7, -8(%t0) # store to offset : def => null, use => [t7=>rdi,t0=>rbp]
movq %t6, %t16 # default move : def => [t16=>t16], use => [t6=>rsi]
movq %t5, %t17 # default move : def => [t17=>t17], use => [t5=>rdx]
movq %t4, %t18 # default move : def => [t18=>t18], use => [t4=>rcx]
movq %t8, %t19 # default move : def => [t19=>t19], use => [t8=>r8]
movq %t3, %t20 # default move : def => [t20=>t20], use => [t3=>rbx]
movq %t12, %t21 # default move : def => [t21=>t21], use => [t12=>r12]
movq %t13, %t22 # default move : def => [t22=>t22], use => [t13=>r13]
movq %t14, %t23 # default move : def => [t23=>t23], use => [t14=>r14]
movq %t15, %t24 # default move : def => [t24=>t24], use => [t15=>r15]
movq %t16, %t35 # add lexp -> r : def => [t35=>t35], use => [t16=>t16]
add %t17, %t35 : def => [t35=>t35], use => [t17=>t17,t35=>t35]
movq %t35, %t36 # add lexp -> r : def => [t36=>t36], use => [t35=>t35]
add %t18, %t36 : def => [t36=>t36], use => [t18=>t18,t36=>t36]
movq %t36, %t37 # add lexp -> r : def => [t37=>t37], use => [t36=>t36]
add %t19, %t37 : def => [t37=>t37], use => [t19=>t19,t37=>t37]
movq %t37, %t2 # default move : def => [t2=>rax], use => [t37=>t37]
movq %t24, %t15 # default move : def => [t15=>r15], use => [t24=>t24]
movq %t23, %t14 # default move : def => [t14=>r14], use => [t23=>t23]
movq %t22, %t13 # default move : def => [t13=>r13], use => [t22=>t22]
movq %t21, %t12 # default move : def => [t12=>r12], use => [t21=>t21]
movq %t20, %t3 # default move : def => [t3=>rbx], use => [t20=>t20]
jmp L3 : def => null, use => null
L3: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L4: => [t0=>rbp,t3=>rbx,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t7, -8(%t0) # store to offset => [t3=>rbx,t4=>rcx,t5=>rdx,t6=>rsi,t8=>r8,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t6, %t16 # default move => [t3=>rbx,t4=>rcx,t5=>rdx,t8=>r8,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16]
movq %t5, %t17 # default move => [t3=>rbx,t4=>rcx,t8=>r8,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17]
movq %t4, %t18 # default move => [t3=>rbx,t8=>r8,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18]
movq %t8, %t19 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19]
movq %t3, %t20 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
movq %t12, %t21 # default move => [t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t13, %t22 # default move => [t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t14, %t23 # default move => [t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23]
movq %t15, %t24 # default move => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24]
movq %t16, %t35 # add lexp -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t35=>t35]
add %t17, %t35 => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t35=>t35]
movq %t35, %t36 # add lexp -> r => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t36=>t36]
add %t18, %t36 => [t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t36=>t36]
movq %t36, %t37 # add lexp -> r => [t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t37=>t37]
add %t19, %t37 => [t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t37=>t37]
movq %t37, %t2 # default move => [t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24]
movq %t24, %t15 # default move => [t15=>r15,t20=>t20,t21=>t21,t22=>t22,t23=>t23]
movq %t23, %t14 # default move => [t14=>r14,t15=>r15,t20=>t20,t21=>t21,t22=>t22]
movq %t22, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t20=>t20,t21=>t21]
movq %t21, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t20=>t20]
movq %t20, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L3 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L3: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                           t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36 t37 rc def
L4:                                 |        |  |  |  |  |  |              |   |   |   |                                                                                          11 null
movq %t7, -8(%t0) # store to offset          |  |  |  |     |              |   |   |   |                                                                                          9 null
movq %t6, %t16 # default move                |  |  |        |              |   |   |   |   |                                                                                      9 [t16=>t16]
movq %t5, %t17 # default move                |  |           |              |   |   |   |   |   |                                                                                  9 [t17=>t17]
movq %t4, %t18 # default move                |              |              |   |   |   |   |   |   |                                                                              9 [t18=>t18]
movq %t8, %t19 # default move                |                             |   |   |   |   |   |   |   |                                                                          9 [t19=>t19]
movq %t3, %t20 # default move                                              |   |   |   |   |   |   |   |   |                                                                      9 [t20=>t20]
movq %t12, %t21 # default move                                                 |   |   |   |   |   |   |   |   |                                                                  9 [t21=>t21]
movq %t13, %t22 # default move                                                     |   |   |   |   |   |   |   |   |                                                              9 [t22=>t22]
movq %t14, %t23 # default move                                                         |   |   |   |   |   |   |   |   |                                                          9 [t23=>t23]
movq %t15, %t24 # default move                                                             |   |   |   |   |   |   |   |   |                                                      9 [t24=>t24]
movq %t16, %t35 # add lexp -> r                                                                |   |   |   |   |   |   |   |                                           |          9 [t35=>t35]
add %t17, %t35                                                                                     |   |   |   |   |   |   |                                           |          8 [t35=>t35]
movq %t35, %t36 # add lexp -> r                                                                    |   |   |   |   |   |   |                                               |      8 [t36=>t36]
add %t18, %t36                                                                                         |   |   |   |   |   |                                               |      7 [t36=>t36]
movq %t36, %t37 # add lexp -> r                                                                        |   |   |   |   |   |                                                   |  7 [t37=>t37]
add %t19, %t37                                                                                             |   |   |   |   |                                                   |  6 [t37=>t37]
movq %t37, %t2 # default move                                                                              |   |   |   |   |                                                      5 [t2=>rax]
movq %t24, %t15 # default move                                                         |                   |   |   |   |                                                          5 [t15=>r15]
movq %t23, %t14 # default move                                                     |   |                   |   |   |                                                              5 [t14=>r14]
movq %t22, %t13 # default move                                                 |   |   |                   |   |                                                                  5 [t13=>r13]
movq %t21, %t12 # default move                                             |   |   |   |                   |                                                                      5 [t12=>r12]
movq %t20, %t3 # default move                |                             |   |   |   |                                                                                          5 [t3=>rbx]
jmp L3                                       |                             |   |   |   |                                                                                          5 null
L3:                                          |                             |   |   |   |                                                                                          5 null
# sink                                                                                                                                                                            0 null
[92mTest Result: ./tests/function_four_arg.tig passed.[0m
0: t22 interferes with:t15 t14 t13 t12 t0 
1: t0 interferes with:
2: t12 interferes with:t22 t15 t14 t13 
3: t13 interferes with:t23 t22 t15 t14 
4: t14 interferes with:t24 t23 t22 t15 
5: t15 interferes with:t25 t24 t23 t22 
6: t23 interferes with:t22 t15 t14 t13 t0 
7: t24 interferes with:t23 t22 t15 t14 t0 
8: t25 interferes with:t24 t23 t22 t15 t0 
9: t26 interferes with:t25 t24 t23 t22 t0 
10: t28 interferes with:t26 t25 t24 t23 t22 t0 
11: t6 interferes with:t2 t26 t25 t24 t23 t22 t0 
12: t7 interferes with:t2 t28 t26 t25 t24 t23 t22 t6 
13: t2 interferes with:t26 t25 t24 t23 t22 
14: t4 interferes with:t26 t25 t24 t23 t22 t2 
15: t5 interferes with:t26 t25 t24 t23 t22 t2 
16: t8 interferes with:t26 t25 t24 t23 t22 t2 
17: t9 interferes with:t26 t25 t24 t23 t22 t2 
18: t10 interferes with:t26 t25 t24 t23 t22 t2 
19: t11 interferes with:t26 t25 t24 t23 t22 t2 
20: t27 interferes with:t26 t25 t24 t23 t22 
21: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L2: : def => null, use => null
movq %t3, %t22 # default move : def => [t22=>t22], use => [t3=>rbx]
movq %t12, %t23 # default move : def => [t23=>t23], use => [t12=>r12]
movq %t13, %t24 # default move : def => [t24=>t24], use => [t13=>r13]
movq %t14, %t25 # default move : def => [t25=>t25], use => [t14=>r14]
movq %t15, %t26 # default move : def => [t26=>t26], use => [t15=>r15]
movq $7, %t28 # const : def => [t28=>t28], use => null
movq %t28, %t6 # move arg 1 to temp : def => [t6=>rsi], use => [t28=>t28]
movq %t0, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t0=>rbp]
call L0 # default call : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t28=>t28,t6=>rsi,t0=>rbp,t7=>rdi]
movq %t2, %t27 # default move : def => [t27=>t27], use => [t2=>rax]
movq %t27, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t27=>t27]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t27=>t27,t7=>rdi]
movq %t26, %t15 # default move : def => [t15=>r15], use => [t26=>t26]
movq %t25, %t14 # default move : def => [t14=>r14], use => [t25=>t25]
movq %t24, %t13 # default move : def => [t13=>r13], use => [t24=>t24]
movq %t23, %t12 # default move : def => [t12=>r12], use => [t23=>t23]
movq %t22, %t3 # default move : def => [t3=>rbx], use => [t22=>t22]
jmp L1 : def => null, use => null
L1: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L2: => [t0=>rbp,t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t22 # default move => [t0=>rbp,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t22=>t22]
movq %t12, %t23 # default move => [t0=>rbp,t13=>r13,t14=>r14,t15=>r15,t22=>t22,t23=>t23]
movq %t13, %t24 # default move => [t0=>rbp,t14=>r14,t15=>r15,t22=>t22,t23=>t23,t24=>t24]
movq %t14, %t25 # default move => [t0=>rbp,t15=>r15,t22=>t22,t23=>t23,t24=>t24,t25=>t25]
movq %t15, %t26 # default move => [t0=>rbp,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26]
movq $7, %t28 # const => [t0=>rbp,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t28=>t28]
movq %t28, %t6 # move arg 1 to temp => [t0=>rbp,t6=>rsi,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t28=>t28]
movq %t0, %t7 # move arg 0 to temp => [t0=>rbp,t6=>rsi,t7=>rdi,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t28=>t28]
call L0 # default call => [t2=>rax,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26]
movq %t2, %t27 # default move => [t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27]
movq %t27, %t7 # move arg 0 to temp => [t7=>rdi,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27]
call printi # exp call ( no return value ) => [t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26]
movq %t26, %t15 # default move => [t15=>r15,t22=>t22,t23=>t23,t24=>t24,t25=>t25]
movq %t25, %t14 # default move => [t14=>r14,t15=>r15,t22=>t22,t23=>t23,t24=>t24]
movq %t24, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t22=>t22,t23=>t23]
movq %t23, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t22=>t22]
movq %t22, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L1 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L1: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                  t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 rc def
L2:                                        |        |                             |   |   |   |                                                      6 null
movq %t3, %t22 # default move              |                                      |   |   |   |                           |                          6 [t22=>t22]
movq %t12, %t23 # default move             |                                          |   |   |                           |   |                      6 [t23=>t23]
movq %t13, %t24 # default move             |                                              |   |                           |   |   |                  6 [t24=>t24]
movq %t14, %t25 # default move             |                                                  |                           |   |   |   |              6 [t25=>t25]
movq %t15, %t26 # default move             |                                                                              |   |   |   |   |          6 [t26=>t26]
movq $7, %t28 # const                      |                                                                              |   |   |   |   |       |  7 [t28=>t28]
movq %t28, %t6 # move arg 1 to temp        |                 |                                                            |   |   |   |   |       |  8 [t6=>rsi]
movq %t0, %t7 # move arg 0 to temp         |                 |  |                                                         |   |   |   |   |       |  9 [t7=>rdi]
call L0 # default call                           |                                                                        |   |   |   |   |          6 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t2, %t27 # default move                                                                                             |   |   |   |   |   |      6 [t27=>t27]
movq %t27, %t7 # move arg 0 to temp                             |                                                         |   |   |   |   |   |      7 [t7=>rdi]
call printi # exp call ( no return value )                                                                                |   |   |   |   |          5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t26, %t15 # default move                                                                |                           |   |   |   |              5 [t15=>r15]
movq %t25, %t14 # default move                                                            |   |                           |   |   |                  5 [t14=>r14]
movq %t24, %t13 # default move                                                        |   |   |                           |   |                      5 [t13=>r13]
movq %t23, %t12 # default move                                                    |   |   |   |                           |                          5 [t12=>r12]
movq %t22, %t3 # default move                       |                             |   |   |   |                                                      5 [t3=>rbx]
jmp L1                                              |                             |   |   |   |                                                      5 null
L1:                                                 |                             |   |   |   |                                                      5 null
# sink                                                                                                                                               0 null
0: t16 interferes with:t15 t14 t13 t12 t3 
1: t3 interferes with:t15 t14 t13 t12 
2: t12 interferes with:t17 t15 t14 t13 
3: t13 interferes with:t18 t17 t15 t14 
4: t14 interferes with:t19 t18 t17 t15 
5: t15 interferes with:t20 t19 t18 t17 
6: t17 interferes with:t16 t15 t14 t13 t12 
7: t18 interferes with:t17 t16 t15 t14 t13 
8: t19 interferes with:t18 t17 t16 t15 t14 
9: t20 interferes with:t19 t18 t17 t16 t15 
10: t21 interferes with:t20 t19 t18 t17 t16 
11: t29 interferes with:t21 t20 t19 t18 t17 t16 
12: t30 interferes with:t21 t20 t19 t18 t17 t16 
13: t2 interferes with:t21 t20 t19 t18 t17 
registers:14
### Uses and Defs
L4: : def => null, use => null
movq %t7, -8(%t0) # store to offset : def => null, use => [t7=>rdi,t0=>rbp]
movq %t6, %t16 # default move : def => [t16=>t16], use => [t6=>rsi]
movq %t3, %t17 # default move : def => [t17=>t17], use => [t3=>rbx]
movq %t12, %t18 # default move : def => [t18=>t18], use => [t12=>r12]
movq %t13, %t19 # default move : def => [t19=>t19], use => [t13=>r13]
movq %t14, %t20 # default move : def => [t20=>t20], use => [t14=>r14]
movq %t15, %t21 # default move : def => [t21=>t21], use => [t15=>r15]
movq $5, %t29 # const : def => [t29=>t29], use => null
movq %t29, %t30 # add lexp -> r : def => [t30=>t30], use => [t29=>t29]
add %t16, %t30 : def => [t30=>t30], use => [t16=>t16,t30=>t30]
movq %t30, %t2 # default move : def => [t2=>rax], use => [t30=>t30]
movq %t21, %t15 # default move : def => [t15=>r15], use => [t21=>t21]
movq %t20, %t14 # default move : def => [t14=>r14], use => [t20=>t20]
movq %t19, %t13 # default move : def => [t13=>r13], use => [t19=>t19]
movq %t18, %t12 # default move : def => [t12=>r12], use => [t18=>t18]
movq %t17, %t3 # default move : def => [t3=>rbx], use => [t17=>t17]
jmp L3 : def => null, use => null
L3: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L4: => [t0=>rbp,t3=>rbx,t6=>rsi,t7=>rdi,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t7, -8(%t0) # store to offset => [t3=>rbx,t6=>rsi,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t6, %t16 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16]
movq %t3, %t17 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17]
movq %t12, %t18 # default move => [t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18]
movq %t13, %t19 # default move => [t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19]
movq %t14, %t20 # default move => [t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
movq %t15, %t21 # default move => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq $5, %t29 # const => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t29=>t29]
movq %t29, %t30 # add lexp -> r => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t30=>t30]
add %t16, %t30 => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t30=>t30]
movq %t30, %t2 # default move => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t21, %t15 # default move => [t15=>r15,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
movq %t20, %t14 # default move => [t14=>r14,t15=>r15,t17=>t17,t18=>t18,t19=>t19]
movq %t19, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t17=>t17,t18=>t18]
movq %t18, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t17=>t17]
movq %t17, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L3 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L3: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                           t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 rc def
L4:                                 |        |        |  |                 |   |   |   |                                                              8 null
movq %t7, -8(%t0) # store to offset          |        |                    |   |   |   |                                                              6 null
movq %t6, %t16 # default move                |                             |   |   |   |   |                                                          6 [t16=>t16]
movq %t3, %t17 # default move                                              |   |   |   |   |   |                                                      6 [t17=>t17]
movq %t12, %t18 # default move                                                 |   |   |   |   |   |                                                  6 [t18=>t18]
movq %t13, %t19 # default move                                                     |   |   |   |   |   |                                              6 [t19=>t19]
movq %t14, %t20 # default move                                                         |   |   |   |   |   |                                          6 [t20=>t20]
movq %t15, %t21 # default move                                                             |   |   |   |   |   |                                      6 [t21=>t21]
movq $5, %t29 # const                                                                      |   |   |   |   |   |                               |      7 [t29=>t29]
movq %t29, %t30 # add lexp -> r                                                            |   |   |   |   |   |                                   |  7 [t30=>t30]
add %t16, %t30                                                                                 |   |   |   |   |                                   |  6 [t30=>t30]
movq %t30, %t2 # default move                                                                  |   |   |   |   |                                      5 [t2=>rax]
movq %t21, %t15 # default move                                                         |       |   |   |   |                                          5 [t15=>r15]
movq %t20, %t14 # default move                                                     |   |       |   |   |                                              5 [t14=>r14]
movq %t19, %t13 # default move                                                 |   |   |       |   |                                                  5 [t13=>r13]
movq %t18, %t12 # default move                                             |   |   |   |       |                                                      5 [t12=>r12]
movq %t17, %t3 # default move                |                             |   |   |   |                                                              5 [t3=>rbx]
jmp L3                                       |                             |   |   |   |                                                              5 null
L3:                                          |                             |   |   |   |                                                              5 null
# sink                                                                                                                                                0 null
[92mTest Result: ./tests/function_one_arg.tig passed.[0m
0: t28 interferes with:t15 t14 t13 t12 t1 t0 
1: t0 interferes with:
2: t1 interferes with:
3: t12 interferes with:t28 t15 t14 t13 
4: t13 interferes with:t29 t28 t15 t14 
5: t14 interferes with:t30 t29 t28 t15 
6: t15 interferes with:t31 t30 t29 t28 
7: t29 interferes with:t28 t15 t14 t13 t1 t0 
8: t30 interferes with:t29 t28 t15 t14 t1 t0 
9: t31 interferes with:t30 t29 t28 t15 t1 t0 
10: t32 interferes with:t31 t30 t29 t28 t1 t0 
11: t34 interferes with:t32 t31 t30 t29 t28 t1 t0 
12: t35 interferes with:t34 t32 t31 t30 t29 t28 t1 t0 
13: t36 interferes with:t35 t34 t32 t31 t30 t29 t28 t0 
14: t9 interferes with:t2 t35 t34 t32 t31 t30 t29 t28 t0 
15: t37 interferes with:t36 t35 t34 t32 t31 t30 t29 t28 t9 t0 
16: t8 interferes with:t2 t36 t35 t34 t32 t31 t30 t29 t28 t9 t0 
17: t38 interferes with:t37 t36 t35 t34 t32 t31 t30 t29 t28 t9 t8 t0 
18: t4 interferes with:t2 t37 t36 t35 t34 t32 t31 t30 t29 t28 t9 t8 t0 
19: t39 interferes with:t38 t37 t36 t35 t34 t32 t31 t30 t29 t28 t9 t8 t4 t0 
20: t5 interferes with:t2 t38 t37 t36 t35 t34 t32 t31 t30 t29 t28 t9 t8 t4 t0 
21: t40 interferes with:t39 t38 t37 t36 t35 t34 t32 t31 t30 t29 t28 t9 t8 t5 t4 t0 
22: t6 interferes with:t2 t39 t38 t37 t36 t35 t34 t32 t31 t30 t29 t28 t9 t8 t5 t4 t0 
23: t7 interferes with:t2 t40 t39 t38 t37 t36 t35 t34 t32 t31 t30 t29 t28 t9 t8 t6 t5 t4 
24: t2 interferes with:t32 t31 t30 t29 t28 
25: t10 interferes with:t32 t31 t30 t29 t28 t2 
26: t11 interferes with:t32 t31 t30 t29 t28 t2 
27: t33 interferes with:t32 t31 t30 t29 t28 
28: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L2: : def => null, use => null
movq %t3, %t28 # default move : def => [t28=>t28], use => [t3=>rbx]
movq %t12, %t29 # default move : def => [t29=>t29], use => [t12=>r12]
movq %t13, %t30 # default move : def => [t30=>t30], use => [t13=>r13]
movq %t14, %t31 # default move : def => [t31=>t31], use => [t14=>r14]
movq %t15, %t32 # default move : def => [t32=>t32], use => [t15=>r15]
movq $7, %t34 # const : def => [t34=>t34], use => null
pushq %t34 # move arg 7 to stack : def => null, use => [t1=>rsp,t34=>t34]
movq $6, %t35 # const : def => [t35=>t35], use => null
pushq %t35 # move arg 6 to stack : def => null, use => [t1=>rsp,t35=>t35]
movq $5, %t36 # const : def => [t36=>t36], use => null
movq %t36, %t9 # move arg 5 to temp : def => [t9=>r9], use => [t36=>t36]
movq $4, %t37 # const : def => [t37=>t37], use => null
movq %t37, %t8 # move arg 4 to temp : def => [t8=>r8], use => [t37=>t37]
movq $3, %t38 # const : def => [t38=>t38], use => null
movq %t38, %t4 # move arg 3 to temp : def => [t4=>rcx], use => [t38=>t38]
movq $2, %t39 # const : def => [t39=>t39], use => null
movq %t39, %t5 # move arg 2 to temp : def => [t5=>rdx], use => [t39=>t39]
movq $1, %t40 # const : def => [t40=>t40], use => null
movq %t40, %t6 # move arg 1 to temp : def => [t6=>rsi], use => [t40=>t40]
movq %t0, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t0=>rbp]
call L0 # default call : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t34=>t34,t35=>t35,t36=>t36,t9=>r9,t37=>t37,t8=>r8,t38=>t38,t4=>rcx,t39=>t39,t5=>rdx,t40=>t40,t6=>rsi,t0=>rbp,t7=>rdi]
movq %t2, %t33 # default move : def => [t33=>t33], use => [t2=>rax]
movq %t33, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t33=>t33]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t33=>t33,t7=>rdi]
movq %t32, %t15 # default move : def => [t15=>r15], use => [t32=>t32]
movq %t31, %t14 # default move : def => [t14=>r14], use => [t31=>t31]
movq %t30, %t13 # default move : def => [t13=>r13], use => [t30=>t30]
movq %t29, %t12 # default move : def => [t12=>r12], use => [t29=>t29]
movq %t28, %t3 # default move : def => [t3=>rbx], use => [t28=>t28]
jmp L1 : def => null, use => null
L1: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L2: => [t0=>rbp,t1=>rsp,t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t28 # default move => [t0=>rbp,t1=>rsp,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t28=>t28]
movq %t12, %t29 # default move => [t0=>rbp,t1=>rsp,t13=>r13,t14=>r14,t15=>r15,t28=>t28,t29=>t29]
movq %t13, %t30 # default move => [t0=>rbp,t1=>rsp,t14=>r14,t15=>r15,t28=>t28,t29=>t29,t30=>t30]
movq %t14, %t31 # default move => [t0=>rbp,t1=>rsp,t15=>r15,t28=>t28,t29=>t29,t30=>t30,t31=>t31]
movq %t15, %t32 # default move => [t0=>rbp,t1=>rsp,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t32=>t32]
movq $7, %t34 # const => [t0=>rbp,t1=>rsp,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t34=>t34]
pushq %t34 # move arg 7 to stack => [t0=>rbp,t1=>rsp,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t34=>t34]
movq $6, %t35 # const => [t0=>rbp,t1=>rsp,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t34=>t34,t35=>t35]
pushq %t35 # move arg 6 to stack => [t0=>rbp,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t34=>t34,t35=>t35]
movq $5, %t36 # const => [t0=>rbp,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t34=>t34,t35=>t35,t36=>t36]
movq %t36, %t9 # move arg 5 to temp => [t0=>rbp,t9=>r9,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t34=>t34,t35=>t35,t36=>t36]
movq $4, %t37 # const => [t0=>rbp,t9=>r9,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t34=>t34,t35=>t35,t36=>t36,t37=>t37]
movq %t37, %t8 # move arg 4 to temp => [t0=>rbp,t8=>r8,t9=>r9,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t34=>t34,t35=>t35,t36=>t36,t37=>t37]
movq $3, %t38 # const => [t0=>rbp,t8=>r8,t9=>r9,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t34=>t34,t35=>t35,t36=>t36,t37=>t37,t38=>t38]
movq %t38, %t4 # move arg 3 to temp => [t0=>rbp,t4=>rcx,t8=>r8,t9=>r9,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t34=>t34,t35=>t35,t36=>t36,t37=>t37,t38=>t38]
movq $2, %t39 # const => [t0=>rbp,t4=>rcx,t8=>r8,t9=>r9,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t34=>t34,t35=>t35,t36=>t36,t37=>t37,t38=>t38,t39=>t39]
movq %t39, %t5 # move arg 2 to temp => [t0=>rbp,t4=>rcx,t5=>rdx,t8=>r8,t9=>r9,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t34=>t34,t35=>t35,t36=>t36,t37=>t37,t38=>t38,t39=>t39]
movq $1, %t40 # const => [t0=>rbp,t4=>rcx,t5=>rdx,t8=>r8,t9=>r9,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t34=>t34,t35=>t35,t36=>t36,t37=>t37,t38=>t38,t39=>t39,t40=>t40]
movq %t40, %t6 # move arg 1 to temp => [t0=>rbp,t4=>rcx,t5=>rdx,t6=>rsi,t8=>r8,t9=>r9,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t34=>t34,t35=>t35,t36=>t36,t37=>t37,t38=>t38,t39=>t39,t40=>t40]
movq %t0, %t7 # move arg 0 to temp => [t0=>rbp,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t34=>t34,t35=>t35,t36=>t36,t37=>t37,t38=>t38,t39=>t39,t40=>t40]
call L0 # default call => [t2=>rax,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t32=>t32]
movq %t2, %t33 # default move => [t28=>t28,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t33=>t33]
movq %t33, %t7 # move arg 0 to temp => [t7=>rdi,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t32=>t32,t33=>t33]
call printi # exp call ( no return value ) => [t28=>t28,t29=>t29,t30=>t30,t31=>t31,t32=>t32]
movq %t32, %t15 # default move => [t15=>r15,t28=>t28,t29=>t29,t30=>t30,t31=>t31]
movq %t31, %t14 # default move => [t14=>r14,t15=>r15,t28=>t28,t29=>t29,t30=>t30]
movq %t30, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t28=>t28,t29=>t29]
movq %t29, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t28=>t28]
movq %t28, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L1 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L1: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                  t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36 t37 t38 t39 t40 rc def
L2:                                        |  |     |                             |   |   |   |                                                                                                      7 null
movq %t3, %t28 # default move              |  |                                   |   |   |   |                                                   |                                                  7 [t28=>t28]
movq %t12, %t29 # default move             |  |                                       |   |   |                                                   |   |                                              7 [t29=>t29]
movq %t13, %t30 # default move             |  |                                           |   |                                                   |   |   |                                          7 [t30=>t30]
movq %t14, %t31 # default move             |  |                                               |                                                   |   |   |   |                                      7 [t31=>t31]
movq %t15, %t32 # default move             |  |                                                                                                   |   |   |   |   |                                  7 [t32=>t32]
movq $7, %t34 # const                      |  |                                                                                                   |   |   |   |   |       |                          8 [t34=>t34]
pushq %t34 # move arg 7 to stack           |  |                                                                                                   |   |   |   |   |       |                          8 null
movq $6, %t35 # const                      |  |                                                                                                   |   |   |   |   |       |   |                      9 [t35=>t35]
pushq %t35 # move arg 6 to stack           |                                                                                                      |   |   |   |   |       |   |                      8 null
movq $5, %t36 # const                      |                                                                                                      |   |   |   |   |       |   |   |                  9 [t36=>t36]
movq %t36, %t9 # move arg 5 to temp        |                          |                                                                           |   |   |   |   |       |   |   |                  10 [t9=>r9]
movq $4, %t37 # const                      |                          |                                                                           |   |   |   |   |       |   |   |   |              11 [t37=>t37]
movq %t37, %t8 # move arg 4 to temp        |                       |  |                                                                           |   |   |   |   |       |   |   |   |              12 [t8=>r8]
movq $3, %t38 # const                      |                       |  |                                                                           |   |   |   |   |       |   |   |   |   |          13 [t38=>t38]
movq %t38, %t4 # move arg 3 to temp        |           |           |  |                                                                           |   |   |   |   |       |   |   |   |   |          14 [t4=>rcx]
movq $2, %t39 # const                      |           |           |  |                                                                           |   |   |   |   |       |   |   |   |   |   |      15 [t39=>t39]
movq %t39, %t5 # move arg 2 to temp        |           |  |        |  |                                                                           |   |   |   |   |       |   |   |   |   |   |      16 [t5=>rdx]
movq $1, %t40 # const                      |           |  |        |  |                                                                           |   |   |   |   |       |   |   |   |   |   |   |  17 [t40=>t40]
movq %t40, %t6 # move arg 1 to temp        |           |  |  |     |  |                                                                           |   |   |   |   |       |   |   |   |   |   |   |  18 [t6=>rsi]
movq %t0, %t7 # move arg 0 to temp         |           |  |  |  |  |  |                                                                           |   |   |   |   |       |   |   |   |   |   |   |  19 [t7=>rdi]
call L0 # default call                           |                                                                                                |   |   |   |   |                                  6 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t2, %t33 # default move                                                                                                                     |   |   |   |   |   |                              6 [t33=>t33]
movq %t33, %t7 # move arg 0 to temp                             |                                                                                 |   |   |   |   |   |                              7 [t7=>rdi]
call printi # exp call ( no return value )                                                                                                        |   |   |   |   |                                  5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t32, %t15 # default move                                                                |                                                   |   |   |   |                                      5 [t15=>r15]
movq %t31, %t14 # default move                                                            |   |                                                   |   |   |                                          5 [t14=>r14]
movq %t30, %t13 # default move                                                        |   |   |                                                   |   |                                              5 [t13=>r13]
movq %t29, %t12 # default move                                                    |   |   |   |                                                   |                                                  5 [t12=>r12]
movq %t28, %t3 # default move                       |                             |   |   |   |                                                                                                      5 [t3=>rbx]
jmp L1                                              |                             |   |   |   |                                                                                                      5 null
L1:                                                 |                             |   |   |   |                                                                                                      5 null
# sink                                                                                                                                                                                               0 null
0: t16 interferes with:t15 t14 t13 t12 t9 t8 t5 t4 t3 t0 
1: t0 interferes with:
2: t3 interferes with:t15 t14 t13 t12 
3: t4 interferes with:
4: t5 interferes with:
5: t8 interferes with:
6: t9 interferes with:
7: t12 interferes with:t23 t15 t14 t13 
8: t13 interferes with:t24 t23 t15 t14 
9: t14 interferes with:t25 t24 t23 t15 
10: t15 interferes with:t26 t25 t24 t23 
11: t17 interferes with:t16 t15 t14 t13 t12 t9 t8 t4 t3 t0 
12: t18 interferes with:t17 t16 t15 t14 t13 t12 t9 t8 t3 t0 
13: t19 interferes with:t18 t17 t16 t15 t14 t13 t12 t9 t3 t0 
14: t20 interferes with:t19 t18 t17 t16 t15 t14 t13 t12 t3 t0 
15: t21 interferes with:t20 t19 t18 t17 t16 t15 t14 t13 t12 t3 t0 
16: t22 interferes with:t21 t20 t19 t18 t17 t16 t15 t14 t13 t12 t3 
17: t23 interferes with:t22 t21 t20 t19 t18 t17 t16 t15 t14 t13 t12 
18: t24 interferes with:t23 t22 t21 t20 t19 t18 t17 t16 t15 t14 t13 
19: t25 interferes with:t24 t23 t22 t21 t20 t19 t18 t17 t16 t15 t14 
20: t26 interferes with:t25 t24 t23 t22 t21 t20 t19 t18 t17 t16 t15 
21: t27 interferes with:t26 t25 t24 t23 t22 t21 t20 t19 t18 t17 t16 
22: t41 interferes with:t27 t26 t25 t24 t23 t22 t21 t20 t19 t18 t17 
23: t42 interferes with:t27 t26 t25 t24 t23 t22 t21 t20 t19 t18 
24: t43 interferes with:t27 t26 t25 t24 t23 t22 t21 t20 t19 
25: t44 interferes with:t27 t26 t25 t24 t23 t22 t21 t20 
26: t45 interferes with:t27 t26 t25 t24 t23 t22 t21 
27: t46 interferes with:t27 t26 t25 t24 t23 t22 
28: t2 interferes with:t27 t26 t25 t24 t23 
registers:14
### Uses and Defs
L4: : def => null, use => null
movq %t7, -8(%t0) # store to offset : def => null, use => [t7=>rdi,t0=>rbp]
movq %t6, %t16 # default move : def => [t16=>t16], use => [t6=>rsi]
movq %t5, %t17 # default move : def => [t17=>t17], use => [t5=>rdx]
movq %t4, %t18 # default move : def => [t18=>t18], use => [t4=>rcx]
movq %t8, %t19 # default move : def => [t19=>t19], use => [t8=>r8]
movq %t9, %t20 # default move : def => [t20=>t20], use => [t9=>r9]
movq 16(%t0), %t21 # load to offset : def => [t21=>t21], use => [t0=>rbp]
movq 24(%t0), %t22 # load to offset : def => [t22=>t22], use => [t0=>rbp]
movq %t3, %t23 # default move : def => [t23=>t23], use => [t3=>rbx]
movq %t12, %t24 # default move : def => [t24=>t24], use => [t12=>r12]
movq %t13, %t25 # default move : def => [t25=>t25], use => [t13=>r13]
movq %t14, %t26 # default move : def => [t26=>t26], use => [t14=>r14]
movq %t15, %t27 # default move : def => [t27=>t27], use => [t15=>r15]
movq %t16, %t41 # add lexp -> r : def => [t41=>t41], use => [t16=>t16]
add %t17, %t41 : def => [t41=>t41], use => [t17=>t17,t41=>t41]
movq %t41, %t42 # add lexp -> r : def => [t42=>t42], use => [t41=>t41]
add %t18, %t42 : def => [t42=>t42], use => [t18=>t18,t42=>t42]
movq %t42, %t43 # add lexp -> r : def => [t43=>t43], use => [t42=>t42]
add %t19, %t43 : def => [t43=>t43], use => [t19=>t19,t43=>t43]
movq %t43, %t44 # add lexp -> r : def => [t44=>t44], use => [t43=>t43]
add %t20, %t44 : def => [t44=>t44], use => [t20=>t20,t44=>t44]
movq %t44, %t45 # add lexp -> r : def => [t45=>t45], use => [t44=>t44]
add %t21, %t45 : def => [t45=>t45], use => [t21=>t21,t45=>t45]
movq %t45, %t46 # add lexp -> r : def => [t46=>t46], use => [t45=>t45]
add %t22, %t46 : def => [t46=>t46], use => [t22=>t22,t46=>t46]
movq %t46, %t2 # default move : def => [t2=>rax], use => [t46=>t46]
movq %t27, %t15 # default move : def => [t15=>r15], use => [t27=>t27]
movq %t26, %t14 # default move : def => [t14=>r14], use => [t26=>t26]
movq %t25, %t13 # default move : def => [t13=>r13], use => [t25=>t25]
movq %t24, %t12 # default move : def => [t12=>r12], use => [t24=>t24]
movq %t23, %t3 # default move : def => [t3=>rbx], use => [t23=>t23]
jmp L3 : def => null, use => null
L3: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L4: => [t0=>rbp,t3=>rbx,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t7, -8(%t0) # store to offset => [t0=>rbp,t3=>rbx,t4=>rcx,t5=>rdx,t6=>rsi,t8=>r8,t9=>r9,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t6, %t16 # default move => [t0=>rbp,t3=>rbx,t4=>rcx,t5=>rdx,t8=>r8,t9=>r9,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16]
movq %t5, %t17 # default move => [t0=>rbp,t3=>rbx,t4=>rcx,t8=>r8,t9=>r9,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17]
movq %t4, %t18 # default move => [t0=>rbp,t3=>rbx,t8=>r8,t9=>r9,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18]
movq %t8, %t19 # default move => [t0=>rbp,t3=>rbx,t9=>r9,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19]
movq %t9, %t20 # default move => [t0=>rbp,t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
movq 16(%t0), %t21 # load to offset => [t0=>rbp,t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq 24(%t0), %t22 # load to offset => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t3, %t23 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23]
movq %t12, %t24 # default move => [t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24]
movq %t13, %t25 # default move => [t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25]
movq %t14, %t26 # default move => [t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26]
movq %t15, %t27 # default move => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27]
movq %t16, %t41 # add lexp -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t41=>t41]
add %t17, %t41 => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t41=>t41]
movq %t41, %t42 # add lexp -> r => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t42=>t42]
add %t18, %t42 => [t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t42=>t42]
movq %t42, %t43 # add lexp -> r => [t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t43=>t43]
add %t19, %t43 => [t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t43=>t43]
movq %t43, %t44 # add lexp -> r => [t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t44=>t44]
add %t20, %t44 => [t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t44=>t44]
movq %t44, %t45 # add lexp -> r => [t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t45=>t45]
add %t21, %t45 => [t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t45=>t45]
movq %t45, %t46 # add lexp -> r => [t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t46=>t46]
add %t22, %t46 => [t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t46=>t46]
movq %t46, %t2 # default move => [t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27]
movq %t27, %t15 # default move => [t15=>r15,t23=>t23,t24=>t24,t25=>t25,t26=>t26]
movq %t26, %t14 # default move => [t14=>r14,t15=>r15,t23=>t23,t24=>t24,t25=>t25]
movq %t25, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t23=>t23,t24=>t24]
movq %t24, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t23=>t23]
movq %t23, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L3 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L3: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                           t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36 t37 t38 t39 t40 t41 t42 t43 t44 t45 t46 rc def
L4:                                 |        |  |  |  |  |  |  |           |   |   |   |                                                                                                                              12 null
movq %t7, -8(%t0) # store to offset |        |  |  |  |     |  |           |   |   |   |                                                                                                                              11 null
movq %t6, %t16 # default move       |        |  |  |        |  |           |   |   |   |   |                                                                                                                          11 [t16=>t16]
movq %t5, %t17 # default move       |        |  |           |  |           |   |   |   |   |   |                                                                                                                      11 [t17=>t17]
movq %t4, %t18 # default move       |        |              |  |           |   |   |   |   |   |   |                                                                                                                  11 [t18=>t18]
movq %t8, %t19 # default move       |        |                 |           |   |   |   |   |   |   |   |                                                                                                              11 [t19=>t19]
movq %t9, %t20 # default move       |        |                             |   |   |   |   |   |   |   |   |                                                                                                          11 [t20=>t20]
movq 16(%t0), %t21 # load to offset |        |                             |   |   |   |   |   |   |   |   |   |                                                                                                      12 [t21=>t21]
movq 24(%t0), %t22 # load to offset          |                             |   |   |   |   |   |   |   |   |   |   |                                                                                                  12 [t22=>t22]
movq %t3, %t23 # default move                                              |   |   |   |   |   |   |   |   |   |   |   |                                                                                              12 [t23=>t23]
movq %t12, %t24 # default move                                                 |   |   |   |   |   |   |   |   |   |   |   |                                                                                          12 [t24=>t24]
movq %t13, %t25 # default move                                                     |   |   |   |   |   |   |   |   |   |   |   |                                                                                      12 [t25=>t25]
movq %t14, %t26 # default move                                                         |   |   |   |   |   |   |   |   |   |   |   |                                                                                  12 [t26=>t26]
movq %t15, %t27 # default move                                                             |   |   |   |   |   |   |   |   |   |   |   |                                                                              12 [t27=>t27]
movq %t16, %t41 # add lexp -> r                                                                |   |   |   |   |   |   |   |   |   |   |                                                       |                      12 [t41=>t41]
add %t17, %t41                                                                                     |   |   |   |   |   |   |   |   |   |                                                       |                      11 [t41=>t41]
movq %t41, %t42 # add lexp -> r                                                                    |   |   |   |   |   |   |   |   |   |                                                           |                  11 [t42=>t42]
add %t18, %t42                                                                                         |   |   |   |   |   |   |   |   |                                                           |                  10 [t42=>t42]
movq %t42, %t43 # add lexp -> r                                                                        |   |   |   |   |   |   |   |   |                                                               |              10 [t43=>t43]
add %t19, %t43                                                                                             |   |   |   |   |   |   |   |                                                               |              9 [t43=>t43]
movq %t43, %t44 # add lexp -> r                                                                            |   |   |   |   |   |   |   |                                                                   |          9 [t44=>t44]
add %t20, %t44                                                                                                 |   |   |   |   |   |   |                                                                   |          8 [t44=>t44]
movq %t44, %t45 # add lexp -> r                                                                                |   |   |   |   |   |   |                                                                       |      8 [t45=>t45]
add %t21, %t45                                                                                                     |   |   |   |   |   |                                                                       |      7 [t45=>t45]
movq %t45, %t46 # add lexp -> r                                                                                    |   |   |   |   |   |                                                                           |  7 [t46=>t46]
add %t22, %t46                                                                                                         |   |   |   |   |                                                                           |  6 [t46=>t46]
movq %t46, %t2 # default move                                                                                          |   |   |   |   |                                                                              5 [t2=>rax]
movq %t27, %t15 # default move                                                         |                               |   |   |   |                                                                                  5 [t15=>r15]
movq %t26, %t14 # default move                                                     |   |                               |   |   |                                                                                      5 [t14=>r14]
movq %t25, %t13 # default move                                                 |   |   |                               |   |                                                                                          5 [t13=>r13]
movq %t24, %t12 # default move                                             |   |   |   |                               |                                                                                              5 [t12=>r12]
movq %t23, %t3 # default move                |                             |   |   |   |                                                                                                                              5 [t3=>rbx]
jmp L3                                       |                             |   |   |   |                                                                                                                              5 null
L3:                                          |                             |   |   |   |                                                                                                                              5 null
# sink                                                                                                                                                                                                                0 null
[92mTest Result: ./tests/function_seven_arg.tig passed.[0m
0: t27 interferes with:t15 t14 t13 t12 t1 t0 
1: t0 interferes with:
2: t1 interferes with:
3: t12 interferes with:t27 t15 t14 t13 
4: t13 interferes with:t28 t27 t15 t14 
5: t14 interferes with:t29 t28 t27 t15 
6: t15 interferes with:t30 t29 t28 t27 
7: t28 interferes with:t27 t15 t14 t13 t1 t0 
8: t29 interferes with:t28 t27 t15 t14 t1 t0 
9: t30 interferes with:t29 t28 t27 t15 t1 t0 
10: t31 interferes with:t30 t29 t28 t27 t1 t0 
11: t33 interferes with:t31 t30 t29 t28 t27 t1 t0 
12: t34 interferes with:t33 t31 t30 t29 t28 t27 t0 
13: t9 interferes with:t2 t33 t31 t30 t29 t28 t27 t0 
14: t35 interferes with:t34 t33 t31 t30 t29 t28 t27 t9 t0 
15: t8 interferes with:t2 t34 t33 t31 t30 t29 t28 t27 t9 t0 
16: t36 interferes with:t35 t34 t33 t31 t30 t29 t28 t27 t9 t8 t0 
17: t4 interferes with:t2 t35 t34 t33 t31 t30 t29 t28 t27 t9 t8 t0 
18: t37 interferes with:t36 t35 t34 t33 t31 t30 t29 t28 t27 t9 t8 t4 t0 
19: t5 interferes with:t2 t36 t35 t34 t33 t31 t30 t29 t28 t27 t9 t8 t4 t0 
20: t38 interferes with:t37 t36 t35 t34 t33 t31 t30 t29 t28 t27 t9 t8 t5 t4 t0 
21: t6 interferes with:t2 t37 t36 t35 t34 t33 t31 t30 t29 t28 t27 t9 t8 t5 t4 t0 
22: t7 interferes with:t2 t38 t37 t36 t35 t34 t33 t31 t30 t29 t28 t27 t9 t8 t6 t5 t4 
23: t2 interferes with:t31 t30 t29 t28 t27 
24: t10 interferes with:t31 t30 t29 t28 t27 t2 
25: t11 interferes with:t31 t30 t29 t28 t27 t2 
26: t32 interferes with:t31 t30 t29 t28 t27 
27: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L2: : def => null, use => null
movq %t3, %t27 # default move : def => [t27=>t27], use => [t3=>rbx]
movq %t12, %t28 # default move : def => [t28=>t28], use => [t12=>r12]
movq %t13, %t29 # default move : def => [t29=>t29], use => [t13=>r13]
movq %t14, %t30 # default move : def => [t30=>t30], use => [t14=>r14]
movq %t15, %t31 # default move : def => [t31=>t31], use => [t15=>r15]
movq $6, %t33 # const : def => [t33=>t33], use => null
pushq %t33 # move arg 6 to stack : def => null, use => [t1=>rsp,t33=>t33]
movq $5, %t34 # const : def => [t34=>t34], use => null
movq %t34, %t9 # move arg 5 to temp : def => [t9=>r9], use => [t34=>t34]
movq $4, %t35 # const : def => [t35=>t35], use => null
movq %t35, %t8 # move arg 4 to temp : def => [t8=>r8], use => [t35=>t35]
movq $3, %t36 # const : def => [t36=>t36], use => null
movq %t36, %t4 # move arg 3 to temp : def => [t4=>rcx], use => [t36=>t36]
movq $2, %t37 # const : def => [t37=>t37], use => null
movq %t37, %t5 # move arg 2 to temp : def => [t5=>rdx], use => [t37=>t37]
movq $1, %t38 # const : def => [t38=>t38], use => null
movq %t38, %t6 # move arg 1 to temp : def => [t6=>rsi], use => [t38=>t38]
movq %t0, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t0=>rbp]
call L0 # default call : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t33=>t33,t34=>t34,t9=>r9,t35=>t35,t8=>r8,t36=>t36,t4=>rcx,t37=>t37,t5=>rdx,t38=>t38,t6=>rsi,t0=>rbp,t7=>rdi]
movq %t2, %t32 # default move : def => [t32=>t32], use => [t2=>rax]
movq %t32, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t32=>t32]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t32=>t32,t7=>rdi]
movq %t31, %t15 # default move : def => [t15=>r15], use => [t31=>t31]
movq %t30, %t14 # default move : def => [t14=>r14], use => [t30=>t30]
movq %t29, %t13 # default move : def => [t13=>r13], use => [t29=>t29]
movq %t28, %t12 # default move : def => [t12=>r12], use => [t28=>t28]
movq %t27, %t3 # default move : def => [t3=>rbx], use => [t27=>t27]
jmp L1 : def => null, use => null
L1: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L2: => [t0=>rbp,t1=>rsp,t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t27 # default move => [t0=>rbp,t1=>rsp,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t27=>t27]
movq %t12, %t28 # default move => [t0=>rbp,t1=>rsp,t13=>r13,t14=>r14,t15=>r15,t27=>t27,t28=>t28]
movq %t13, %t29 # default move => [t0=>rbp,t1=>rsp,t14=>r14,t15=>r15,t27=>t27,t28=>t28,t29=>t29]
movq %t14, %t30 # default move => [t0=>rbp,t1=>rsp,t15=>r15,t27=>t27,t28=>t28,t29=>t29,t30=>t30]
movq %t15, %t31 # default move => [t0=>rbp,t1=>rsp,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t31=>t31]
movq $6, %t33 # const => [t0=>rbp,t1=>rsp,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t33=>t33]
pushq %t33 # move arg 6 to stack => [t0=>rbp,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t33=>t33]
movq $5, %t34 # const => [t0=>rbp,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t33=>t33,t34=>t34]
movq %t34, %t9 # move arg 5 to temp => [t0=>rbp,t9=>r9,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t33=>t33,t34=>t34]
movq $4, %t35 # const => [t0=>rbp,t9=>r9,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t33=>t33,t34=>t34,t35=>t35]
movq %t35, %t8 # move arg 4 to temp => [t0=>rbp,t8=>r8,t9=>r9,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t33=>t33,t34=>t34,t35=>t35]
movq $3, %t36 # const => [t0=>rbp,t8=>r8,t9=>r9,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t33=>t33,t34=>t34,t35=>t35,t36=>t36]
movq %t36, %t4 # move arg 3 to temp => [t0=>rbp,t4=>rcx,t8=>r8,t9=>r9,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t33=>t33,t34=>t34,t35=>t35,t36=>t36]
movq $2, %t37 # const => [t0=>rbp,t4=>rcx,t8=>r8,t9=>r9,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t33=>t33,t34=>t34,t35=>t35,t36=>t36,t37=>t37]
movq %t37, %t5 # move arg 2 to temp => [t0=>rbp,t4=>rcx,t5=>rdx,t8=>r8,t9=>r9,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t33=>t33,t34=>t34,t35=>t35,t36=>t36,t37=>t37]
movq $1, %t38 # const => [t0=>rbp,t4=>rcx,t5=>rdx,t8=>r8,t9=>r9,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t33=>t33,t34=>t34,t35=>t35,t36=>t36,t37=>t37,t38=>t38]
movq %t38, %t6 # move arg 1 to temp => [t0=>rbp,t4=>rcx,t5=>rdx,t6=>rsi,t8=>r8,t9=>r9,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t33=>t33,t34=>t34,t35=>t35,t36=>t36,t37=>t37,t38=>t38]
movq %t0, %t7 # move arg 0 to temp => [t0=>rbp,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t33=>t33,t34=>t34,t35=>t35,t36=>t36,t37=>t37,t38=>t38]
call L0 # default call => [t2=>rax,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t31=>t31]
movq %t2, %t32 # default move => [t27=>t27,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t32=>t32]
movq %t32, %t7 # move arg 0 to temp => [t7=>rdi,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t31=>t31,t32=>t32]
call printi # exp call ( no return value ) => [t27=>t27,t28=>t28,t29=>t29,t30=>t30,t31=>t31]
movq %t31, %t15 # default move => [t15=>r15,t27=>t27,t28=>t28,t29=>t29,t30=>t30]
movq %t30, %t14 # default move => [t14=>r14,t15=>r15,t27=>t27,t28=>t28,t29=>t29]
movq %t29, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t27=>t27,t28=>t28]
movq %t28, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t27=>t27]
movq %t27, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L1 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L1: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                  t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36 t37 t38 rc def
L2:                                        |  |     |                             |   |   |   |                                                                                              7 null
movq %t3, %t27 # default move              |  |                                   |   |   |   |                                               |                                              7 [t27=>t27]
movq %t12, %t28 # default move             |  |                                       |   |   |                                               |   |                                          7 [t28=>t28]
movq %t13, %t29 # default move             |  |                                           |   |                                               |   |   |                                      7 [t29=>t29]
movq %t14, %t30 # default move             |  |                                               |                                               |   |   |   |                                  7 [t30=>t30]
movq %t15, %t31 # default move             |  |                                                                                               |   |   |   |   |                              7 [t31=>t31]
movq $6, %t33 # const                      |  |                                                                                               |   |   |   |   |       |                      8 [t33=>t33]
pushq %t33 # move arg 6 to stack           |                                                                                                  |   |   |   |   |       |                      7 null
movq $5, %t34 # const                      |                                                                                                  |   |   |   |   |       |   |                  8 [t34=>t34]
movq %t34, %t9 # move arg 5 to temp        |                          |                                                                       |   |   |   |   |       |   |                  9 [t9=>r9]
movq $4, %t35 # const                      |                          |                                                                       |   |   |   |   |       |   |   |              10 [t35=>t35]
movq %t35, %t8 # move arg 4 to temp        |                       |  |                                                                       |   |   |   |   |       |   |   |              11 [t8=>r8]
movq $3, %t36 # const                      |                       |  |                                                                       |   |   |   |   |       |   |   |   |          12 [t36=>t36]
movq %t36, %t4 # move arg 3 to temp        |           |           |  |                                                                       |   |   |   |   |       |   |   |   |          13 [t4=>rcx]
movq $2, %t37 # const                      |           |           |  |                                                                       |   |   |   |   |       |   |   |   |   |      14 [t37=>t37]
movq %t37, %t5 # move arg 2 to temp        |           |  |        |  |                                                                       |   |   |   |   |       |   |   |   |   |      15 [t5=>rdx]
movq $1, %t38 # const                      |           |  |        |  |                                                                       |   |   |   |   |       |   |   |   |   |   |  16 [t38=>t38]
movq %t38, %t6 # move arg 1 to temp        |           |  |  |     |  |                                                                       |   |   |   |   |       |   |   |   |   |   |  17 [t6=>rsi]
movq %t0, %t7 # move arg 0 to temp         |           |  |  |  |  |  |                                                                       |   |   |   |   |       |   |   |   |   |   |  18 [t7=>rdi]
call L0 # default call                           |                                                                                            |   |   |   |   |                              6 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t2, %t32 # default move                                                                                                                 |   |   |   |   |   |                          6 [t32=>t32]
movq %t32, %t7 # move arg 0 to temp                             |                                                                             |   |   |   |   |   |                          7 [t7=>rdi]
call printi # exp call ( no return value )                                                                                                    |   |   |   |   |                              5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t31, %t15 # default move                                                                |                                               |   |   |   |                                  5 [t15=>r15]
movq %t30, %t14 # default move                                                            |   |                                               |   |   |                                      5 [t14=>r14]
movq %t29, %t13 # default move                                                        |   |   |                                               |   |                                          5 [t13=>r13]
movq %t28, %t12 # default move                                                    |   |   |   |                                               |                                              5 [t12=>r12]
movq %t27, %t3 # default move                       |                             |   |   |   |                                                                                              5 [t3=>rbx]
jmp L1                                              |                             |   |   |   |                                                                                              5 null
L1:                                                 |                             |   |   |   |                                                                                              5 null
# sink                                                                                                                                                                                       0 null
0: t16 interferes with:t15 t14 t13 t12 t9 t8 t5 t4 t3 t0 
1: t0 interferes with:
2: t3 interferes with:t15 t14 t13 t12 
3: t4 interferes with:
4: t5 interferes with:
5: t8 interferes with:
6: t9 interferes with:
7: t12 interferes with:t22 t15 t14 t13 
8: t13 interferes with:t23 t22 t15 t14 
9: t14 interferes with:t24 t23 t22 t15 
10: t15 interferes with:t25 t24 t23 t22 
11: t17 interferes with:t16 t15 t14 t13 t12 t9 t8 t4 t3 t0 
12: t18 interferes with:t17 t16 t15 t14 t13 t12 t9 t8 t3 t0 
13: t19 interferes with:t18 t17 t16 t15 t14 t13 t12 t9 t3 t0 
14: t20 interferes with:t19 t18 t17 t16 t15 t14 t13 t12 t3 t0 
15: t21 interferes with:t20 t19 t18 t17 t16 t15 t14 t13 t12 t3 
16: t22 interferes with:t21 t20 t19 t18 t17 t16 t15 t14 t13 t12 
17: t23 interferes with:t22 t21 t20 t19 t18 t17 t16 t15 t14 t13 
18: t24 interferes with:t23 t22 t21 t20 t19 t18 t17 t16 t15 t14 
19: t25 interferes with:t24 t23 t22 t21 t20 t19 t18 t17 t16 t15 
20: t26 interferes with:t25 t24 t23 t22 t21 t20 t19 t18 t17 t16 
21: t39 interferes with:t26 t25 t24 t23 t22 t21 t20 t19 t18 t17 
22: t40 interferes with:t26 t25 t24 t23 t22 t21 t20 t19 t18 
23: t41 interferes with:t26 t25 t24 t23 t22 t21 t20 t19 
24: t42 interferes with:t26 t25 t24 t23 t22 t21 t20 
25: t43 interferes with:t26 t25 t24 t23 t22 t21 
26: t2 interferes with:t26 t25 t24 t23 t22 
registers:14
### Uses and Defs
L4: : def => null, use => null
movq %t7, -8(%t0) # store to offset : def => null, use => [t7=>rdi,t0=>rbp]
movq %t6, %t16 # default move : def => [t16=>t16], use => [t6=>rsi]
movq %t5, %t17 # default move : def => [t17=>t17], use => [t5=>rdx]
movq %t4, %t18 # default move : def => [t18=>t18], use => [t4=>rcx]
movq %t8, %t19 # default move : def => [t19=>t19], use => [t8=>r8]
movq %t9, %t20 # default move : def => [t20=>t20], use => [t9=>r9]
movq 16(%t0), %t21 # load to offset : def => [t21=>t21], use => [t0=>rbp]
movq %t3, %t22 # default move : def => [t22=>t22], use => [t3=>rbx]
movq %t12, %t23 # default move : def => [t23=>t23], use => [t12=>r12]
movq %t13, %t24 # default move : def => [t24=>t24], use => [t13=>r13]
movq %t14, %t25 # default move : def => [t25=>t25], use => [t14=>r14]
movq %t15, %t26 # default move : def => [t26=>t26], use => [t15=>r15]
movq %t16, %t39 # add lexp -> r : def => [t39=>t39], use => [t16=>t16]
add %t17, %t39 : def => [t39=>t39], use => [t17=>t17,t39=>t39]
movq %t39, %t40 # add lexp -> r : def => [t40=>t40], use => [t39=>t39]
add %t18, %t40 : def => [t40=>t40], use => [t18=>t18,t40=>t40]
movq %t40, %t41 # add lexp -> r : def => [t41=>t41], use => [t40=>t40]
add %t19, %t41 : def => [t41=>t41], use => [t19=>t19,t41=>t41]
movq %t41, %t42 # add lexp -> r : def => [t42=>t42], use => [t41=>t41]
add %t20, %t42 : def => [t42=>t42], use => [t20=>t20,t42=>t42]
movq %t42, %t43 # add lexp -> r : def => [t43=>t43], use => [t42=>t42]
add %t21, %t43 : def => [t43=>t43], use => [t21=>t21,t43=>t43]
movq %t43, %t2 # default move : def => [t2=>rax], use => [t43=>t43]
movq %t26, %t15 # default move : def => [t15=>r15], use => [t26=>t26]
movq %t25, %t14 # default move : def => [t14=>r14], use => [t25=>t25]
movq %t24, %t13 # default move : def => [t13=>r13], use => [t24=>t24]
movq %t23, %t12 # default move : def => [t12=>r12], use => [t23=>t23]
movq %t22, %t3 # default move : def => [t3=>rbx], use => [t22=>t22]
jmp L3 : def => null, use => null
L3: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L4: => [t0=>rbp,t3=>rbx,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t7, -8(%t0) # store to offset => [t0=>rbp,t3=>rbx,t4=>rcx,t5=>rdx,t6=>rsi,t8=>r8,t9=>r9,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t6, %t16 # default move => [t0=>rbp,t3=>rbx,t4=>rcx,t5=>rdx,t8=>r8,t9=>r9,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16]
movq %t5, %t17 # default move => [t0=>rbp,t3=>rbx,t4=>rcx,t8=>r8,t9=>r9,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17]
movq %t4, %t18 # default move => [t0=>rbp,t3=>rbx,t8=>r8,t9=>r9,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18]
movq %t8, %t19 # default move => [t0=>rbp,t3=>rbx,t9=>r9,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19]
movq %t9, %t20 # default move => [t0=>rbp,t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
movq 16(%t0), %t21 # load to offset => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t3, %t22 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t12, %t23 # default move => [t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23]
movq %t13, %t24 # default move => [t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24]
movq %t14, %t25 # default move => [t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25]
movq %t15, %t26 # default move => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26]
movq %t16, %t39 # add lexp -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t39=>t39]
add %t17, %t39 => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t39=>t39]
movq %t39, %t40 # add lexp -> r => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t40=>t40]
add %t18, %t40 => [t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t40=>t40]
movq %t40, %t41 # add lexp -> r => [t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t41=>t41]
add %t19, %t41 => [t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t41=>t41]
movq %t41, %t42 # add lexp -> r => [t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t42=>t42]
add %t20, %t42 => [t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t42=>t42]
movq %t42, %t43 # add lexp -> r => [t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t43=>t43]
add %t21, %t43 => [t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t43=>t43]
movq %t43, %t2 # default move => [t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26]
movq %t26, %t15 # default move => [t15=>r15,t22=>t22,t23=>t23,t24=>t24,t25=>t25]
movq %t25, %t14 # default move => [t14=>r14,t15=>r15,t22=>t22,t23=>t23,t24=>t24]
movq %t24, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t22=>t22,t23=>t23]
movq %t23, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t22=>t22]
movq %t22, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L3 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L3: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                           t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36 t37 t38 t39 t40 t41 t42 t43 rc def
L4:                                 |        |  |  |  |  |  |  |           |   |   |   |                                                                                                                  12 null
movq %t7, -8(%t0) # store to offset |        |  |  |  |     |  |           |   |   |   |                                                                                                                  11 null
movq %t6, %t16 # default move       |        |  |  |        |  |           |   |   |   |   |                                                                                                              11 [t16=>t16]
movq %t5, %t17 # default move       |        |  |           |  |           |   |   |   |   |   |                                                                                                          11 [t17=>t17]
movq %t4, %t18 # default move       |        |              |  |           |   |   |   |   |   |   |                                                                                                      11 [t18=>t18]
movq %t8, %t19 # default move       |        |                 |           |   |   |   |   |   |   |   |                                                                                                  11 [t19=>t19]
movq %t9, %t20 # default move       |        |                             |   |   |   |   |   |   |   |   |                                                                                              11 [t20=>t20]
movq 16(%t0), %t21 # load to offset          |                             |   |   |   |   |   |   |   |   |   |                                                                                          11 [t21=>t21]
movq %t3, %t22 # default move                                              |   |   |   |   |   |   |   |   |   |   |                                                                                      11 [t22=>t22]
movq %t12, %t23 # default move                                                 |   |   |   |   |   |   |   |   |   |   |                                                                                  11 [t23=>t23]
movq %t13, %t24 # default move                                                     |   |   |   |   |   |   |   |   |   |   |                                                                              11 [t24=>t24]
movq %t14, %t25 # default move                                                         |   |   |   |   |   |   |   |   |   |   |                                                                          11 [t25=>t25]
movq %t15, %t26 # default move                                                             |   |   |   |   |   |   |   |   |   |   |                                                                      11 [t26=>t26]
movq %t16, %t39 # add lexp -> r                                                                |   |   |   |   |   |   |   |   |   |                                                   |                  11 [t39=>t39]
add %t17, %t39                                                                                     |   |   |   |   |   |   |   |   |                                                   |                  10 [t39=>t39]
movq %t39, %t40 # add lexp -> r                                                                    |   |   |   |   |   |   |   |   |                                                       |              10 [t40=>t40]
add %t18, %t40                                                                                         |   |   |   |   |   |   |   |                                                       |              9 [t40=>t40]
movq %t40, %t41 # add lexp -> r                                                                        |   |   |   |   |   |   |   |                                                           |          9 [t41=>t41]
add %t19, %t41                                                                                             |   |   |   |   |   |   |                                                           |          8 [t41=>t41]
movq %t41, %t42 # add lexp -> r                                                                            |   |   |   |   |   |   |                                                               |      8 [t42=>t42]
add %t20, %t42                                                                                                 |   |   |   |   |   |                                                               |      7 [t42=>t42]
movq %t42, %t43 # add lexp -> r                                                                                |   |   |   |   |   |                                                                   |  7 [t43=>t43]
add %t21, %t43                                                                                                     |   |   |   |   |                                                                   |  6 [t43=>t43]
movq %t43, %t2 # default move                                                                                      |   |   |   |   |                                                                      5 [t2=>rax]
movq %t26, %t15 # default move                                                         |                           |   |   |   |                                                                          5 [t15=>r15]
movq %t25, %t14 # default move                                                     |   |                           |   |   |                                                                              5 [t14=>r14]
movq %t24, %t13 # default move                                                 |   |   |                           |   |                                                                                  5 [t13=>r13]
movq %t23, %t12 # default move                                             |   |   |   |                           |                                                                                      5 [t12=>r12]
movq %t22, %t3 # default move                |                             |   |   |   |                                                                                                                  5 [t3=>rbx]
jmp L3                                       |                             |   |   |   |                                                                                                                  5 null
L3:                                          |                             |   |   |   |                                                                                                                  5 null
# sink                                                                                                                                                                                                    0 null
[92mTest Result: ./tests/function_six_arg.tig passed.[0m
0: t24 interferes with:t15 t14 t13 t12 t0 
1: t0 interferes with:
2: t12 interferes with:t24 t15 t14 t13 
3: t13 interferes with:t25 t24 t15 t14 
4: t14 interferes with:t26 t25 t24 t15 
5: t15 interferes with:t27 t26 t25 t24 
6: t25 interferes with:t24 t15 t14 t13 t0 
7: t26 interferes with:t25 t24 t15 t14 t0 
8: t27 interferes with:t26 t25 t24 t15 t0 
9: t28 interferes with:t27 t26 t25 t24 t0 
10: t30 interferes with:t28 t27 t26 t25 t24 t0 
11: t4 interferes with:t2 t28 t27 t26 t25 t24 t0 
12: t31 interferes with:t30 t28 t27 t26 t25 t24 t4 t0 
13: t5 interferes with:t2 t30 t28 t27 t26 t25 t24 t4 t0 
14: t32 interferes with:t31 t30 t28 t27 t26 t25 t24 t5 t4 t0 
15: t6 interferes with:t2 t31 t30 t28 t27 t26 t25 t24 t5 t4 t0 
16: t7 interferes with:t2 t32 t31 t30 t28 t27 t26 t25 t24 t6 t5 t4 
17: t2 interferes with:t28 t27 t26 t25 t24 
18: t8 interferes with:t28 t27 t26 t25 t24 t2 
19: t9 interferes with:t28 t27 t26 t25 t24 t2 
20: t10 interferes with:t28 t27 t26 t25 t24 t2 
21: t11 interferes with:t28 t27 t26 t25 t24 t2 
22: t29 interferes with:t28 t27 t26 t25 t24 
23: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L2: : def => null, use => null
movq %t3, %t24 # default move : def => [t24=>t24], use => [t3=>rbx]
movq %t12, %t25 # default move : def => [t25=>t25], use => [t12=>r12]
movq %t13, %t26 # default move : def => [t26=>t26], use => [t13=>r13]
movq %t14, %t27 # default move : def => [t27=>t27], use => [t14=>r14]
movq %t15, %t28 # default move : def => [t28=>t28], use => [t15=>r15]
movq $4, %t30 # const : def => [t30=>t30], use => null
movq %t30, %t4 # move arg 3 to temp : def => [t4=>rcx], use => [t30=>t30]
movq $3, %t31 # const : def => [t31=>t31], use => null
movq %t31, %t5 # move arg 2 to temp : def => [t5=>rdx], use => [t31=>t31]
movq $2, %t32 # const : def => [t32=>t32], use => null
movq %t32, %t6 # move arg 1 to temp : def => [t6=>rsi], use => [t32=>t32]
movq %t0, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t0=>rbp]
call L0 # default call : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t30=>t30,t4=>rcx,t31=>t31,t5=>rdx,t32=>t32,t6=>rsi,t0=>rbp,t7=>rdi]
movq %t2, %t29 # default move : def => [t29=>t29], use => [t2=>rax]
movq %t29, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t29=>t29]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t29=>t29,t7=>rdi]
movq %t28, %t15 # default move : def => [t15=>r15], use => [t28=>t28]
movq %t27, %t14 # default move : def => [t14=>r14], use => [t27=>t27]
movq %t26, %t13 # default move : def => [t13=>r13], use => [t26=>t26]
movq %t25, %t12 # default move : def => [t12=>r12], use => [t25=>t25]
movq %t24, %t3 # default move : def => [t3=>rbx], use => [t24=>t24]
jmp L1 : def => null, use => null
L1: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L2: => [t0=>rbp,t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t24 # default move => [t0=>rbp,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t24=>t24]
movq %t12, %t25 # default move => [t0=>rbp,t13=>r13,t14=>r14,t15=>r15,t24=>t24,t25=>t25]
movq %t13, %t26 # default move => [t0=>rbp,t14=>r14,t15=>r15,t24=>t24,t25=>t25,t26=>t26]
movq %t14, %t27 # default move => [t0=>rbp,t15=>r15,t24=>t24,t25=>t25,t26=>t26,t27=>t27]
movq %t15, %t28 # default move => [t0=>rbp,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28]
movq $4, %t30 # const => [t0=>rbp,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t30=>t30]
movq %t30, %t4 # move arg 3 to temp => [t0=>rbp,t4=>rcx,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t30=>t30]
movq $3, %t31 # const => [t0=>rbp,t4=>rcx,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t30=>t30,t31=>t31]
movq %t31, %t5 # move arg 2 to temp => [t0=>rbp,t4=>rcx,t5=>rdx,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t30=>t30,t31=>t31]
movq $2, %t32 # const => [t0=>rbp,t4=>rcx,t5=>rdx,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t30=>t30,t31=>t31,t32=>t32]
movq %t32, %t6 # move arg 1 to temp => [t0=>rbp,t4=>rcx,t5=>rdx,t6=>rsi,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t30=>t30,t31=>t31,t32=>t32]
movq %t0, %t7 # move arg 0 to temp => [t0=>rbp,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t30=>t30,t31=>t31,t32=>t32]
call L0 # default call => [t2=>rax,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28]
movq %t2, %t29 # default move => [t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t29=>t29]
movq %t29, %t7 # move arg 0 to temp => [t7=>rdi,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28,t29=>t29]
call printi # exp call ( no return value ) => [t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28]
movq %t28, %t15 # default move => [t15=>r15,t24=>t24,t25=>t25,t26=>t26,t27=>t27]
movq %t27, %t14 # default move => [t14=>r14,t15=>r15,t24=>t24,t25=>t25,t26=>t26]
movq %t26, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t24=>t24,t25=>t25]
movq %t25, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t24=>t24]
movq %t24, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L1 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L1: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                  t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 rc def
L2:                                        |        |                             |   |   |   |                                                                      6 null
movq %t3, %t24 # default move              |                                      |   |   |   |                                   |                                  6 [t24=>t24]
movq %t12, %t25 # default move             |                                          |   |   |                                   |   |                              6 [t25=>t25]
movq %t13, %t26 # default move             |                                              |   |                                   |   |   |                          6 [t26=>t26]
movq %t14, %t27 # default move             |                                                  |                                   |   |   |   |                      6 [t27=>t27]
movq %t15, %t28 # default move             |                                                                                      |   |   |   |   |                  6 [t28=>t28]
movq $4, %t30 # const                      |                                                                                      |   |   |   |   |       |          7 [t30=>t30]
movq %t30, %t4 # move arg 3 to temp        |           |                                                                          |   |   |   |   |       |          8 [t4=>rcx]
movq $3, %t31 # const                      |           |                                                                          |   |   |   |   |       |   |      9 [t31=>t31]
movq %t31, %t5 # move arg 2 to temp        |           |  |                                                                       |   |   |   |   |       |   |      10 [t5=>rdx]
movq $2, %t32 # const                      |           |  |                                                                       |   |   |   |   |       |   |   |  11 [t32=>t32]
movq %t32, %t6 # move arg 1 to temp        |           |  |  |                                                                    |   |   |   |   |       |   |   |  12 [t6=>rsi]
movq %t0, %t7 # move arg 0 to temp         |           |  |  |  |                                                                 |   |   |   |   |       |   |   |  13 [t7=>rdi]
call L0 # default call                           |                                                                                |   |   |   |   |                  6 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t2, %t29 # default move                                                                                                     |   |   |   |   |   |              6 [t29=>t29]
movq %t29, %t7 # move arg 0 to temp                             |                                                                 |   |   |   |   |   |              7 [t7=>rdi]
call printi # exp call ( no return value )                                                                                        |   |   |   |   |                  5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t28, %t15 # default move                                                                |                                   |   |   |   |                      5 [t15=>r15]
movq %t27, %t14 # default move                                                            |   |                                   |   |   |                          5 [t14=>r14]
movq %t26, %t13 # default move                                                        |   |   |                                   |   |                              5 [t13=>r13]
movq %t25, %t12 # default move                                                    |   |   |   |                                   |                                  5 [t12=>r12]
movq %t24, %t3 # default move                       |                             |   |   |   |                                                                      5 [t3=>rbx]
jmp L1                                              |                             |   |   |   |                                                                      5 null
L1:                                                 |                             |   |   |   |                                                                      5 null
# sink                                                                                                                                                               0 null
0: t16 interferes with:t15 t14 t13 t12 t5 t4 t3 
1: t3 interferes with:t15 t14 t13 t12 
2: t4 interferes with:
3: t5 interferes with:
4: t12 interferes with:t19 t15 t14 t13 
5: t13 interferes with:t20 t19 t15 t14 
6: t14 interferes with:t21 t20 t19 t15 
7: t15 interferes with:t22 t21 t20 t19 
8: t17 interferes with:t16 t15 t14 t13 t12 t4 t3 
9: t18 interferes with:t17 t16 t15 t14 t13 t12 t3 
10: t19 interferes with:t18 t17 t16 t15 t14 t13 t12 
11: t20 interferes with:t19 t18 t17 t16 t15 t14 t13 
12: t21 interferes with:t20 t19 t18 t17 t16 t15 t14 
13: t22 interferes with:t21 t20 t19 t18 t17 t16 t15 
14: t23 interferes with:t22 t21 t20 t19 t18 t17 t16 
15: t33 interferes with:t23 t22 t21 t20 t19 t18 t17 
16: t34 interferes with:t23 t22 t21 t20 t19 t18 
17: t2 interferes with:t23 t22 t21 t20 t19 
registers:14
### Uses and Defs
L4: : def => null, use => null
movq %t7, -8(%t0) # store to offset : def => null, use => [t7=>rdi,t0=>rbp]
movq %t6, %t16 # default move : def => [t16=>t16], use => [t6=>rsi]
movq %t5, %t17 # default move : def => [t17=>t17], use => [t5=>rdx]
movq %t4, %t18 # default move : def => [t18=>t18], use => [t4=>rcx]
movq %t3, %t19 # default move : def => [t19=>t19], use => [t3=>rbx]
movq %t12, %t20 # default move : def => [t20=>t20], use => [t12=>r12]
movq %t13, %t21 # default move : def => [t21=>t21], use => [t13=>r13]
movq %t14, %t22 # default move : def => [t22=>t22], use => [t14=>r14]
movq %t15, %t23 # default move : def => [t23=>t23], use => [t15=>r15]
movq %t16, %t33 # add lexp -> r : def => [t33=>t33], use => [t16=>t16]
add %t17, %t33 : def => [t33=>t33], use => [t17=>t17,t33=>t33]
movq %t33, %t34 # add lexp -> r : def => [t34=>t34], use => [t33=>t33]
add %t18, %t34 : def => [t34=>t34], use => [t18=>t18,t34=>t34]
movq %t34, %t2 # default move : def => [t2=>rax], use => [t34=>t34]
movq %t23, %t15 # default move : def => [t15=>r15], use => [t23=>t23]
movq %t22, %t14 # default move : def => [t14=>r14], use => [t22=>t22]
movq %t21, %t13 # default move : def => [t13=>r13], use => [t21=>t21]
movq %t20, %t12 # default move : def => [t12=>r12], use => [t20=>t20]
movq %t19, %t3 # default move : def => [t3=>rbx], use => [t19=>t19]
jmp L3 : def => null, use => null
L3: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L4: => [t0=>rbp,t3=>rbx,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t7, -8(%t0) # store to offset => [t3=>rbx,t4=>rcx,t5=>rdx,t6=>rsi,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t6, %t16 # default move => [t3=>rbx,t4=>rcx,t5=>rdx,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16]
movq %t5, %t17 # default move => [t3=>rbx,t4=>rcx,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17]
movq %t4, %t18 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18]
movq %t3, %t19 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19]
movq %t12, %t20 # default move => [t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
movq %t13, %t21 # default move => [t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t14, %t22 # default move => [t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t15, %t23 # default move => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23]
movq %t16, %t33 # add lexp -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t33=>t33]
add %t17, %t33 => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t33=>t33]
movq %t33, %t34 # add lexp -> r => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t34=>t34]
add %t18, %t34 => [t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t34=>t34]
movq %t34, %t2 # default move => [t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23]
movq %t23, %t15 # default move => [t15=>r15,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t22, %t14 # default move => [t14=>r14,t15=>r15,t19=>t19,t20=>t20,t21=>t21]
movq %t21, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t19=>t19,t20=>t20]
movq %t20, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t19=>t19]
movq %t19, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L3 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L3: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                           t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 rc def
L4:                                 |        |  |  |  |  |                 |   |   |   |                                                                              10 null
movq %t7, -8(%t0) # store to offset          |  |  |  |                    |   |   |   |                                                                              8 null
movq %t6, %t16 # default move                |  |  |                       |   |   |   |   |                                                                          8 [t16=>t16]
movq %t5, %t17 # default move                |  |                          |   |   |   |   |   |                                                                      8 [t17=>t17]
movq %t4, %t18 # default move                |                             |   |   |   |   |   |   |                                                                  8 [t18=>t18]
movq %t3, %t19 # default move                                              |   |   |   |   |   |   |   |                                                              8 [t19=>t19]
movq %t12, %t20 # default move                                                 |   |   |   |   |   |   |   |                                                          8 [t20=>t20]
movq %t13, %t21 # default move                                                     |   |   |   |   |   |   |   |                                                      8 [t21=>t21]
movq %t14, %t22 # default move                                                         |   |   |   |   |   |   |   |                                                  8 [t22=>t22]
movq %t15, %t23 # default move                                                             |   |   |   |   |   |   |   |                                              8 [t23=>t23]
movq %t16, %t33 # add lexp -> r                                                                |   |   |   |   |   |   |                                       |      8 [t33=>t33]
add %t17, %t33                                                                                     |   |   |   |   |   |                                       |      7 [t33=>t33]
movq %t33, %t34 # add lexp -> r                                                                    |   |   |   |   |   |                                           |  7 [t34=>t34]
add %t18, %t34                                                                                         |   |   |   |   |                                           |  6 [t34=>t34]
movq %t34, %t2 # default move                                                                          |   |   |   |   |                                              5 [t2=>rax]
movq %t23, %t15 # default move                                                         |               |   |   |   |                                                  5 [t15=>r15]
movq %t22, %t14 # default move                                                     |   |               |   |   |                                                      5 [t14=>r14]
movq %t21, %t13 # default move                                                 |   |   |               |   |                                                          5 [t13=>r13]
movq %t20, %t12 # default move                                             |   |   |   |               |                                                              5 [t12=>r12]
movq %t19, %t3 # default move                |                             |   |   |   |                                                                              5 [t3=>rbx]
jmp L3                                       |                             |   |   |   |                                                                              5 null
L3:                                          |                             |   |   |   |                                                                              5 null
# sink                                                                                                                                                                0 null
[92mTest Result: ./tests/function_three_arg.tig passed.[0m
0: t21 interferes with:t15 t14 t13 t12 t0 
1: t0 interferes with:
2: t12 interferes with:t21 t15 t14 t13 
3: t13 interferes with:t22 t21 t15 t14 
4: t14 interferes with:t23 t22 t21 t15 
5: t15 interferes with:t24 t23 t22 t21 
6: t22 interferes with:t21 t15 t14 t13 t0 
7: t23 interferes with:t22 t21 t15 t14 t0 
8: t24 interferes with:t23 t22 t21 t15 t0 
9: t25 interferes with:t24 t23 t22 t21 t0 
10: t7 interferes with:t2 t25 t24 t23 t22 t21 
11: t2 interferes with:t25 t24 t23 t22 t21 
12: t4 interferes with:t25 t24 t23 t22 t21 t2 
13: t5 interferes with:t25 t24 t23 t22 t21 t2 
14: t6 interferes with:t25 t24 t23 t22 t21 t2 
15: t8 interferes with:t25 t24 t23 t22 t21 t2 
16: t9 interferes with:t25 t24 t23 t22 t21 t2 
17: t10 interferes with:t25 t24 t23 t22 t21 t2 
18: t11 interferes with:t25 t24 t23 t22 t21 t2 
19: t26 interferes with:t25 t24 t23 t22 t21 
20: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L2: : def => null, use => null
movq %t3, %t21 # default move : def => [t21=>t21], use => [t3=>rbx]
movq %t12, %t22 # default move : def => [t22=>t22], use => [t12=>r12]
movq %t13, %t23 # default move : def => [t23=>t23], use => [t13=>r13]
movq %t14, %t24 # default move : def => [t24=>t24], use => [t14=>r14]
movq %t15, %t25 # default move : def => [t25=>t25], use => [t15=>r15]
movq %t0, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t0=>rbp]
call L0 # default call : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t0=>rbp,t7=>rdi]
movq %t2, %t26 # default move : def => [t26=>t26], use => [t2=>rax]
movq %t26, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t26=>t26]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t26=>t26,t7=>rdi]
movq %t25, %t15 # default move : def => [t15=>r15], use => [t25=>t25]
movq %t24, %t14 # default move : def => [t14=>r14], use => [t24=>t24]
movq %t23, %t13 # default move : def => [t13=>r13], use => [t23=>t23]
movq %t22, %t12 # default move : def => [t12=>r12], use => [t22=>t22]
movq %t21, %t3 # default move : def => [t3=>rbx], use => [t21=>t21]
jmp L1 : def => null, use => null
L1: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L2: => [t0=>rbp,t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t21 # default move => [t0=>rbp,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t21=>t21]
movq %t12, %t22 # default move => [t0=>rbp,t13=>r13,t14=>r14,t15=>r15,t21=>t21,t22=>t22]
movq %t13, %t23 # default move => [t0=>rbp,t14=>r14,t15=>r15,t21=>t21,t22=>t22,t23=>t23]
movq %t14, %t24 # default move => [t0=>rbp,t15=>r15,t21=>t21,t22=>t22,t23=>t23,t24=>t24]
movq %t15, %t25 # default move => [t0=>rbp,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25]
movq %t0, %t7 # move arg 0 to temp => [t0=>rbp,t7=>rdi,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25]
call L0 # default call => [t2=>rax,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25]
movq %t2, %t26 # default move => [t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26]
movq %t26, %t7 # move arg 0 to temp => [t7=>rdi,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25,t26=>t26]
call printi # exp call ( no return value ) => [t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25]
movq %t25, %t15 # default move => [t15=>r15,t21=>t21,t22=>t22,t23=>t23,t24=>t24]
movq %t24, %t14 # default move => [t14=>r14,t15=>r15,t21=>t21,t22=>t22,t23=>t23]
movq %t23, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t21=>t21,t22=>t22]
movq %t22, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t21=>t21]
movq %t21, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L1 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L1: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                  t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 rc def
L2:                                        |        |                             |   |   |   |                                              6 null
movq %t3, %t21 # default move              |                                      |   |   |   |                       |                      6 [t21=>t21]
movq %t12, %t22 # default move             |                                          |   |   |                       |   |                  6 [t22=>t22]
movq %t13, %t23 # default move             |                                              |   |                       |   |   |              6 [t23=>t23]
movq %t14, %t24 # default move             |                                                  |                       |   |   |   |          6 [t24=>t24]
movq %t15, %t25 # default move             |                                                                          |   |   |   |   |      6 [t25=>t25]
movq %t0, %t7 # move arg 0 to temp         |                    |                                                     |   |   |   |   |      7 [t7=>rdi]
call L0 # default call                           |                                                                    |   |   |   |   |      6 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t2, %t26 # default move                                                                                         |   |   |   |   |   |  6 [t26=>t26]
movq %t26, %t7 # move arg 0 to temp                             |                                                     |   |   |   |   |   |  7 [t7=>rdi]
call printi # exp call ( no return value )                                                                            |   |   |   |   |      5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t25, %t15 # default move                                                                |                       |   |   |   |          5 [t15=>r15]
movq %t24, %t14 # default move                                                            |   |                       |   |   |              5 [t14=>r14]
movq %t23, %t13 # default move                                                        |   |   |                       |   |                  5 [t13=>r13]
movq %t22, %t12 # default move                                                    |   |   |   |                       |                      5 [t12=>r12]
movq %t21, %t3 # default move                       |                             |   |   |   |                                              5 [t3=>rbx]
jmp L1                                              |                             |   |   |   |                                              5 null
L1:                                                 |                             |   |   |   |                                              5 null
# sink                                                                                                                                       0 null
0: t16 interferes with:t15 t14 t13 t12 
1: t12 interferes with:t16 t15 t14 t13 
2: t13 interferes with:t17 t16 t15 t14 
3: t14 interferes with:t18 t17 t16 t15 
4: t15 interferes with:t19 t18 t17 t16 
5: t17 interferes with:t16 t15 t14 t13 
6: t18 interferes with:t17 t16 t15 t14 
7: t19 interferes with:t18 t17 t16 t15 
8: t20 interferes with:t19 t18 t17 t16 
9: t27 interferes with:t20 t19 t18 t17 t16 
10: t2 interferes with:t20 t19 t18 t17 t16 
11: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L4: : def => null, use => null
movq %t7, -8(%t0) # store to offset : def => null, use => [t7=>rdi,t0=>rbp]
movq %t3, %t16 # default move : def => [t16=>t16], use => [t3=>rbx]
movq %t12, %t17 # default move : def => [t17=>t17], use => [t12=>r12]
movq %t13, %t18 # default move : def => [t18=>t18], use => [t13=>r13]
movq %t14, %t19 # default move : def => [t19=>t19], use => [t14=>r14]
movq %t15, %t20 # default move : def => [t20=>t20], use => [t15=>r15]
movq $3, %t27 # const : def => [t27=>t27], use => null
movq %t27, %t2 # default move : def => [t2=>rax], use => [t27=>t27]
movq %t20, %t15 # default move : def => [t15=>r15], use => [t20=>t20]
movq %t19, %t14 # default move : def => [t14=>r14], use => [t19=>t19]
movq %t18, %t13 # default move : def => [t13=>r13], use => [t18=>t18]
movq %t17, %t12 # default move : def => [t12=>r12], use => [t17=>t17]
movq %t16, %t3 # default move : def => [t3=>rbx], use => [t16=>t16]
jmp L3 : def => null, use => null
L3: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L4: => [t0=>rbp,t3=>rbx,t7=>rdi,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t7, -8(%t0) # store to offset => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t16 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16]
movq %t12, %t17 # default move => [t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17]
movq %t13, %t18 # default move => [t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18]
movq %t14, %t19 # default move => [t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19]
movq %t15, %t20 # default move => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
movq $3, %t27 # const => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t27=>t27]
movq %t27, %t2 # default move => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
movq %t20, %t15 # default move => [t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19]
movq %t19, %t14 # default move => [t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18]
movq %t18, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17]
movq %t17, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16]
movq %t16, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L3 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L3: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                           t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 rc def
L4:                                 |        |           |                 |   |   |   |                                                  7 null
movq %t7, -8(%t0) # store to offset          |                             |   |   |   |                                                  5 null
movq %t3, %t16 # default move                                              |   |   |   |   |                                              5 [t16=>t16]
movq %t12, %t17 # default move                                                 |   |   |   |   |                                          5 [t17=>t17]
movq %t13, %t18 # default move                                                     |   |   |   |   |                                      5 [t18=>t18]
movq %t14, %t19 # default move                                                         |   |   |   |   |                                  5 [t19=>t19]
movq %t15, %t20 # default move                                                             |   |   |   |   |                              5 [t20=>t20]
movq $3, %t27 # const                                                                      |   |   |   |   |                           |  6 [t27=>t27]
movq %t27, %t2 # default move                                                              |   |   |   |   |                              5 [t2=>rax]
movq %t20, %t15 # default move                                                         |   |   |   |   |                                  5 [t15=>r15]
movq %t19, %t14 # default move                                                     |   |   |   |   |                                      5 [t14=>r14]
movq %t18, %t13 # default move                                                 |   |   |   |   |                                          5 [t13=>r13]
movq %t17, %t12 # default move                                             |   |   |   |   |                                              5 [t12=>r12]
movq %t16, %t3 # default move                |                             |   |   |   |                                                  5 [t3=>rbx]
jmp L3                                       |                             |   |   |   |                                                  5 null
L3:                                          |                             |   |   |   |                                                  5 null
# sink                                                                                                                                    0 null
[92mTest Result: ./tests/function.tig passed.[0m
0: t23 interferes with:t15 t14 t13 t12 t0 
1: t0 interferes with:
2: t12 interferes with:t23 t15 t14 t13 
3: t13 interferes with:t24 t23 t15 t14 
4: t14 interferes with:t25 t24 t23 t15 
5: t15 interferes with:t26 t25 t24 t23 
6: t24 interferes with:t23 t15 t14 t13 t0 
7: t25 interferes with:t24 t23 t15 t14 t0 
8: t26 interferes with:t25 t24 t23 t15 t0 
9: t27 interferes with:t26 t25 t24 t23 t0 
10: t29 interferes with:t27 t26 t25 t24 t23 t0 
11: t5 interferes with:t2 t27 t26 t25 t24 t23 t0 
12: t30 interferes with:t29 t27 t26 t25 t24 t23 t5 t0 
13: t6 interferes with:t2 t29 t27 t26 t25 t24 t23 t5 t0 
14: t7 interferes with:t2 t30 t29 t27 t26 t25 t24 t23 t6 t5 
15: t2 interferes with:t27 t26 t25 t24 t23 
16: t4 interferes with:t27 t26 t25 t24 t23 t2 
17: t8 interferes with:t27 t26 t25 t24 t23 t2 
18: t9 interferes with:t27 t26 t25 t24 t23 t2 
19: t10 interferes with:t27 t26 t25 t24 t23 t2 
20: t11 interferes with:t27 t26 t25 t24 t23 t2 
21: t28 interferes with:t27 t26 t25 t24 t23 
22: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L2: : def => null, use => null
movq %t3, %t23 # default move : def => [t23=>t23], use => [t3=>rbx]
movq %t12, %t24 # default move : def => [t24=>t24], use => [t12=>r12]
movq %t13, %t25 # default move : def => [t25=>t25], use => [t13=>r13]
movq %t14, %t26 # default move : def => [t26=>t26], use => [t14=>r14]
movq %t15, %t27 # default move : def => [t27=>t27], use => [t15=>r15]
movq $9, %t29 # const : def => [t29=>t29], use => null
movq %t29, %t5 # move arg 2 to temp : def => [t5=>rdx], use => [t29=>t29]
movq $5, %t30 # const : def => [t30=>t30], use => null
movq %t30, %t6 # move arg 1 to temp : def => [t6=>rsi], use => [t30=>t30]
movq %t0, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t0=>rbp]
call L0 # default call : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t29=>t29,t5=>rdx,t30=>t30,t6=>rsi,t0=>rbp,t7=>rdi]
movq %t2, %t28 # default move : def => [t28=>t28], use => [t2=>rax]
movq %t28, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t28=>t28]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t28=>t28,t7=>rdi]
movq %t27, %t15 # default move : def => [t15=>r15], use => [t27=>t27]
movq %t26, %t14 # default move : def => [t14=>r14], use => [t26=>t26]
movq %t25, %t13 # default move : def => [t13=>r13], use => [t25=>t25]
movq %t24, %t12 # default move : def => [t12=>r12], use => [t24=>t24]
movq %t23, %t3 # default move : def => [t3=>rbx], use => [t23=>t23]
jmp L1 : def => null, use => null
L1: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L2: => [t0=>rbp,t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t23 # default move => [t0=>rbp,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t23=>t23]
movq %t12, %t24 # default move => [t0=>rbp,t13=>r13,t14=>r14,t15=>r15,t23=>t23,t24=>t24]
movq %t13, %t25 # default move => [t0=>rbp,t14=>r14,t15=>r15,t23=>t23,t24=>t24,t25=>t25]
movq %t14, %t26 # default move => [t0=>rbp,t15=>r15,t23=>t23,t24=>t24,t25=>t25,t26=>t26]
movq %t15, %t27 # default move => [t0=>rbp,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27]
movq $9, %t29 # const => [t0=>rbp,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t29=>t29]
movq %t29, %t5 # move arg 2 to temp => [t0=>rbp,t5=>rdx,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t29=>t29]
movq $5, %t30 # const => [t0=>rbp,t5=>rdx,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t29=>t29,t30=>t30]
movq %t30, %t6 # move arg 1 to temp => [t0=>rbp,t5=>rdx,t6=>rsi,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t29=>t29,t30=>t30]
movq %t0, %t7 # move arg 0 to temp => [t0=>rbp,t5=>rdx,t6=>rsi,t7=>rdi,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t29=>t29,t30=>t30]
call L0 # default call => [t2=>rax,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27]
movq %t2, %t28 # default move => [t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28]
movq %t28, %t7 # move arg 0 to temp => [t7=>rdi,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28]
call printi # exp call ( no return value ) => [t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27]
movq %t27, %t15 # default move => [t15=>r15,t23=>t23,t24=>t24,t25=>t25,t26=>t26]
movq %t26, %t14 # default move => [t14=>r14,t15=>r15,t23=>t23,t24=>t24,t25=>t25]
movq %t25, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t23=>t23,t24=>t24]
movq %t24, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t23=>t23]
movq %t23, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L1 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L1: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                  t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 rc def
L2:                                        |        |                             |   |   |   |                                                              6 null
movq %t3, %t23 # default move              |                                      |   |   |   |                               |                              6 [t23=>t23]
movq %t12, %t24 # default move             |                                          |   |   |                               |   |                          6 [t24=>t24]
movq %t13, %t25 # default move             |                                              |   |                               |   |   |                      6 [t25=>t25]
movq %t14, %t26 # default move             |                                                  |                               |   |   |   |                  6 [t26=>t26]
movq %t15, %t27 # default move             |                                                                                  |   |   |   |   |              6 [t27=>t27]
movq $9, %t29 # const                      |                                                                                  |   |   |   |   |       |      7 [t29=>t29]
movq %t29, %t5 # move arg 2 to temp        |              |                                                                   |   |   |   |   |       |      8 [t5=>rdx]
movq $5, %t30 # const                      |              |                                                                   |   |   |   |   |       |   |  9 [t30=>t30]
movq %t30, %t6 # move arg 1 to temp        |              |  |                                                                |   |   |   |   |       |   |  10 [t6=>rsi]
movq %t0, %t7 # move arg 0 to temp         |              |  |  |                                                             |   |   |   |   |       |   |  11 [t7=>rdi]
call L0 # default call                           |                                                                            |   |   |   |   |              6 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t2, %t28 # default move                                                                                                 |   |   |   |   |   |          6 [t28=>t28]
movq %t28, %t7 # move arg 0 to temp                             |                                                             |   |   |   |   |   |          7 [t7=>rdi]
call printi # exp call ( no return value )                                                                                    |   |   |   |   |              5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t27, %t15 # default move                                                                |                               |   |   |   |                  5 [t15=>r15]
movq %t26, %t14 # default move                                                            |   |                               |   |   |                      5 [t14=>r14]
movq %t25, %t13 # default move                                                        |   |   |                               |   |                          5 [t13=>r13]
movq %t24, %t12 # default move                                                    |   |   |   |                               |                              5 [t12=>r12]
movq %t23, %t3 # default move                       |                             |   |   |   |                                                              5 [t3=>rbx]
jmp L1                                              |                             |   |   |   |                                                              5 null
L1:                                                 |                             |   |   |   |                                                              5 null
# sink                                                                                                                                                       0 null
0: t16 interferes with:t15 t14 t13 t12 t5 t3 
1: t3 interferes with:t15 t14 t13 t12 
2: t5 interferes with:
3: t12 interferes with:t18 t15 t14 t13 
4: t13 interferes with:t19 t18 t15 t14 
5: t14 interferes with:t20 t19 t18 t15 
6: t15 interferes with:t21 t20 t19 t18 
7: t17 interferes with:t16 t15 t14 t13 t12 t3 
8: t18 interferes with:t17 t16 t15 t14 t13 t12 
9: t19 interferes with:t18 t17 t16 t15 t14 t13 
10: t20 interferes with:t19 t18 t17 t16 t15 t14 
11: t21 interferes with:t20 t19 t18 t17 t16 t15 
12: t22 interferes with:t21 t20 t19 t18 t17 t16 
13: t31 interferes with:t22 t21 t20 t19 t18 t17 
14: t2 interferes with:t22 t21 t20 t19 t18 
registers:14
### Uses and Defs
L4: : def => null, use => null
movq %t7, -8(%t0) # store to offset : def => null, use => [t7=>rdi,t0=>rbp]
movq %t6, %t16 # default move : def => [t16=>t16], use => [t6=>rsi]
movq %t5, %t17 # default move : def => [t17=>t17], use => [t5=>rdx]
movq %t3, %t18 # default move : def => [t18=>t18], use => [t3=>rbx]
movq %t12, %t19 # default move : def => [t19=>t19], use => [t12=>r12]
movq %t13, %t20 # default move : def => [t20=>t20], use => [t13=>r13]
movq %t14, %t21 # default move : def => [t21=>t21], use => [t14=>r14]
movq %t15, %t22 # default move : def => [t22=>t22], use => [t15=>r15]
movq %t16, %t31 # add lexp -> r : def => [t31=>t31], use => [t16=>t16]
add %t17, %t31 : def => [t31=>t31], use => [t17=>t17,t31=>t31]
movq %t31, %t2 # default move : def => [t2=>rax], use => [t31=>t31]
movq %t22, %t15 # default move : def => [t15=>r15], use => [t22=>t22]
movq %t21, %t14 # default move : def => [t14=>r14], use => [t21=>t21]
movq %t20, %t13 # default move : def => [t13=>r13], use => [t20=>t20]
movq %t19, %t12 # default move : def => [t12=>r12], use => [t19=>t19]
movq %t18, %t3 # default move : def => [t3=>rbx], use => [t18=>t18]
jmp L3 : def => null, use => null
L3: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L4: => [t0=>rbp,t3=>rbx,t5=>rdx,t6=>rsi,t7=>rdi,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t7, -8(%t0) # store to offset => [t3=>rbx,t5=>rdx,t6=>rsi,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t6, %t16 # default move => [t3=>rbx,t5=>rdx,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16]
movq %t5, %t17 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17]
movq %t3, %t18 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18]
movq %t12, %t19 # default move => [t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19]
movq %t13, %t20 # default move => [t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
movq %t14, %t21 # default move => [t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t15, %t22 # default move => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t16, %t31 # add lexp -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t31=>t31]
add %t17, %t31 => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t31=>t31]
movq %t31, %t2 # default move => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t22, %t15 # default move => [t15=>r15,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t21, %t14 # default move => [t14=>r14,t15=>r15,t18=>t18,t19=>t19,t20=>t20]
movq %t20, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t18=>t18,t19=>t19]
movq %t19, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t18=>t18]
movq %t18, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L3 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L3: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                           t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 rc def
L4:                                 |        |     |  |  |                 |   |   |   |                                                                  9 null
movq %t7, -8(%t0) # store to offset          |     |  |                    |   |   |   |                                                                  7 null
movq %t6, %t16 # default move                |     |                       |   |   |   |   |                                                              7 [t16=>t16]
movq %t5, %t17 # default move                |                             |   |   |   |   |   |                                                          7 [t17=>t17]
movq %t3, %t18 # default move                                              |   |   |   |   |   |   |                                                      7 [t18=>t18]
movq %t12, %t19 # default move                                                 |   |   |   |   |   |   |                                                  7 [t19=>t19]
movq %t13, %t20 # default move                                                     |   |   |   |   |   |   |                                              7 [t20=>t20]
movq %t14, %t21 # default move                                                         |   |   |   |   |   |   |                                          7 [t21=>t21]
movq %t15, %t22 # default move                                                             |   |   |   |   |   |   |                                      7 [t22=>t22]
movq %t16, %t31 # add lexp -> r                                                                |   |   |   |   |   |                                   |  7 [t31=>t31]
add %t17, %t31                                                                                     |   |   |   |   |                                   |  6 [t31=>t31]
movq %t31, %t2 # default move                                                                      |   |   |   |   |                                      5 [t2=>rax]
movq %t22, %t15 # default move                                                         |           |   |   |   |                                          5 [t15=>r15]
movq %t21, %t14 # default move                                                     |   |           |   |   |                                              5 [t14=>r14]
movq %t20, %t13 # default move                                                 |   |   |           |   |                                                  5 [t13=>r13]
movq %t19, %t12 # default move                                             |   |   |   |           |                                                      5 [t12=>r12]
movq %t18, %t3 # default move                |                             |   |   |   |                                                                  5 [t3=>rbx]
jmp L3                                       |                             |   |   |   |                                                                  5 null
L3:                                          |                             |   |   |   |                                                                  5 null
# sink                                                                                                                                                    0 null
[92mTest Result: ./tests/function_two_arg.tig passed.[0m
0: t17 interferes with:t15 t14 t13 t12 
1: t12 interferes with:t17 t15 t14 t13 
2: t13 interferes with:t18 t17 t15 t14 
3: t14 interferes with:t19 t18 t17 t15 
4: t15 interferes with:t20 t19 t18 t17 
5: t18 interferes with:t17 t15 t14 t13 
6: t19 interferes with:t18 t17 t15 t14 
7: t20 interferes with:t19 t18 t17 t15 
8: t21 interferes with:t20 t19 t18 t17 
9: t22 interferes with:t21 t20 t19 t18 t17 
10: t16 interferes with:t21 t20 t19 t18 t17 
11: t23 interferes with:t21 t20 t19 t18 t17 t16 
12: t24 interferes with:t21 t20 t19 t18 t17 
13: t7 interferes with:t21 t20 t19 t18 t17 
14: t2 interferes with:t21 t20 t19 t18 t17 
15: t4 interferes with:t21 t20 t19 t18 t17 
16: t5 interferes with:t21 t20 t19 t18 t17 
17: t6 interferes with:t21 t20 t19 t18 t17 
18: t8 interferes with:t21 t20 t19 t18 t17 
19: t9 interferes with:t21 t20 t19 t18 t17 
20: t10 interferes with:t21 t20 t19 t18 t17 
21: t11 interferes with:t21 t20 t19 t18 t17 
22: t3 interferes with:t15 t14 t13 t12 
23: t25 interferes with:t21 t20 t19 t18 t17 
registers:14
### Uses and Defs
L6: : def => null, use => null
movq %t3, %t17 # default move : def => [t17=>t17], use => [t3=>rbx]
movq %t12, %t18 # default move : def => [t18=>t18], use => [t12=>r12]
movq %t13, %t19 # default move : def => [t19=>t19], use => [t13=>r13]
movq %t14, %t20 # default move : def => [t20=>t20], use => [t14=>r14]
movq %t15, %t21 # default move : def => [t21=>t21], use => [t15=>r15]
movq $2, %t22 # const : def => [t22=>t22], use => null
movq %t22, %t16 # default move : def => [t16=>t16], use => [t22=>t22]
movq $2, %t23 # const : def => [t23=>t23], use => null
cmp %t16, %t23 : def => null, use => [t16=>t16,t23=>t23]
je L2 : def => null, use => null
L3: : def => null, use => null
movq $L1, %t24 # default name : def => [t24=>t24], use => null
movq %t24, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t24=>t24]
call print # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t24=>t24,t7=>rdi]
L4: : def => null, use => null
movq %t21, %t15 # default move : def => [t15=>r15], use => [t21=>t21]
movq %t20, %t14 # default move : def => [t14=>r14], use => [t20=>t20]
movq %t19, %t13 # default move : def => [t13=>r13], use => [t19=>t19]
movq %t18, %t12 # default move : def => [t12=>r12], use => [t18=>t18]
movq %t17, %t3 # default move : def => [t3=>rbx], use => [t17=>t17]
jmp L5 : def => null, use => null
L2: : def => null, use => null
movq $L0, %t25 # default name : def => [t25=>t25], use => null
movq %t25, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t25=>t25]
call print # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t25=>t25,t7=>rdi]
jmp L4 : def => null, use => null
L5: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L6: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t17 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t17=>t17]
movq %t12, %t18 # default move => [t13=>r13,t14=>r14,t15=>r15,t17=>t17,t18=>t18]
movq %t13, %t19 # default move => [t14=>r14,t15=>r15,t17=>t17,t18=>t18,t19=>t19]
movq %t14, %t20 # default move => [t15=>r15,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
movq %t15, %t21 # default move => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq $2, %t22 # const => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t22, %t16 # default move => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq $2, %t23 # const => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t23=>t23]
cmp %t16, %t23 => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
je L2 => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
L3: => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq $L1, %t24 # default name => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t24=>t24]
movq %t24, %t7 # move arg 0 to temp => [t7=>rdi,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t24=>t24]
call print # exp call ( no return value ) => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
L4: => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t21, %t15 # default move => [t15=>r15,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
movq %t20, %t14 # default move => [t14=>r14,t15=>r15,t17=>t17,t18=>t18,t19=>t19]
movq %t19, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t17=>t17,t18=>t18]
movq %t18, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t17=>t17]
movq %t17, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L5 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L2: => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq $L0, %t25 # default name => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t25=>t25]
movq %t25, %t7 # move arg 0 to temp => [t7=>rdi,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t25=>t25]
call print # exp call ( no return value ) => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
jmp L4 => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
L5: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                 t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 rc def
L6:                                                |                             |   |   |   |                                          5 null
movq %t3, %t17 # default move                                                    |   |   |   |       |                                  5 [t17=>t17]
movq %t12, %t18 # default move                                                       |   |   |       |   |                              5 [t18=>t18]
movq %t13, %t19 # default move                                                           |   |       |   |   |                          5 [t19=>t19]
movq %t14, %t20 # default move                                                               |       |   |   |   |                      5 [t20=>t20]
movq %t15, %t21 # default move                                                                       |   |   |   |   |                  5 [t21=>t21]
movq $2, %t22 # const                                                                                |   |   |   |   |   |              6 [t22=>t22]
movq %t22, %t16 # default move                                                                   |   |   |   |   |   |                  6 [t16=>t16]
movq $2, %t23 # const                                                                            |   |   |   |   |   |       |          7 [t23=>t23]
cmp %t16, %t23                                                                                       |   |   |   |   |                  5 null
je L2                                                                                                |   |   |   |   |                  5 null
L3:                                                                                                  |   |   |   |   |                  5 null
movq $L1, %t24 # default name                                                                        |   |   |   |   |           |      6 [t24=>t24]
movq %t24, %t7 # move arg 0 to temp                            |                                     |   |   |   |   |           |      7 [t7=>rdi]
call print # exp call ( no return value )                                                            |   |   |   |   |                  5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
L4:                                                                                                  |   |   |   |   |                  5 null
movq %t21, %t15 # default move                                                               |       |   |   |   |                      5 [t15=>r15]
movq %t20, %t14 # default move                                                           |   |       |   |   |                          5 [t14=>r14]
movq %t19, %t13 # default move                                                       |   |   |       |   |                              5 [t13=>r13]
movq %t18, %t12 # default move                                                   |   |   |   |       |                                  5 [t12=>r12]
movq %t17, %t3 # default move                      |                             |   |   |   |                                          5 [t3=>rbx]
jmp L5                                             |                             |   |   |   |                                          5 null
L2:                                                                                                  |   |   |   |   |                  5 null
movq $L0, %t25 # default name                                                                        |   |   |   |   |               |  6 [t25=>t25]
movq %t25, %t7 # move arg 0 to temp                            |                                     |   |   |   |   |               |  7 [t7=>rdi]
call print # exp call ( no return value )                                                            |   |   |   |   |                  5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
jmp L4                                                                                               |   |   |   |   |                  5 null
L5:                                                |                             |   |   |   |                                          5 null
# sink                                                                                                                                  0 null
[92mTest Result: ./tests/if_else.tig passed.[0m
0: t17 interferes with:t15 t14 t13 t12 
1: t12 interferes with:t17 t15 t14 t13 
2: t13 interferes with:t18 t17 t15 t14 
3: t14 interferes with:t19 t18 t17 t15 
4: t15 interferes with:t20 t19 t18 t17 
5: t18 interferes with:t17 t15 t14 t13 
6: t19 interferes with:t18 t17 t15 t14 
7: t20 interferes with:t19 t18 t17 t15 
8: t21 interferes with:t20 t19 t18 t17 
9: t22 interferes with:t21 t20 t19 t18 t17 
10: t16 interferes with:t21 t20 t19 t18 t17 
11: t23 interferes with:t21 t20 t19 t18 t17 t16 
12: t24 interferes with:t21 t20 t19 t18 t17 
13: t7 interferes with:t21 t20 t19 t18 t17 
14: t2 interferes with:t21 t20 t19 t18 t17 
15: t4 interferes with:t21 t20 t19 t18 t17 
16: t5 interferes with:t21 t20 t19 t18 t17 
17: t6 interferes with:t21 t20 t19 t18 t17 
18: t8 interferes with:t21 t20 t19 t18 t17 
19: t9 interferes with:t21 t20 t19 t18 t17 
20: t10 interferes with:t21 t20 t19 t18 t17 
21: t11 interferes with:t21 t20 t19 t18 t17 
22: t3 interferes with:t15 t14 t13 t12 
23: t25 interferes with:t21 t20 t19 t18 t17 
registers:14
### Uses and Defs
L6: : def => null, use => null
movq %t3, %t17 # default move : def => [t17=>t17], use => [t3=>rbx]
movq %t12, %t18 # default move : def => [t18=>t18], use => [t12=>r12]
movq %t13, %t19 # default move : def => [t19=>t19], use => [t13=>r13]
movq %t14, %t20 # default move : def => [t20=>t20], use => [t14=>r14]
movq %t15, %t21 # default move : def => [t21=>t21], use => [t15=>r15]
movq $2, %t22 # const : def => [t22=>t22], use => null
movq %t22, %t16 # default move : def => [t16=>t16], use => [t22=>t22]
movq $1, %t23 # const : def => [t23=>t23], use => null
cmp %t16, %t23 : def => null, use => [t16=>t16,t23=>t23]
je L2 : def => null, use => null
L3: : def => null, use => null
movq $L1, %t24 # default name : def => [t24=>t24], use => null
movq %t24, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t24=>t24]
call print # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t24=>t24,t7=>rdi]
L4: : def => null, use => null
movq %t21, %t15 # default move : def => [t15=>r15], use => [t21=>t21]
movq %t20, %t14 # default move : def => [t14=>r14], use => [t20=>t20]
movq %t19, %t13 # default move : def => [t13=>r13], use => [t19=>t19]
movq %t18, %t12 # default move : def => [t12=>r12], use => [t18=>t18]
movq %t17, %t3 # default move : def => [t3=>rbx], use => [t17=>t17]
jmp L5 : def => null, use => null
L2: : def => null, use => null
movq $L0, %t25 # default name : def => [t25=>t25], use => null
movq %t25, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t25=>t25]
call print # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t25=>t25,t7=>rdi]
jmp L4 : def => null, use => null
L5: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L6: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t17 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t17=>t17]
movq %t12, %t18 # default move => [t13=>r13,t14=>r14,t15=>r15,t17=>t17,t18=>t18]
movq %t13, %t19 # default move => [t14=>r14,t15=>r15,t17=>t17,t18=>t18,t19=>t19]
movq %t14, %t20 # default move => [t15=>r15,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
movq %t15, %t21 # default move => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq $2, %t22 # const => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t22, %t16 # default move => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq $1, %t23 # const => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t23=>t23]
cmp %t16, %t23 => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
je L2 => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
L3: => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq $L1, %t24 # default name => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t24=>t24]
movq %t24, %t7 # move arg 0 to temp => [t7=>rdi,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t24=>t24]
call print # exp call ( no return value ) => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
L4: => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t21, %t15 # default move => [t15=>r15,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
movq %t20, %t14 # default move => [t14=>r14,t15=>r15,t17=>t17,t18=>t18,t19=>t19]
movq %t19, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t17=>t17,t18=>t18]
movq %t18, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t17=>t17]
movq %t17, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L5 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L2: => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq $L0, %t25 # default name => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t25=>t25]
movq %t25, %t7 # move arg 0 to temp => [t7=>rdi,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t25=>t25]
call print # exp call ( no return value ) => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
jmp L4 => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
L5: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                 t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 rc def
L6:                                                |                             |   |   |   |                                          5 null
movq %t3, %t17 # default move                                                    |   |   |   |       |                                  5 [t17=>t17]
movq %t12, %t18 # default move                                                       |   |   |       |   |                              5 [t18=>t18]
movq %t13, %t19 # default move                                                           |   |       |   |   |                          5 [t19=>t19]
movq %t14, %t20 # default move                                                               |       |   |   |   |                      5 [t20=>t20]
movq %t15, %t21 # default move                                                                       |   |   |   |   |                  5 [t21=>t21]
movq $2, %t22 # const                                                                                |   |   |   |   |   |              6 [t22=>t22]
movq %t22, %t16 # default move                                                                   |   |   |   |   |   |                  6 [t16=>t16]
movq $1, %t23 # const                                                                            |   |   |   |   |   |       |          7 [t23=>t23]
cmp %t16, %t23                                                                                       |   |   |   |   |                  5 null
je L2                                                                                                |   |   |   |   |                  5 null
L3:                                                                                                  |   |   |   |   |                  5 null
movq $L1, %t24 # default name                                                                        |   |   |   |   |           |      6 [t24=>t24]
movq %t24, %t7 # move arg 0 to temp                            |                                     |   |   |   |   |           |      7 [t7=>rdi]
call print # exp call ( no return value )                                                            |   |   |   |   |                  5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
L4:                                                                                                  |   |   |   |   |                  5 null
movq %t21, %t15 # default move                                                               |       |   |   |   |                      5 [t15=>r15]
movq %t20, %t14 # default move                                                           |   |       |   |   |                          5 [t14=>r14]
movq %t19, %t13 # default move                                                       |   |   |       |   |                              5 [t13=>r13]
movq %t18, %t12 # default move                                                   |   |   |   |       |                                  5 [t12=>r12]
movq %t17, %t3 # default move                      |                             |   |   |   |                                          5 [t3=>rbx]
jmp L5                                             |                             |   |   |   |                                          5 null
L2:                                                                                                  |   |   |   |   |                  5 null
movq $L0, %t25 # default name                                                                        |   |   |   |   |               |  6 [t25=>t25]
movq %t25, %t7 # move arg 0 to temp                            |                                     |   |   |   |   |               |  7 [t7=>rdi]
call print # exp call ( no return value )                                                            |   |   |   |   |                  5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
jmp L4                                                                                               |   |   |   |   |                  5 null
L5:                                                |                             |   |   |   |                                          5 null
# sink                                                                                                                                  0 null
[92mTest Result: ./tests/if_then.tig passed.[0m
0: t18 interferes with:t15 t14 t13 t12 
1: t12 interferes with:t18 t15 t14 t13 
2: t13 interferes with:t19 t18 t15 t14 
3: t14 interferes with:t20 t19 t18 t15 
4: t15 interferes with:t21 t20 t19 t18 
5: t19 interferes with:t18 t15 t14 t13 
6: t20 interferes with:t19 t18 t15 t14 
7: t21 interferes with:t20 t19 t18 t15 
8: t22 interferes with:t21 t20 t19 t18 
9: t23 interferes with:t22 t21 t20 t19 t18 
10: t24 interferes with:t23 t22 t21 t20 t19 t18 
11: t25 interferes with:t24 t22 t21 t20 t19 t18 
12: t16 interferes with:t22 t21 t20 t19 t18 
13: t26 interferes with:t22 t21 t20 t19 t18 t16 
14: t17 interferes with:t22 t21 t20 t19 t18 t16 
15: t27 interferes with:t22 t21 t20 t19 t18 t17 
16: t7 interferes with:t22 t21 t20 t19 t18 
17: t2 interferes with:t22 t21 t20 t19 t18 
18: t4 interferes with:t22 t21 t20 t19 t18 
19: t5 interferes with:t22 t21 t20 t19 t18 
20: t6 interferes with:t22 t21 t20 t19 t18 
21: t8 interferes with:t22 t21 t20 t19 t18 
22: t9 interferes with:t22 t21 t20 t19 t18 
23: t10 interferes with:t22 t21 t20 t19 t18 
24: t11 interferes with:t22 t21 t20 t19 t18 
25: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L1: : def => null, use => null
movq %t3, %t18 # default move : def => [t18=>t18], use => [t3=>rbx]
movq %t12, %t19 # default move : def => [t19=>t19], use => [t12=>r12]
movq %t13, %t20 # default move : def => [t20=>t20], use => [t13=>r13]
movq %t14, %t21 # default move : def => [t21=>t21], use => [t14=>r14]
movq %t15, %t22 # default move : def => [t22=>t22], use => [t15=>r15]
movq $0, %t23 # const : def => [t23=>t23], use => null
movq $6, %t24 # const : def => [t24=>t24], use => null
movq %t23, %t25 # minus lexp -> r : def => [t25=>t25], use => [t23=>t23]
sub %t24, %t25 : def => [t25=>t25], use => [t24=>t24,t25=>t25]
movq %t25, %t16 # default move : def => [t16=>t16], use => [t25=>t25]
movq $4, %t26 # const : def => [t26=>t26], use => null
movq %t26, %t17 # default move : def => [t17=>t17], use => [t26=>t26]
movq %t16, %t27 # add lexp -> r : def => [t27=>t27], use => [t16=>t16]
add %t17, %t27 : def => [t27=>t27], use => [t17=>t17,t27=>t27]
movq %t27, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t27=>t27]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t27=>t27,t7=>rdi]
movq %t22, %t15 # default move : def => [t15=>r15], use => [t22=>t22]
movq %t21, %t14 # default move : def => [t14=>r14], use => [t21=>t21]
movq %t20, %t13 # default move : def => [t13=>r13], use => [t20=>t20]
movq %t19, %t12 # default move : def => [t12=>r12], use => [t19=>t19]
movq %t18, %t3 # default move : def => [t3=>rbx], use => [t18=>t18]
jmp L0 : def => null, use => null
L0: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L1: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t18 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t18=>t18]
movq %t12, %t19 # default move => [t13=>r13,t14=>r14,t15=>r15,t18=>t18,t19=>t19]
movq %t13, %t20 # default move => [t14=>r14,t15=>r15,t18=>t18,t19=>t19,t20=>t20]
movq %t14, %t21 # default move => [t15=>r15,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t15, %t22 # default move => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $0, %t23 # const => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23]
movq $6, %t24 # const => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23,t24=>t24]
movq %t23, %t25 # minus lexp -> r => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t24=>t24,t25=>t25]
sub %t24, %t25 => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t25=>t25]
movq %t25, %t16 # default move => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $4, %t26 # const => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t26=>t26]
movq %t26, %t17 # default move => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t16, %t27 # add lexp -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t27=>t27]
add %t17, %t27 => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t27=>t27]
movq %t27, %t7 # move arg 0 to temp => [t7=>rdi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t27=>t27]
call printi # exp call ( no return value ) => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t22, %t15 # default move => [t15=>r15,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t21, %t14 # default move => [t14=>r14,t15=>r15,t18=>t18,t19=>t19,t20=>t20]
movq %t20, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t18=>t18,t19=>t19]
movq %t19, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t18=>t18]
movq %t18, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L0 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L0: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                  t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 rc def
L1:                                                 |                             |   |   |   |                                                  5 null
movq %t3, %t18 # default move                                                     |   |   |   |           |                                      5 [t18=>t18]
movq %t12, %t19 # default move                                                        |   |   |           |   |                                  5 [t19=>t19]
movq %t13, %t20 # default move                                                            |   |           |   |   |                              5 [t20=>t20]
movq %t14, %t21 # default move                                                                |           |   |   |   |                          5 [t21=>t21]
movq %t15, %t22 # default move                                                                            |   |   |   |   |                      5 [t22=>t22]
movq $0, %t23 # const                                                                                     |   |   |   |   |   |                  6 [t23=>t23]
movq $6, %t24 # const                                                                                     |   |   |   |   |   |   |              7 [t24=>t24]
movq %t23, %t25 # minus lexp -> r                                                                         |   |   |   |   |       |   |          7 [t25=>t25]
sub %t24, %t25                                                                                            |   |   |   |   |           |          6 [t25=>t25]
movq %t25, %t16 # default move                                                                    |       |   |   |   |   |                      6 [t16=>t16]
movq $4, %t26 # const                                                                             |       |   |   |   |   |               |      7 [t26=>t26]
movq %t26, %t17 # default move                                                                    |   |   |   |   |   |   |                      7 [t17=>t17]
movq %t16, %t27 # add lexp -> r                                                                       |   |   |   |   |   |                   |  7 [t27=>t27]
add %t17, %t27                                                                                            |   |   |   |   |                   |  6 [t27=>t27]
movq %t27, %t7 # move arg 0 to temp                             |                                         |   |   |   |   |                   |  7 [t7=>rdi]
call printi # exp call ( no return value )                                                                |   |   |   |   |                      5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t22, %t15 # default move                                                                |           |   |   |   |                          5 [t15=>r15]
movq %t21, %t14 # default move                                                            |   |           |   |   |                              5 [t14=>r14]
movq %t20, %t13 # default move                                                        |   |   |           |   |                                  5 [t13=>r13]
movq %t19, %t12 # default move                                                    |   |   |   |           |                                      5 [t12=>r12]
movq %t18, %t3 # default move                       |                             |   |   |   |                                                  5 [t3=>rbx]
jmp L0                                              |                             |   |   |   |                                                  5 null
L0:                                                 |                             |   |   |   |                                                  5 null
# sink                                                                                                                                           0 null
[92mTest Result: ./tests/mplus.tig passed.[0m
0: t26 interferes with:t15 t14 t13 t12 t0 
1: t0 interferes with:
2: t12 interferes with:t26 t15 t14 t13 
3: t13 interferes with:t27 t26 t15 t14 
4: t14 interferes with:t28 t27 t26 t15 
5: t15 interferes with:t29 t28 t27 t26 
6: t27 interferes with:t26 t15 t14 t13 t0 
7: t28 interferes with:t27 t26 t15 t14 t0 
8: t29 interferes with:t28 t27 t26 t15 t0 
9: t30 interferes with:t29 t28 t27 t26 t0 
10: t32 interferes with:t30 t29 t28 t27 t26 t0 
11: t6 interferes with:t2 t30 t29 t28 t27 t26 t0 
12: t7 interferes with:t2 t32 t30 t29 t28 t27 t26 t6 
13: t2 interferes with:t30 t29 t28 t27 t26 
14: t4 interferes with:t30 t29 t28 t27 t26 t2 
15: t5 interferes with:t30 t29 t28 t27 t26 t2 
16: t8 interferes with:t30 t29 t28 t27 t26 t2 
17: t9 interferes with:t30 t29 t28 t27 t26 t2 
18: t10 interferes with:t30 t29 t28 t27 t26 t2 
19: t11 interferes with:t30 t29 t28 t27 t26 t2 
20: t31 interferes with:t30 t29 t28 t27 t26 
21: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L3: : def => null, use => null
movq %t3, %t26 # default move : def => [t26=>t26], use => [t3=>rbx]
movq %t12, %t27 # default move : def => [t27=>t27], use => [t12=>r12]
movq %t13, %t28 # default move : def => [t28=>t28], use => [t13=>r13]
movq %t14, %t29 # default move : def => [t29=>t29], use => [t14=>r14]
movq %t15, %t30 # default move : def => [t30=>t30], use => [t15=>r15]
movq $10, %t32 # const : def => [t32=>t32], use => null
movq %t32, %t6 # move arg 1 to temp : def => [t6=>rsi], use => [t32=>t32]
movq %t0, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t0=>rbp]
call L0 # default call : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t32=>t32,t6=>rsi,t0=>rbp,t7=>rdi]
movq %t2, %t31 # default move : def => [t31=>t31], use => [t2=>rax]
movq %t31, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t31=>t31]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t31=>t31,t7=>rdi]
movq %t30, %t15 # default move : def => [t15=>r15], use => [t30=>t30]
movq %t29, %t14 # default move : def => [t14=>r14], use => [t29=>t29]
movq %t28, %t13 # default move : def => [t13=>r13], use => [t28=>t28]
movq %t27, %t12 # default move : def => [t12=>r12], use => [t27=>t27]
movq %t26, %t3 # default move : def => [t3=>rbx], use => [t26=>t26]
jmp L2 : def => null, use => null
L2: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L3: => [t0=>rbp,t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t26 # default move => [t0=>rbp,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t26=>t26]
movq %t12, %t27 # default move => [t0=>rbp,t13=>r13,t14=>r14,t15=>r15,t26=>t26,t27=>t27]
movq %t13, %t28 # default move => [t0=>rbp,t14=>r14,t15=>r15,t26=>t26,t27=>t27,t28=>t28]
movq %t14, %t29 # default move => [t0=>rbp,t15=>r15,t26=>t26,t27=>t27,t28=>t28,t29=>t29]
movq %t15, %t30 # default move => [t0=>rbp,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30]
movq $10, %t32 # const => [t0=>rbp,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t32=>t32]
movq %t32, %t6 # move arg 1 to temp => [t0=>rbp,t6=>rsi,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t32=>t32]
movq %t0, %t7 # move arg 0 to temp => [t0=>rbp,t6=>rsi,t7=>rdi,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t32=>t32]
call L0 # default call => [t2=>rax,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30]
movq %t2, %t31 # default move => [t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t31=>t31]
movq %t31, %t7 # move arg 0 to temp => [t7=>rdi,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30,t31=>t31]
call printi # exp call ( no return value ) => [t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30]
movq %t30, %t15 # default move => [t15=>r15,t26=>t26,t27=>t27,t28=>t28,t29=>t29]
movq %t29, %t14 # default move => [t14=>r14,t15=>r15,t26=>t26,t27=>t27,t28=>t28]
movq %t28, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t26=>t26,t27=>t27]
movq %t27, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t26=>t26]
movq %t26, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L2 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L2: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                  t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 rc def
L3:                                        |        |                             |   |   |   |                                                                      6 null
movq %t3, %t26 # default move              |                                      |   |   |   |                                           |                          6 [t26=>t26]
movq %t12, %t27 # default move             |                                          |   |   |                                           |   |                      6 [t27=>t27]
movq %t13, %t28 # default move             |                                              |   |                                           |   |   |                  6 [t28=>t28]
movq %t14, %t29 # default move             |                                                  |                                           |   |   |   |              6 [t29=>t29]
movq %t15, %t30 # default move             |                                                                                              |   |   |   |   |          6 [t30=>t30]
movq $10, %t32 # const                     |                                                                                              |   |   |   |   |       |  7 [t32=>t32]
movq %t32, %t6 # move arg 1 to temp        |                 |                                                                            |   |   |   |   |       |  8 [t6=>rsi]
movq %t0, %t7 # move arg 0 to temp         |                 |  |                                                                         |   |   |   |   |       |  9 [t7=>rdi]
call L0 # default call                           |                                                                                        |   |   |   |   |          6 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t2, %t31 # default move                                                                                                             |   |   |   |   |   |      6 [t31=>t31]
movq %t31, %t7 # move arg 0 to temp                             |                                                                         |   |   |   |   |   |      7 [t7=>rdi]
call printi # exp call ( no return value )                                                                                                |   |   |   |   |          5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t30, %t15 # default move                                                                |                                           |   |   |   |              5 [t15=>r15]
movq %t29, %t14 # default move                                                            |   |                                           |   |   |                  5 [t14=>r14]
movq %t28, %t13 # default move                                                        |   |   |                                           |   |                      5 [t13=>r13]
movq %t27, %t12 # default move                                                    |   |   |   |                                           |                          5 [t12=>r12]
movq %t26, %t3 # default move                       |                             |   |   |   |                                                                      5 [t3=>rbx]
jmp L2                                              |                             |   |   |   |                                                                      5 null
L2:                                                 |                             |   |   |   |                                                                      5 null
# sink                                                                                                                                                               0 null
0: t21 interferes with:t15 t14 t13 t12 t0 
1: t0 interferes with:
2: t12 interferes with:t21 t15 t14 t13 
3: t13 interferes with:t22 t21 t15 t14 
4: t14 interferes with:t23 t22 t21 t15 
5: t15 interferes with:t24 t23 t22 t21 
6: t22 interferes with:t21 t15 t14 t13 t0 
7: t23 interferes with:t22 t21 t15 t14 t0 
8: t24 interferes with:t23 t22 t21 t15 t0 
9: t25 interferes with:t24 t23 t22 t21 t0 
10: t7 interferes with:t2 t25 t24 t23 t22 t21 
11: t2 interferes with:t25 t24 t23 t22 t21 
12: t4 interferes with:t25 t24 t23 t22 t21 t2 
13: t5 interferes with:t25 t24 t23 t22 t21 t2 
14: t6 interferes with:t25 t24 t23 t22 t21 t2 
15: t8 interferes with:t25 t24 t23 t22 t21 t2 
16: t9 interferes with:t25 t24 t23 t22 t21 t2 
17: t10 interferes with:t25 t24 t23 t22 t21 t2 
18: t11 interferes with:t25 t24 t23 t22 t21 t2 
19: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L5: : def => null, use => null
movq %t7, -8(%t0) # store to offset : def => null, use => [t7=>rdi,t0=>rbp]
movq %t6, -16(%t0) # store to offset : def => null, use => [t6=>rsi,t0=>rbp]
movq %t3, %t21 # default move : def => [t21=>t21], use => [t3=>rbx]
movq %t12, %t22 # default move : def => [t22=>t22], use => [t12=>r12]
movq %t13, %t23 # default move : def => [t23=>t23], use => [t13=>r13]
movq %t14, %t24 # default move : def => [t24=>t24], use => [t14=>r14]
movq %t15, %t25 # default move : def => [t25=>t25], use => [t15=>r15]
movq %t0, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t0=>rbp]
call L1 # default call : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t0=>rbp,t7=>rdi]
movq %t2, %t2 # default move : def => [t2=>rax], use => [t2=>rax]
movq %t25, %t15 # default move : def => [t15=>r15], use => [t25=>t25]
movq %t24, %t14 # default move : def => [t14=>r14], use => [t24=>t24]
movq %t23, %t13 # default move : def => [t13=>r13], use => [t23=>t23]
movq %t22, %t12 # default move : def => [t12=>r12], use => [t22=>t22]
movq %t21, %t3 # default move : def => [t3=>rbx], use => [t21=>t21]
jmp L4 : def => null, use => null
L4: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L5: => [t0=>rbp,t3=>rbx,t6=>rsi,t7=>rdi,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t7, -8(%t0) # store to offset => [t0=>rbp,t3=>rbx,t6=>rsi,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t6, -16(%t0) # store to offset => [t0=>rbp,t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t21 # default move => [t0=>rbp,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t21=>t21]
movq %t12, %t22 # default move => [t0=>rbp,t13=>r13,t14=>r14,t15=>r15,t21=>t21,t22=>t22]
movq %t13, %t23 # default move => [t0=>rbp,t14=>r14,t15=>r15,t21=>t21,t22=>t22,t23=>t23]
movq %t14, %t24 # default move => [t0=>rbp,t15=>r15,t21=>t21,t22=>t22,t23=>t23,t24=>t24]
movq %t15, %t25 # default move => [t0=>rbp,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25]
movq %t0, %t7 # move arg 0 to temp => [t0=>rbp,t7=>rdi,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25]
call L1 # default call => [t2=>rax,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25]
movq %t2, %t2 # default move => [t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25]
movq %t25, %t15 # default move => [t15=>r15,t21=>t21,t22=>t22,t23=>t23,t24=>t24]
movq %t24, %t14 # default move => [t14=>r14,t15=>r15,t21=>t21,t22=>t22,t23=>t23]
movq %t23, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t21=>t21,t22=>t22]
movq %t22, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t21=>t21]
movq %t21, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L4 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L4: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                            t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 rc def
L5:                                  |        |        |  |                 |   |   |   |                                                                      8 null
movq %t7, -8(%t0) # store to offset  |        |        |                    |   |   |   |                                                                      7 null
movq %t6, -16(%t0) # store to offset |        |                             |   |   |   |                                                                      6 null
movq %t3, %t21 # default move        |                                      |   |   |   |                       |                                              6 [t21=>t21]
movq %t12, %t22 # default move       |                                          |   |   |                       |   |                                          6 [t22=>t22]
movq %t13, %t23 # default move       |                                              |   |                       |   |   |                                      6 [t23=>t23]
movq %t14, %t24 # default move       |                                                  |                       |   |   |   |                                  6 [t24=>t24]
movq %t15, %t25 # default move       |                                                                          |   |   |   |   |                              6 [t25=>t25]
movq %t0, %t7 # move arg 0 to temp   |                    |                                                     |   |   |   |   |                              7 [t7=>rdi]
call L1 # default call                     |                                                                    |   |   |   |   |                              6 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t2, %t2 # default move                                                                                    |   |   |   |   |                              5 [t2=>rax]
movq %t25, %t15 # default move                                                          |                       |   |   |   |                                  5 [t15=>r15]
movq %t24, %t14 # default move                                                      |   |                       |   |   |                                      5 [t14=>r14]
movq %t23, %t13 # default move                                                  |   |   |                       |   |                                          5 [t13=>r13]
movq %t22, %t12 # default move                                              |   |   |   |                       |                                              5 [t12=>r12]
movq %t21, %t3 # default move                 |                             |   |   |   |                                                                      5 [t3=>rbx]
jmp L4                                        |                             |   |   |   |                                                                      5 null
L4:                                           |                             |   |   |   |                                                                      5 null
# sink                                                                                                                                                         0 null
0: t16 interferes with:t15 t14 t13 t12 t0 
1: t0 interferes with:
2: t12 interferes with:t16 t15 t14 t13 
3: t13 interferes with:t17 t16 t15 t14 
4: t14 interferes with:t18 t17 t16 t15 
5: t15 interferes with:t19 t18 t17 t16 
6: t17 interferes with:t16 t15 t14 t13 t0 
7: t18 interferes with:t17 t16 t15 t14 t0 
8: t19 interferes with:t18 t17 t16 t15 t0 
9: t20 interferes with:t19 t18 t17 t16 t0 
10: t33 interferes with:t20 t19 t18 t17 t16 t0 
11: t34 interferes with:t20 t19 t18 t17 t16 t0 
12: t35 interferes with:t20 t19 t18 t17 t16 t0 
13: t36 interferes with:t35 t20 t19 t18 t17 t16 t0 
14: t37 interferes with:t36 t20 t19 t18 t17 t16 t0 
15: t38 interferes with:t20 t19 t18 t17 t16 t0 
16: t39 interferes with:t38 t20 t19 t18 t17 t16 t0 
17: t40 interferes with:t38 t20 t19 t18 t17 t16 t0 
18: t41 interferes with:t38 t20 t19 t18 t17 t16 
19: t42 interferes with:t41 t38 t20 t19 t18 t17 t16 
20: t43 interferes with:t42 t38 t20 t19 t18 t17 t16 
21: t44 interferes with:t38 t20 t19 t18 t17 t16 
22: t45 interferes with:t44 t20 t19 t18 t17 t16 
23: t2 interferes with:t44 t20 t19 t18 t17 t16 
24: t5 interferes with:t20 t19 t18 t17 t16 t2 
25: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L7: : def => null, use => null
movq %t7, -8(%t0) # store to offset : def => null, use => [t7=>rdi,t0=>rbp]
movq %t3, %t16 # default move : def => [t16=>t16], use => [t3=>rbx]
movq %t12, %t17 # default move : def => [t17=>t17], use => [t12=>r12]
movq %t13, %t18 # default move : def => [t18=>t18], use => [t13=>r13]
movq %t14, %t19 # default move : def => [t19=>t19], use => [t14=>r14]
movq %t15, %t20 # default move : def => [t20=>t20], use => [t15=>r15]
movq $-8, %t33 # const : def => [t33=>t33], use => null
movq %t33, %t34 # add lexp -> r : def => [t34=>t34], use => [t33=>t33]
add %t0, %t34 : def => [t34=>t34], use => [t0=>rbp,t34=>t34]
movq (%t34), %t35 # default load : def => [t35=>t35], use => [t34=>t34]
movq $-16, %t36 # const : def => [t36=>t36], use => null
movq %t35, %t37 # add lexp -> r : def => [t37=>t37], use => [t35=>t35]
add %t36, %t37 : def => [t37=>t37], use => [t36=>t36,t37=>t37]
movq (%t37), %t38 # default load : def => [t38=>t38], use => [t37=>t37]
movq $-8, %t39 # const : def => [t39=>t39], use => null
movq %t39, %t40 # add lexp -> r : def => [t40=>t40], use => [t39=>t39]
add %t0, %t40 : def => [t40=>t40], use => [t0=>rbp,t40=>t40]
movq (%t40), %t41 # default load : def => [t41=>t41], use => [t40=>t40]
movq $-16, %t42 # const : def => [t42=>t42], use => null
movq %t41, %t43 # add lexp -> r : def => [t43=>t43], use => [t41=>t41]
add %t42, %t43 : def => [t43=>t43], use => [t42=>t42,t43=>t43]
movq (%t43), %t44 # default load : def => [t44=>t44], use => [t43=>t43]
movq %t38, %t45 # mul lexp -> r : def => [t45=>t45], use => [t38=>t38]
movq %t45, %t2 # mul r -> rax : def => [t2=>rax], use => [t45=>t45]
imul %t2 # mul rax * rexp  : def => [t2=>rax,t5=>rdx], use => [t2=>rax,t44=>t44]
movq %t2, %t45 # mul rax -> r : def => [t45=>t45], use => [t2=>rax]
movq %t45, %t2 # default move : def => [t2=>rax], use => [t45=>t45]
movq %t20, %t15 # default move : def => [t15=>r15], use => [t20=>t20]
movq %t19, %t14 # default move : def => [t14=>r14], use => [t19=>t19]
movq %t18, %t13 # default move : def => [t13=>r13], use => [t18=>t18]
movq %t17, %t12 # default move : def => [t12=>r12], use => [t17=>t17]
movq %t16, %t3 # default move : def => [t3=>rbx], use => [t16=>t16]
jmp L6 : def => null, use => null
L6: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L7: => [t0=>rbp,t3=>rbx,t7=>rdi,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t7, -8(%t0) # store to offset => [t0=>rbp,t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t16 # default move => [t0=>rbp,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16]
movq %t12, %t17 # default move => [t0=>rbp,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17]
movq %t13, %t18 # default move => [t0=>rbp,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18]
movq %t14, %t19 # default move => [t0=>rbp,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19]
movq %t15, %t20 # default move => [t0=>rbp,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
movq $-8, %t33 # const => [t0=>rbp,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t33=>t33]
movq %t33, %t34 # add lexp -> r => [t0=>rbp,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t34=>t34]
add %t0, %t34 => [t0=>rbp,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t34=>t34]
movq (%t34), %t35 # default load => [t0=>rbp,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t35=>t35]
movq $-16, %t36 # const => [t0=>rbp,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t35=>t35,t36=>t36]
movq %t35, %t37 # add lexp -> r => [t0=>rbp,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t36=>t36,t37=>t37]
add %t36, %t37 => [t0=>rbp,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t37=>t37]
movq (%t37), %t38 # default load => [t0=>rbp,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t38=>t38]
movq $-8, %t39 # const => [t0=>rbp,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t38=>t38,t39=>t39]
movq %t39, %t40 # add lexp -> r => [t0=>rbp,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t38=>t38,t40=>t40]
add %t0, %t40 => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t38=>t38,t40=>t40]
movq (%t40), %t41 # default load => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t38=>t38,t41=>t41]
movq $-16, %t42 # const => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t38=>t38,t41=>t41,t42=>t42]
movq %t41, %t43 # add lexp -> r => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t38=>t38,t42=>t42,t43=>t43]
add %t42, %t43 => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t38=>t38,t43=>t43]
movq (%t43), %t44 # default load => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t38=>t38,t44=>t44]
movq %t38, %t45 # mul lexp -> r => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t44=>t44,t45=>t45]
movq %t45, %t2 # mul r -> rax => [t2=>rax,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t44=>t44]
imul %t2 # mul rax * rexp  => [t2=>rax,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
movq %t2, %t45 # mul rax -> r => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t45=>t45]
movq %t45, %t2 # default move => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
movq %t20, %t15 # default move => [t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19]
movq %t19, %t14 # default move => [t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18]
movq %t18, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17]
movq %t17, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16]
movq %t16, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L6 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L6: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                           t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36 t37 t38 t39 t40 t41 t42 t43 t44 t45 rc def
L7:                                 |        |           |                 |   |   |   |                                                                                                                          7 null
movq %t7, -8(%t0) # store to offset |        |                             |   |   |   |                                                                                                                          6 null
movq %t3, %t16 # default move       |                                      |   |   |   |   |                                                                                                                      6 [t16=>t16]
movq %t12, %t17 # default move      |                                          |   |   |   |   |                                                                                                                  6 [t17=>t17]
movq %t13, %t18 # default move      |                                              |   |   |   |   |                                                                                                              6 [t18=>t18]
movq %t14, %t19 # default move      |                                                  |   |   |   |   |                                                                                                          6 [t19=>t19]
movq %t15, %t20 # default move      |                                                      |   |   |   |   |                                                                                                      6 [t20=>t20]
movq $-8, %t33 # const              |                                                      |   |   |   |   |                                                   |                                                  7 [t33=>t33]
movq %t33, %t34 # add lexp -> r     |                                                      |   |   |   |   |                                                       |                                              7 [t34=>t34]
add %t0, %t34                       |                                                      |   |   |   |   |                                                       |                                              7 [t34=>t34]
movq (%t34), %t35 # default load    |                                                      |   |   |   |   |                                                           |                                          7 [t35=>t35]
movq $-16, %t36 # const             |                                                      |   |   |   |   |                                                           |   |                                      8 [t36=>t36]
movq %t35, %t37 # add lexp -> r     |                                                      |   |   |   |   |                                                               |   |                                  8 [t37=>t37]
add %t36, %t37                      |                                                      |   |   |   |   |                                                                   |                                  7 [t37=>t37]
movq (%t37), %t38 # default load    |                                                      |   |   |   |   |                                                                       |                              7 [t38=>t38]
movq $-8, %t39 # const              |                                                      |   |   |   |   |                                                                       |   |                          8 [t39=>t39]
movq %t39, %t40 # add lexp -> r     |                                                      |   |   |   |   |                                                                       |       |                      8 [t40=>t40]
add %t0, %t40                                                                              |   |   |   |   |                                                                       |       |                      7 [t40=>t40]
movq (%t40), %t41 # default load                                                           |   |   |   |   |                                                                       |           |                  7 [t41=>t41]
movq $-16, %t42 # const                                                                    |   |   |   |   |                                                                       |           |   |              8 [t42=>t42]
movq %t41, %t43 # add lexp -> r                                                            |   |   |   |   |                                                                       |               |   |          8 [t43=>t43]
add %t42, %t43                                                                             |   |   |   |   |                                                                       |                   |          7 [t43=>t43]
movq (%t43), %t44 # default load                                                           |   |   |   |   |                                                                       |                       |      7 [t44=>t44]
movq %t38, %t45 # mul lexp -> r                                                            |   |   |   |   |                                                                                               |   |  7 [t45=>t45]
movq %t45, %t2 # mul r -> rax             |                                                |   |   |   |   |                                                                                               |      7 [t2=>rax]
imul %t2 # mul rax * rexp                 |                                                |   |   |   |   |                                                                                                      6 [t2=>rax,t5=>rdx]
movq %t2, %t45 # mul rax -> r                                                              |   |   |   |   |                                                                                                   |  6 [t45=>t45]
movq %t45, %t2 # default move                                                              |   |   |   |   |                                                                                                      5 [t2=>rax]
movq %t20, %t15 # default move                                                         |   |   |   |   |                                                                                                          5 [t15=>r15]
movq %t19, %t14 # default move                                                     |   |   |   |   |                                                                                                              5 [t14=>r14]
movq %t18, %t13 # default move                                                 |   |   |   |   |                                                                                                                  5 [t13=>r13]
movq %t17, %t12 # default move                                             |   |   |   |   |                                                                                                                      5 [t12=>r12]
movq %t16, %t3 # default move                |                             |   |   |   |                                                                                                                          5 [t3=>rbx]
jmp L6                                       |                             |   |   |   |                                                                                                                          5 null
L6:                                          |                             |   |   |   |                                                                                                                          5 null
# sink                                                                                                                                                                                                            0 null
[92mTest Result: ./tests/nested_function_one.tig passed.[0m
0: t31 interferes with:t15 t14 t13 t12 t0 
1: t0 interferes with:
2: t12 interferes with:t31 t15 t14 t13 
3: t13 interferes with:t32 t31 t15 t14 
4: t14 interferes with:t33 t32 t31 t15 
5: t15 interferes with:t34 t33 t32 t31 
6: t32 interferes with:t31 t15 t14 t13 t0 
7: t33 interferes with:t32 t31 t15 t14 t0 
8: t34 interferes with:t33 t32 t31 t15 t0 
9: t35 interferes with:t34 t33 t32 t31 t0 
10: t37 interferes with:t35 t34 t33 t32 t31 t0 
11: t6 interferes with:t2 t35 t34 t33 t32 t31 t0 
12: t7 interferes with:t2 t37 t35 t34 t33 t32 t31 t6 
13: t2 interferes with:t35 t34 t33 t32 t31 
14: t4 interferes with:t35 t34 t33 t32 t31 t2 
15: t5 interferes with:t35 t34 t33 t32 t31 t2 
16: t8 interferes with:t35 t34 t33 t32 t31 t2 
17: t9 interferes with:t35 t34 t33 t32 t31 t2 
18: t10 interferes with:t35 t34 t33 t32 t31 t2 
19: t11 interferes with:t35 t34 t33 t32 t31 t2 
20: t36 interferes with:t35 t34 t33 t32 t31 
21: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L4: : def => null, use => null
movq %t3, %t31 # default move : def => [t31=>t31], use => [t3=>rbx]
movq %t12, %t32 # default move : def => [t32=>t32], use => [t12=>r12]
movq %t13, %t33 # default move : def => [t33=>t33], use => [t13=>r13]
movq %t14, %t34 # default move : def => [t34=>t34], use => [t14=>r14]
movq %t15, %t35 # default move : def => [t35=>t35], use => [t15=>r15]
movq $10, %t37 # const : def => [t37=>t37], use => null
movq %t37, %t6 # move arg 1 to temp : def => [t6=>rsi], use => [t37=>t37]
movq %t0, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t0=>rbp]
call L0 # default call : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t37=>t37,t6=>rsi,t0=>rbp,t7=>rdi]
movq %t2, %t36 # default move : def => [t36=>t36], use => [t2=>rax]
movq %t36, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t36=>t36]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t36=>t36,t7=>rdi]
movq %t35, %t15 # default move : def => [t15=>r15], use => [t35=>t35]
movq %t34, %t14 # default move : def => [t14=>r14], use => [t34=>t34]
movq %t33, %t13 # default move : def => [t13=>r13], use => [t33=>t33]
movq %t32, %t12 # default move : def => [t12=>r12], use => [t32=>t32]
movq %t31, %t3 # default move : def => [t3=>rbx], use => [t31=>t31]
jmp L3 : def => null, use => null
L3: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L4: => [t0=>rbp,t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t31 # default move => [t0=>rbp,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t31=>t31]
movq %t12, %t32 # default move => [t0=>rbp,t13=>r13,t14=>r14,t15=>r15,t31=>t31,t32=>t32]
movq %t13, %t33 # default move => [t0=>rbp,t14=>r14,t15=>r15,t31=>t31,t32=>t32,t33=>t33]
movq %t14, %t34 # default move => [t0=>rbp,t15=>r15,t31=>t31,t32=>t32,t33=>t33,t34=>t34]
movq %t15, %t35 # default move => [t0=>rbp,t31=>t31,t32=>t32,t33=>t33,t34=>t34,t35=>t35]
movq $10, %t37 # const => [t0=>rbp,t31=>t31,t32=>t32,t33=>t33,t34=>t34,t35=>t35,t37=>t37]
movq %t37, %t6 # move arg 1 to temp => [t0=>rbp,t6=>rsi,t31=>t31,t32=>t32,t33=>t33,t34=>t34,t35=>t35,t37=>t37]
movq %t0, %t7 # move arg 0 to temp => [t0=>rbp,t6=>rsi,t7=>rdi,t31=>t31,t32=>t32,t33=>t33,t34=>t34,t35=>t35,t37=>t37]
call L0 # default call => [t2=>rax,t31=>t31,t32=>t32,t33=>t33,t34=>t34,t35=>t35]
movq %t2, %t36 # default move => [t31=>t31,t32=>t32,t33=>t33,t34=>t34,t35=>t35,t36=>t36]
movq %t36, %t7 # move arg 0 to temp => [t7=>rdi,t31=>t31,t32=>t32,t33=>t33,t34=>t34,t35=>t35,t36=>t36]
call printi # exp call ( no return value ) => [t31=>t31,t32=>t32,t33=>t33,t34=>t34,t35=>t35]
movq %t35, %t15 # default move => [t15=>r15,t31=>t31,t32=>t32,t33=>t33,t34=>t34]
movq %t34, %t14 # default move => [t14=>r14,t15=>r15,t31=>t31,t32=>t32,t33=>t33]
movq %t33, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t31=>t31,t32=>t32]
movq %t32, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t31=>t31]
movq %t31, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L3 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L3: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                  t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36 t37 rc def
L4:                                        |        |                             |   |   |   |                                                                                          6 null
movq %t3, %t31 # default move              |                                      |   |   |   |                                                               |                          6 [t31=>t31]
movq %t12, %t32 # default move             |                                          |   |   |                                                               |   |                      6 [t32=>t32]
movq %t13, %t33 # default move             |                                              |   |                                                               |   |   |                  6 [t33=>t33]
movq %t14, %t34 # default move             |                                                  |                                                               |   |   |   |              6 [t34=>t34]
movq %t15, %t35 # default move             |                                                                                                                  |   |   |   |   |          6 [t35=>t35]
movq $10, %t37 # const                     |                                                                                                                  |   |   |   |   |       |  7 [t37=>t37]
movq %t37, %t6 # move arg 1 to temp        |                 |                                                                                                |   |   |   |   |       |  8 [t6=>rsi]
movq %t0, %t7 # move arg 0 to temp         |                 |  |                                                                                             |   |   |   |   |       |  9 [t7=>rdi]
call L0 # default call                           |                                                                                                            |   |   |   |   |          6 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t2, %t36 # default move                                                                                                                                 |   |   |   |   |   |      6 [t36=>t36]
movq %t36, %t7 # move arg 0 to temp                             |                                                                                             |   |   |   |   |   |      7 [t7=>rdi]
call printi # exp call ( no return value )                                                                                                                    |   |   |   |   |          5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t35, %t15 # default move                                                                |                                                               |   |   |   |              5 [t15=>r15]
movq %t34, %t14 # default move                                                            |   |                                                               |   |   |                  5 [t14=>r14]
movq %t33, %t13 # default move                                                        |   |   |                                                               |   |                      5 [t13=>r13]
movq %t32, %t12 # default move                                                    |   |   |   |                                                               |                          5 [t12=>r12]
movq %t31, %t3 # default move                       |                             |   |   |   |                                                                                          5 [t3=>rbx]
jmp L3                                              |                             |   |   |   |                                                                                          5 null
L3:                                                 |                             |   |   |   |                                                                                          5 null
# sink                                                                                                                                                                                   0 null
0: t26 interferes with:t15 t14 t13 t12 t0 
1: t0 interferes with:
2: t12 interferes with:t26 t15 t14 t13 
3: t13 interferes with:t27 t26 t15 t14 
4: t14 interferes with:t28 t27 t26 t15 
5: t15 interferes with:t29 t28 t27 t26 
6: t27 interferes with:t26 t15 t14 t13 t0 
7: t28 interferes with:t27 t26 t15 t14 t0 
8: t29 interferes with:t28 t27 t26 t15 t0 
9: t30 interferes with:t29 t28 t27 t26 t0 
10: t7 interferes with:t2 t30 t29 t28 t27 t26 
11: t2 interferes with:t30 t29 t28 t27 t26 
12: t4 interferes with:t30 t29 t28 t27 t26 t2 
13: t5 interferes with:t30 t29 t28 t27 t26 t2 
14: t6 interferes with:t30 t29 t28 t27 t26 t2 
15: t8 interferes with:t30 t29 t28 t27 t26 t2 
16: t9 interferes with:t30 t29 t28 t27 t26 t2 
17: t10 interferes with:t30 t29 t28 t27 t26 t2 
18: t11 interferes with:t30 t29 t28 t27 t26 t2 
19: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L6: : def => null, use => null
movq %t7, -8(%t0) # store to offset : def => null, use => [t7=>rdi,t0=>rbp]
movq %t6, -16(%t0) # store to offset : def => null, use => [t6=>rsi,t0=>rbp]
movq %t3, %t26 # default move : def => [t26=>t26], use => [t3=>rbx]
movq %t12, %t27 # default move : def => [t27=>t27], use => [t12=>r12]
movq %t13, %t28 # default move : def => [t28=>t28], use => [t13=>r13]
movq %t14, %t29 # default move : def => [t29=>t29], use => [t14=>r14]
movq %t15, %t30 # default move : def => [t30=>t30], use => [t15=>r15]
movq %t0, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t0=>rbp]
call L1 # default call : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t0=>rbp,t7=>rdi]
movq %t2, %t2 # default move : def => [t2=>rax], use => [t2=>rax]
movq %t30, %t15 # default move : def => [t15=>r15], use => [t30=>t30]
movq %t29, %t14 # default move : def => [t14=>r14], use => [t29=>t29]
movq %t28, %t13 # default move : def => [t13=>r13], use => [t28=>t28]
movq %t27, %t12 # default move : def => [t12=>r12], use => [t27=>t27]
movq %t26, %t3 # default move : def => [t3=>rbx], use => [t26=>t26]
jmp L5 : def => null, use => null
L5: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L6: => [t0=>rbp,t3=>rbx,t6=>rsi,t7=>rdi,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t7, -8(%t0) # store to offset => [t0=>rbp,t3=>rbx,t6=>rsi,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t6, -16(%t0) # store to offset => [t0=>rbp,t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t26 # default move => [t0=>rbp,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t26=>t26]
movq %t12, %t27 # default move => [t0=>rbp,t13=>r13,t14=>r14,t15=>r15,t26=>t26,t27=>t27]
movq %t13, %t28 # default move => [t0=>rbp,t14=>r14,t15=>r15,t26=>t26,t27=>t27,t28=>t28]
movq %t14, %t29 # default move => [t0=>rbp,t15=>r15,t26=>t26,t27=>t27,t28=>t28,t29=>t29]
movq %t15, %t30 # default move => [t0=>rbp,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30]
movq %t0, %t7 # move arg 0 to temp => [t0=>rbp,t7=>rdi,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30]
call L1 # default call => [t2=>rax,t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30]
movq %t2, %t2 # default move => [t26=>t26,t27=>t27,t28=>t28,t29=>t29,t30=>t30]
movq %t30, %t15 # default move => [t15=>r15,t26=>t26,t27=>t27,t28=>t28,t29=>t29]
movq %t29, %t14 # default move => [t14=>r14,t15=>r15,t26=>t26,t27=>t27,t28=>t28]
movq %t28, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t26=>t26,t27=>t27]
movq %t27, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t26=>t26]
movq %t26, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L5 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L5: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                            t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36 t37 rc def
L6:                                  |        |        |  |                 |   |   |   |                                                                                          8 null
movq %t7, -8(%t0) # store to offset  |        |        |                    |   |   |   |                                                                                          7 null
movq %t6, -16(%t0) # store to offset |        |                             |   |   |   |                                                                                          6 null
movq %t3, %t26 # default move        |                                      |   |   |   |                                           |                                              6 [t26=>t26]
movq %t12, %t27 # default move       |                                          |   |   |                                           |   |                                          6 [t27=>t27]
movq %t13, %t28 # default move       |                                              |   |                                           |   |   |                                      6 [t28=>t28]
movq %t14, %t29 # default move       |                                                  |                                           |   |   |   |                                  6 [t29=>t29]
movq %t15, %t30 # default move       |                                                                                              |   |   |   |   |                              6 [t30=>t30]
movq %t0, %t7 # move arg 0 to temp   |                    |                                                                         |   |   |   |   |                              7 [t7=>rdi]
call L1 # default call                     |                                                                                        |   |   |   |   |                              6 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t2, %t2 # default move                                                                                                        |   |   |   |   |                              5 [t2=>rax]
movq %t30, %t15 # default move                                                          |                                           |   |   |   |                                  5 [t15=>r15]
movq %t29, %t14 # default move                                                      |   |                                           |   |   |                                      5 [t14=>r14]
movq %t28, %t13 # default move                                                  |   |   |                                           |   |                                          5 [t13=>r13]
movq %t27, %t12 # default move                                              |   |   |   |                                           |                                              5 [t12=>r12]
movq %t26, %t3 # default move                 |                             |   |   |   |                                                                                          5 [t3=>rbx]
jmp L5                                        |                             |   |   |   |                                                                                          5 null
L5:                                           |                             |   |   |   |                                                                                          5 null
# sink                                                                                                                                                                             0 null
0: t21 interferes with:t15 t14 t13 t12 t0 
1: t0 interferes with:
2: t12 interferes with:t21 t15 t14 t13 
3: t13 interferes with:t22 t21 t15 t14 
4: t14 interferes with:t23 t22 t21 t15 
5: t15 interferes with:t24 t23 t22 t21 
6: t22 interferes with:t21 t15 t14 t13 t0 
7: t23 interferes with:t22 t21 t15 t14 t0 
8: t24 interferes with:t23 t22 t21 t15 t0 
9: t25 interferes with:t24 t23 t22 t21 t0 
10: t7 interferes with:t2 t25 t24 t23 t22 t21 
11: t2 interferes with:t25 t24 t23 t22 t21 
12: t4 interferes with:t25 t24 t23 t22 t21 t2 
13: t5 interferes with:t25 t24 t23 t22 t21 t2 
14: t6 interferes with:t25 t24 t23 t22 t21 t2 
15: t8 interferes with:t25 t24 t23 t22 t21 t2 
16: t9 interferes with:t25 t24 t23 t22 t21 t2 
17: t10 interferes with:t25 t24 t23 t22 t21 t2 
18: t11 interferes with:t25 t24 t23 t22 t21 t2 
19: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L8: : def => null, use => null
movq %t7, -8(%t0) # store to offset : def => null, use => [t7=>rdi,t0=>rbp]
movq %t3, %t21 # default move : def => [t21=>t21], use => [t3=>rbx]
movq %t12, %t22 # default move : def => [t22=>t22], use => [t12=>r12]
movq %t13, %t23 # default move : def => [t23=>t23], use => [t13=>r13]
movq %t14, %t24 # default move : def => [t24=>t24], use => [t14=>r14]
movq %t15, %t25 # default move : def => [t25=>t25], use => [t15=>r15]
movq %t0, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t0=>rbp]
call L2 # default call : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t0=>rbp,t7=>rdi]
movq %t2, %t2 # default move : def => [t2=>rax], use => [t2=>rax]
movq %t25, %t15 # default move : def => [t15=>r15], use => [t25=>t25]
movq %t24, %t14 # default move : def => [t14=>r14], use => [t24=>t24]
movq %t23, %t13 # default move : def => [t13=>r13], use => [t23=>t23]
movq %t22, %t12 # default move : def => [t12=>r12], use => [t22=>t22]
movq %t21, %t3 # default move : def => [t3=>rbx], use => [t21=>t21]
jmp L7 : def => null, use => null
L7: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L8: => [t0=>rbp,t3=>rbx,t7=>rdi,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t7, -8(%t0) # store to offset => [t0=>rbp,t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t21 # default move => [t0=>rbp,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t21=>t21]
movq %t12, %t22 # default move => [t0=>rbp,t13=>r13,t14=>r14,t15=>r15,t21=>t21,t22=>t22]
movq %t13, %t23 # default move => [t0=>rbp,t14=>r14,t15=>r15,t21=>t21,t22=>t22,t23=>t23]
movq %t14, %t24 # default move => [t0=>rbp,t15=>r15,t21=>t21,t22=>t22,t23=>t23,t24=>t24]
movq %t15, %t25 # default move => [t0=>rbp,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25]
movq %t0, %t7 # move arg 0 to temp => [t0=>rbp,t7=>rdi,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25]
call L2 # default call => [t2=>rax,t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25]
movq %t2, %t2 # default move => [t21=>t21,t22=>t22,t23=>t23,t24=>t24,t25=>t25]
movq %t25, %t15 # default move => [t15=>r15,t21=>t21,t22=>t22,t23=>t23,t24=>t24]
movq %t24, %t14 # default move => [t14=>r14,t15=>r15,t21=>t21,t22=>t22,t23=>t23]
movq %t23, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t21=>t21,t22=>t22]
movq %t22, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t21=>t21]
movq %t21, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L7 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L7: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                           t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36 t37 rc def
L8:                                 |        |           |                 |   |   |   |                                                                                          7 null
movq %t7, -8(%t0) # store to offset |        |                             |   |   |   |                                                                                          6 null
movq %t3, %t21 # default move       |                                      |   |   |   |                       |                                                                  6 [t21=>t21]
movq %t12, %t22 # default move      |                                          |   |   |                       |   |                                                              6 [t22=>t22]
movq %t13, %t23 # default move      |                                              |   |                       |   |   |                                                          6 [t23=>t23]
movq %t14, %t24 # default move      |                                                  |                       |   |   |   |                                                      6 [t24=>t24]
movq %t15, %t25 # default move      |                                                                          |   |   |   |   |                                                  6 [t25=>t25]
movq %t0, %t7 # move arg 0 to temp  |                    |                                                     |   |   |   |   |                                                  7 [t7=>rdi]
call L2 # default call                    |                                                                    |   |   |   |   |                                                  6 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t2, %t2 # default move                                                                                   |   |   |   |   |                                                  5 [t2=>rax]
movq %t25, %t15 # default move                                                         |                       |   |   |   |                                                      5 [t15=>r15]
movq %t24, %t14 # default move                                                     |   |                       |   |   |                                                          5 [t14=>r14]
movq %t23, %t13 # default move                                                 |   |   |                       |   |                                                              5 [t13=>r13]
movq %t22, %t12 # default move                                             |   |   |   |                       |                                                                  5 [t12=>r12]
movq %t21, %t3 # default move                |                             |   |   |   |                                                                                          5 [t3=>rbx]
jmp L7                                       |                             |   |   |   |                                                                                          5 null
L7:                                          |                             |   |   |   |                                                                                          5 null
# sink                                                                                                                                                                            0 null
0: t16 interferes with:t15 t14 t13 t12 t5 t0 
1: t0 interferes with:
2: t5 interferes with:t55 t20 t19 t18 t17 t16 t2 
3: t12 interferes with:t16 t15 t14 t13 
4: t13 interferes with:t17 t16 t15 t14 
5: t14 interferes with:t18 t17 t16 t15 
6: t15 interferes with:t19 t18 t17 t16 
7: t17 interferes with:t16 t15 t14 t13 t5 t0 
8: t18 interferes with:t17 t16 t15 t14 t5 t0 
9: t19 interferes with:t18 t17 t16 t15 t5 t0 
10: t20 interferes with:t19 t18 t17 t16 t5 t0 
11: t38 interferes with:t20 t19 t18 t17 t16 t5 t0 
12: t39 interferes with:t38 t20 t19 t18 t17 t16 t5 t0 
13: t40 interferes with:t38 t20 t19 t18 t17 t16 t5 t0 
14: t41 interferes with:t38 t20 t19 t18 t17 t16 t5 t0 
15: t42 interferes with:t41 t20 t19 t18 t17 t16 t5 t0 
16: t43 interferes with:t20 t19 t18 t17 t16 t5 t0 
17: t44 interferes with:t43 t20 t19 t18 t17 t16 t5 t0 
18: t45 interferes with:t44 t20 t19 t18 t17 t16 t5 t0 
19: t46 interferes with:t20 t19 t18 t17 t16 t5 t0 
20: t47 interferes with:t46 t20 t19 t18 t17 t16 t5 t0 
21: t48 interferes with:t47 t46 t20 t19 t18 t17 t16 t5 t0 
22: t49 interferes with:t47 t46 t20 t19 t18 t17 t16 t5 t0 
23: t50 interferes with:t47 t46 t20 t19 t18 t17 t16 t5 
24: t51 interferes with:t50 t46 t20 t19 t18 t17 t16 t5 
25: t52 interferes with:t46 t20 t19 t18 t17 t16 t5 
26: t53 interferes with:t52 t46 t20 t19 t18 t17 t16 t5 
27: t54 interferes with:t53 t46 t20 t19 t18 t17 t16 t5 
28: t55 interferes with:t46 t20 t19 t18 t17 t16 t5 
29: t56 interferes with:t55 t20 t19 t18 t17 t16 t5 
30: t2 interferes with:t55 t20 t19 t18 t17 t16 t5 
31: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L10: : def => null, use => null
movq %t7, -8(%t0) # store to offset : def => null, use => [t7=>rdi,t0=>rbp]
movq %t3, %t16 # default move : def => [t16=>t16], use => [t3=>rbx]
movq %t12, %t17 # default move : def => [t17=>t17], use => [t12=>r12]
movq %t13, %t18 # default move : def => [t18=>t18], use => [t13=>r13]
movq %t14, %t19 # default move : def => [t19=>t19], use => [t14=>r14]
movq %t15, %t20 # default move : def => [t20=>t20], use => [t15=>r15]
movq $-8, %t38 # const : def => [t38=>t38], use => null
movq $-8, %t39 # const : def => [t39=>t39], use => null
movq %t39, %t40 # add lexp -> r : def => [t40=>t40], use => [t39=>t39]
add %t0, %t40 : def => [t40=>t40], use => [t0=>rbp,t40=>t40]
movq (%t40), %t41 # default load : def => [t41=>t41], use => [t40=>t40]
movq %t38, %t42 # add lexp -> r : def => [t42=>t42], use => [t38=>t38]
add %t41, %t42 : def => [t42=>t42], use => [t41=>t41,t42=>t42]
movq (%t42), %t43 # default load : def => [t43=>t43], use => [t42=>t42]
movq $-16, %t44 # const : def => [t44=>t44], use => null
movq %t43, %t45 # add lexp -> r : def => [t45=>t45], use => [t43=>t43]
add %t44, %t45 : def => [t45=>t45], use => [t44=>t44,t45=>t45]
movq (%t45), %t46 # default load : def => [t46=>t46], use => [t45=>t45]
movq $-8, %t47 # const : def => [t47=>t47], use => null
movq $-8, %t48 # const : def => [t48=>t48], use => null
movq %t48, %t49 # add lexp -> r : def => [t49=>t49], use => [t48=>t48]
add %t0, %t49 : def => [t49=>t49], use => [t0=>rbp,t49=>t49]
movq (%t49), %t50 # default load : def => [t50=>t50], use => [t49=>t49]
movq %t47, %t51 # add lexp -> r : def => [t51=>t51], use => [t47=>t47]
add %t50, %t51 : def => [t51=>t51], use => [t50=>t50,t51=>t51]
movq (%t51), %t52 # default load : def => [t52=>t52], use => [t51=>t51]
movq $-16, %t53 # const : def => [t53=>t53], use => null
movq %t52, %t54 # add lexp -> r : def => [t54=>t54], use => [t52=>t52]
add %t53, %t54 : def => [t54=>t54], use => [t53=>t53,t54=>t54]
movq (%t54), %t55 # default load : def => [t55=>t55], use => [t54=>t54]
movq %t46, %t56 # div lexp -> r : def => [t56=>t56], use => [t46=>t46]
movq %t56, %t2 # div r -> rax : def => [t2=>rax], use => [t56=>t56]
xor %t5, %t5 # div clear bits rdx  : def => [t5=>rdx], use => [t5=>rdx]
idiv %t2 # div rax * rexp  : def => [t2=>rax,t5=>rdx], use => [t2=>rax,t55=>t55]
movq %t2, %t56 # div rax -> r : def => [t56=>t56], use => [t2=>rax]
movq %t56, %t2 # default move : def => [t2=>rax], use => [t56=>t56]
movq %t20, %t15 # default move : def => [t15=>r15], use => [t20=>t20]
movq %t19, %t14 # default move : def => [t14=>r14], use => [t19=>t19]
movq %t18, %t13 # default move : def => [t13=>r13], use => [t18=>t18]
movq %t17, %t12 # default move : def => [t12=>r12], use => [t17=>t17]
movq %t16, %t3 # default move : def => [t3=>rbx], use => [t16=>t16]
jmp L9 : def => null, use => null
L9: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L10: => [t0=>rbp,t3=>rbx,t5=>rdx,t7=>rdi,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t7, -8(%t0) # store to offset => [t0=>rbp,t3=>rbx,t5=>rdx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t16 # default move => [t0=>rbp,t5=>rdx,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16]
movq %t12, %t17 # default move => [t0=>rbp,t5=>rdx,t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17]
movq %t13, %t18 # default move => [t0=>rbp,t5=>rdx,t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18]
movq %t14, %t19 # default move => [t0=>rbp,t5=>rdx,t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19]
movq %t15, %t20 # default move => [t0=>rbp,t5=>rdx,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
movq $-8, %t38 # const => [t0=>rbp,t5=>rdx,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t38=>t38]
movq $-8, %t39 # const => [t0=>rbp,t5=>rdx,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t38=>t38,t39=>t39]
movq %t39, %t40 # add lexp -> r => [t0=>rbp,t5=>rdx,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t38=>t38,t40=>t40]
add %t0, %t40 => [t0=>rbp,t5=>rdx,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t38=>t38,t40=>t40]
movq (%t40), %t41 # default load => [t0=>rbp,t5=>rdx,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t38=>t38,t41=>t41]
movq %t38, %t42 # add lexp -> r => [t0=>rbp,t5=>rdx,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t41=>t41,t42=>t42]
add %t41, %t42 => [t0=>rbp,t5=>rdx,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t42=>t42]
movq (%t42), %t43 # default load => [t0=>rbp,t5=>rdx,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t43=>t43]
movq $-16, %t44 # const => [t0=>rbp,t5=>rdx,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t43=>t43,t44=>t44]
movq %t43, %t45 # add lexp -> r => [t0=>rbp,t5=>rdx,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t44=>t44,t45=>t45]
add %t44, %t45 => [t0=>rbp,t5=>rdx,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t45=>t45]
movq (%t45), %t46 # default load => [t0=>rbp,t5=>rdx,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t46=>t46]
movq $-8, %t47 # const => [t0=>rbp,t5=>rdx,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t46=>t46,t47=>t47]
movq $-8, %t48 # const => [t0=>rbp,t5=>rdx,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t46=>t46,t47=>t47,t48=>t48]
movq %t48, %t49 # add lexp -> r => [t0=>rbp,t5=>rdx,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t46=>t46,t47=>t47,t49=>t49]
add %t0, %t49 => [t5=>rdx,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t46=>t46,t47=>t47,t49=>t49]
movq (%t49), %t50 # default load => [t5=>rdx,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t46=>t46,t47=>t47,t50=>t50]
movq %t47, %t51 # add lexp -> r => [t5=>rdx,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t46=>t46,t50=>t50,t51=>t51]
add %t50, %t51 => [t5=>rdx,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t46=>t46,t51=>t51]
movq (%t51), %t52 # default load => [t5=>rdx,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t46=>t46,t52=>t52]
movq $-16, %t53 # const => [t5=>rdx,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t46=>t46,t52=>t52,t53=>t53]
movq %t52, %t54 # add lexp -> r => [t5=>rdx,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t46=>t46,t53=>t53,t54=>t54]
add %t53, %t54 => [t5=>rdx,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t46=>t46,t54=>t54]
movq (%t54), %t55 # default load => [t5=>rdx,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t46=>t46,t55=>t55]
movq %t46, %t56 # div lexp -> r => [t5=>rdx,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t55=>t55,t56=>t56]
movq %t56, %t2 # div r -> rax => [t2=>rax,t5=>rdx,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t55=>t55]
xor %t5, %t5 # div clear bits rdx  => [t2=>rax,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t55=>t55]
idiv %t2 # div rax * rexp  => [t2=>rax,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
movq %t2, %t56 # div rax -> r => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t56=>t56]
movq %t56, %t2 # default move => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
movq %t20, %t15 # default move => [t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19]
movq %t19, %t14 # default move => [t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18]
movq %t18, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17]
movq %t17, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16]
movq %t16, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L9 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L9: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                           t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36 t37 t38 t39 t40 t41 t42 t43 t44 t45 t46 t47 t48 t49 t50 t51 t52 t53 t54 t55 t56 rc def
L10:                                |        |     |     |                 |   |   |   |                                                                                                                                                                      8 null
movq %t7, -8(%t0) # store to offset |        |     |                       |   |   |   |                                                                                                                                                                      7 null
movq %t3, %t16 # default move       |              |                       |   |   |   |   |                                                                                                                                                                  7 [t16=>t16]
movq %t12, %t17 # default move      |              |                           |   |   |   |   |                                                                                                                                                              7 [t17=>t17]
movq %t13, %t18 # default move      |              |                               |   |   |   |   |                                                                                                                                                          7 [t18=>t18]
movq %t14, %t19 # default move      |              |                                   |   |   |   |   |                                                                                                                                                      7 [t19=>t19]
movq %t15, %t20 # default move      |              |                                       |   |   |   |   |                                                                                                                                                  7 [t20=>t20]
movq $-8, %t38 # const              |              |                                       |   |   |   |   |                                                                       |                                                                          8 [t38=>t38]
movq $-8, %t39 # const              |              |                                       |   |   |   |   |                                                                       |   |                                                                      9 [t39=>t39]
movq %t39, %t40 # add lexp -> r     |              |                                       |   |   |   |   |                                                                       |       |                                                                  9 [t40=>t40]
add %t0, %t40                       |              |                                       |   |   |   |   |                                                                       |       |                                                                  9 [t40=>t40]
movq (%t40), %t41 # default load    |              |                                       |   |   |   |   |                                                                       |           |                                                              9 [t41=>t41]
movq %t38, %t42 # add lexp -> r     |              |                                       |   |   |   |   |                                                                                   |   |                                                          9 [t42=>t42]
add %t41, %t42                      |              |                                       |   |   |   |   |                                                                                       |                                                          8 [t42=>t42]
movq (%t42), %t43 # default load    |              |                                       |   |   |   |   |                                                                                           |                                                      8 [t43=>t43]
movq $-16, %t44 # const             |              |                                       |   |   |   |   |                                                                                           |   |                                                  9 [t44=>t44]
movq %t43, %t45 # add lexp -> r     |              |                                       |   |   |   |   |                                                                                               |   |                                              9 [t45=>t45]
add %t44, %t45                      |              |                                       |   |   |   |   |                                                                                                   |                                              8 [t45=>t45]
movq (%t45), %t46 # default load    |              |                                       |   |   |   |   |                                                                                                       |                                          8 [t46=>t46]
movq $-8, %t47 # const              |              |                                       |   |   |   |   |                                                                                                       |   |                                      9 [t47=>t47]
movq $-8, %t48 # const              |              |                                       |   |   |   |   |                                                                                                       |   |   |                                  10 [t48=>t48]
movq %t48, %t49 # add lexp -> r     |              |                                       |   |   |   |   |                                                                                                       |   |       |                              10 [t49=>t49]
add %t0, %t49                                      |                                       |   |   |   |   |                                                                                                       |   |       |                              9 [t49=>t49]
movq (%t49), %t50 # default load                   |                                       |   |   |   |   |                                                                                                       |   |           |                          9 [t50=>t50]
movq %t47, %t51 # add lexp -> r                    |                                       |   |   |   |   |                                                                                                       |               |   |                      9 [t51=>t51]
add %t50, %t51                                     |                                       |   |   |   |   |                                                                                                       |                   |                      8 [t51=>t51]
movq (%t51), %t52 # default load                   |                                       |   |   |   |   |                                                                                                       |                       |                  8 [t52=>t52]
movq $-16, %t53 # const                            |                                       |   |   |   |   |                                                                                                       |                       |   |              9 [t53=>t53]
movq %t52, %t54 # add lexp -> r                    |                                       |   |   |   |   |                                                                                                       |                           |   |          9 [t54=>t54]
add %t53, %t54                                     |                                       |   |   |   |   |                                                                                                       |                               |          8 [t54=>t54]
movq (%t54), %t55 # default load                   |                                       |   |   |   |   |                                                                                                       |                                   |      8 [t55=>t55]
movq %t46, %t56 # div lexp -> r                    |                                       |   |   |   |   |                                                                                                                                           |   |  8 [t56=>t56]
movq %t56, %t2 # div r -> rax             |        |                                       |   |   |   |   |                                                                                                                                           |      8 [t2=>rax]
xor %t5, %t5 # div clear bits rdx         |                                                |   |   |   |   |                                                                                                                                           |      7 [t5=>rdx]
idiv %t2 # div rax * rexp                 |                                                |   |   |   |   |                                                                                                                                                  6 [t2=>rax,t5=>rdx]
movq %t2, %t56 # div rax -> r                                                              |   |   |   |   |                                                                                                                                               |  6 [t56=>t56]
movq %t56, %t2 # default move                                                              |   |   |   |   |                                                                                                                                                  5 [t2=>rax]
movq %t20, %t15 # default move                                                         |   |   |   |   |                                                                                                                                                      5 [t15=>r15]
movq %t19, %t14 # default move                                                     |   |   |   |   |                                                                                                                                                          5 [t14=>r14]
movq %t18, %t13 # default move                                                 |   |   |   |   |                                                                                                                                                              5 [t13=>r13]
movq %t17, %t12 # default move                                             |   |   |   |   |                                                                                                                                                                  5 [t12=>r12]
movq %t16, %t3 # default move                |                             |   |   |   |                                                                                                                                                                      5 [t3=>rbx]
jmp L9                                       |                             |   |   |   |                                                                                                                                                                      5 null
L9:                                          |                             |   |   |   |                                                                                                                                                                      5 null
# sink                                                                                                                                                                                                                                                        0 null
[92mTest Result: ./tests/nested_function_two.tig passed.[0m
0: t18 interferes with:t15 t14 t13 t12 t5 
1: t5 interferes with:t22 t21 t20 t19 t18 t17 t2 
2: t12 interferes with:t18 t15 t14 t13 
3: t13 interferes with:t19 t18 t15 t14 
4: t14 interferes with:t20 t19 t18 t15 
5: t15 interferes with:t21 t20 t19 t18 
6: t19 interferes with:t18 t15 t14 t13 t5 
7: t20 interferes with:t19 t18 t15 t14 t5 
8: t21 interferes with:t20 t19 t18 t15 t5 
9: t22 interferes with:t21 t20 t19 t18 t5 
10: t23 interferes with:t22 t21 t20 t19 t18 t5 
11: t16 interferes with:t22 t21 t20 t19 t18 t5 
12: t24 interferes with:t22 t21 t20 t19 t18 t16 t5 
13: t17 interferes with:t22 t21 t20 t19 t18 t16 t5 
14: t25 interferes with:t22 t21 t20 t19 t18 t17 t5 
15: t2 interferes with:t22 t21 t20 t19 t18 t17 t5 
16: t7 interferes with:t22 t21 t20 t19 t18 
17: t4 interferes with:t22 t21 t20 t19 t18 
18: t6 interferes with:t22 t21 t20 t19 t18 
19: t8 interferes with:t22 t21 t20 t19 t18 
20: t9 interferes with:t22 t21 t20 t19 t18 
21: t10 interferes with:t22 t21 t20 t19 t18 
22: t11 interferes with:t22 t21 t20 t19 t18 
23: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L1: : def => null, use => null
movq %t3, %t18 # default move : def => [t18=>t18], use => [t3=>rbx]
movq %t12, %t19 # default move : def => [t19=>t19], use => [t12=>r12]
movq %t13, %t20 # default move : def => [t20=>t20], use => [t13=>r13]
movq %t14, %t21 # default move : def => [t21=>t21], use => [t14=>r14]
movq %t15, %t22 # default move : def => [t22=>t22], use => [t15=>r15]
movq $8, %t23 # const : def => [t23=>t23], use => null
movq %t23, %t16 # default move : def => [t16=>t16], use => [t23=>t23]
movq $2, %t24 # const : def => [t24=>t24], use => null
movq %t24, %t17 # default move : def => [t17=>t17], use => [t24=>t24]
movq %t16, %t25 # div lexp -> r : def => [t25=>t25], use => [t16=>t16]
movq %t25, %t2 # div r -> rax : def => [t2=>rax], use => [t25=>t25]
xor %t5, %t5 # div clear bits rdx  : def => [t5=>rdx], use => [t5=>rdx]
idiv %t2 # div rax * rexp  : def => [t2=>rax,t5=>rdx], use => [t2=>rax,t17=>t17]
movq %t2, %t25 # div rax -> r : def => [t25=>t25], use => [t2=>rax]
movq %t25, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t25=>t25]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t25=>t25,t7=>rdi]
movq %t22, %t15 # default move : def => [t15=>r15], use => [t22=>t22]
movq %t21, %t14 # default move : def => [t14=>r14], use => [t21=>t21]
movq %t20, %t13 # default move : def => [t13=>r13], use => [t20=>t20]
movq %t19, %t12 # default move : def => [t12=>r12], use => [t19=>t19]
movq %t18, %t3 # default move : def => [t3=>rbx], use => [t18=>t18]
jmp L0 : def => null, use => null
L0: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L1: => [t3=>rbx,t5=>rdx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t18 # default move => [t5=>rdx,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t18=>t18]
movq %t12, %t19 # default move => [t5=>rdx,t13=>r13,t14=>r14,t15=>r15,t18=>t18,t19=>t19]
movq %t13, %t20 # default move => [t5=>rdx,t14=>r14,t15=>r15,t18=>t18,t19=>t19,t20=>t20]
movq %t14, %t21 # default move => [t5=>rdx,t15=>r15,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t15, %t22 # default move => [t5=>rdx,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $8, %t23 # const => [t5=>rdx,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23]
movq %t23, %t16 # default move => [t5=>rdx,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $2, %t24 # const => [t5=>rdx,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t24=>t24]
movq %t24, %t17 # default move => [t5=>rdx,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t16, %t25 # div lexp -> r => [t5=>rdx,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t25=>t25]
movq %t25, %t2 # div r -> rax => [t2=>rax,t5=>rdx,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
xor %t5, %t5 # div clear bits rdx  => [t2=>rax,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
idiv %t2 # div rax * rexp  => [t2=>rax,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t2, %t25 # div rax -> r => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t25=>t25]
movq %t25, %t7 # move arg 0 to temp => [t7=>rdi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t25=>t25]
call printi # exp call ( no return value ) => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t22, %t15 # default move => [t15=>r15,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t21, %t14 # default move => [t14=>r14,t15=>r15,t18=>t18,t19=>t19,t20=>t20]
movq %t20, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t18=>t18,t19=>t19]
movq %t19, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t18=>t18]
movq %t18, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L0 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L0: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                  t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 rc def
L1:                                                 |     |                       |   |   |   |                                          6 null
movq %t3, %t18 # default move                             |                       |   |   |   |           |                              6 [t18=>t18]
movq %t12, %t19 # default move                            |                           |   |   |           |   |                          6 [t19=>t19]
movq %t13, %t20 # default move                            |                               |   |           |   |   |                      6 [t20=>t20]
movq %t14, %t21 # default move                            |                                   |           |   |   |   |                  6 [t21=>t21]
movq %t15, %t22 # default move                            |                                               |   |   |   |   |              6 [t22=>t22]
movq $8, %t23 # const                                     |                                               |   |   |   |   |   |          7 [t23=>t23]
movq %t23, %t16 # default move                            |                                       |       |   |   |   |   |              7 [t16=>t16]
movq $2, %t24 # const                                     |                                       |       |   |   |   |   |       |      8 [t24=>t24]
movq %t24, %t17 # default move                            |                                       |   |   |   |   |   |   |              8 [t17=>t17]
movq %t16, %t25 # div lexp -> r                           |                                           |   |   |   |   |   |           |  8 [t25=>t25]
movq %t25, %t2 # div r -> rax                    |        |                                           |   |   |   |   |   |              8 [t2=>rax]
xor %t5, %t5 # div clear bits rdx                |                                                    |   |   |   |   |   |              7 [t5=>rdx]
idiv %t2 # div rax * rexp                        |                                                        |   |   |   |   |              6 [t2=>rax,t5=>rdx]
movq %t2, %t25 # div rax -> r                                                                             |   |   |   |   |           |  6 [t25=>t25]
movq %t25, %t7 # move arg 0 to temp                             |                                         |   |   |   |   |           |  7 [t7=>rdi]
call printi # exp call ( no return value )                                                                |   |   |   |   |              5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t22, %t15 # default move                                                                |           |   |   |   |                  5 [t15=>r15]
movq %t21, %t14 # default move                                                            |   |           |   |   |                      5 [t14=>r14]
movq %t20, %t13 # default move                                                        |   |   |           |   |                          5 [t13=>r13]
movq %t19, %t12 # default move                                                    |   |   |   |           |                              5 [t12=>r12]
movq %t18, %t3 # default move                       |                             |   |   |   |                                          5 [t3=>rbx]
jmp L0                                              |                             |   |   |   |                                          5 null
L0:                                                 |                             |   |   |   |                                          5 null
# sink                                                                                                                                   0 null
[91mTest Result: ./tests/pdiv.tig failed.[0m
0: t18 interferes with:t15 t14 t13 t12 
1: t12 interferes with:t18 t15 t14 t13 
2: t13 interferes with:t19 t18 t15 t14 
3: t14 interferes with:t20 t19 t18 t15 
4: t15 interferes with:t21 t20 t19 t18 
5: t19 interferes with:t18 t15 t14 t13 
6: t20 interferes with:t19 t18 t15 t14 
7: t21 interferes with:t20 t19 t18 t15 
8: t22 interferes with:t21 t20 t19 t18 
9: t23 interferes with:t22 t21 t20 t19 t18 
10: t16 interferes with:t22 t21 t20 t19 t18 
11: t24 interferes with:t22 t21 t20 t19 t18 t16 
12: t17 interferes with:t22 t21 t20 t19 t18 t16 
13: t25 interferes with:t22 t21 t20 t19 t18 t17 
14: t7 interferes with:t22 t21 t20 t19 t18 
15: t2 interferes with:t22 t21 t20 t19 t18 
16: t4 interferes with:t22 t21 t20 t19 t18 
17: t5 interferes with:t22 t21 t20 t19 t18 
18: t6 interferes with:t22 t21 t20 t19 t18 
19: t8 interferes with:t22 t21 t20 t19 t18 
20: t9 interferes with:t22 t21 t20 t19 t18 
21: t10 interferes with:t22 t21 t20 t19 t18 
22: t11 interferes with:t22 t21 t20 t19 t18 
23: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L1: : def => null, use => null
movq %t3, %t18 # default move : def => [t18=>t18], use => [t3=>rbx]
movq %t12, %t19 # default move : def => [t19=>t19], use => [t12=>r12]
movq %t13, %t20 # default move : def => [t20=>t20], use => [t13=>r13]
movq %t14, %t21 # default move : def => [t21=>t21], use => [t14=>r14]
movq %t15, %t22 # default move : def => [t22=>t22], use => [t15=>r15]
movq $7, %t23 # const : def => [t23=>t23], use => null
movq %t23, %t16 # default move : def => [t16=>t16], use => [t23=>t23]
movq $4, %t24 # const : def => [t24=>t24], use => null
movq %t24, %t17 # default move : def => [t17=>t17], use => [t24=>t24]
movq %t16, %t25 # minus lexp -> r : def => [t25=>t25], use => [t16=>t16]
sub %t17, %t25 : def => [t25=>t25], use => [t17=>t17,t25=>t25]
movq %t25, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t25=>t25]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t25=>t25,t7=>rdi]
movq %t22, %t15 # default move : def => [t15=>r15], use => [t22=>t22]
movq %t21, %t14 # default move : def => [t14=>r14], use => [t21=>t21]
movq %t20, %t13 # default move : def => [t13=>r13], use => [t20=>t20]
movq %t19, %t12 # default move : def => [t12=>r12], use => [t19=>t19]
movq %t18, %t3 # default move : def => [t3=>rbx], use => [t18=>t18]
jmp L0 : def => null, use => null
L0: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L1: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t18 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t18=>t18]
movq %t12, %t19 # default move => [t13=>r13,t14=>r14,t15=>r15,t18=>t18,t19=>t19]
movq %t13, %t20 # default move => [t14=>r14,t15=>r15,t18=>t18,t19=>t19,t20=>t20]
movq %t14, %t21 # default move => [t15=>r15,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t15, %t22 # default move => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $7, %t23 # const => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23]
movq %t23, %t16 # default move => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $4, %t24 # const => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t24=>t24]
movq %t24, %t17 # default move => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t16, %t25 # minus lexp -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t25=>t25]
sub %t17, %t25 => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t25=>t25]
movq %t25, %t7 # move arg 0 to temp => [t7=>rdi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t25=>t25]
call printi # exp call ( no return value ) => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t22, %t15 # default move => [t15=>r15,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t21, %t14 # default move => [t14=>r14,t15=>r15,t18=>t18,t19=>t19,t20=>t20]
movq %t20, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t18=>t18,t19=>t19]
movq %t19, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t18=>t18]
movq %t18, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L0 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L0: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                  t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 rc def
L1:                                                 |                             |   |   |   |                                          5 null
movq %t3, %t18 # default move                                                     |   |   |   |           |                              5 [t18=>t18]
movq %t12, %t19 # default move                                                        |   |   |           |   |                          5 [t19=>t19]
movq %t13, %t20 # default move                                                            |   |           |   |   |                      5 [t20=>t20]
movq %t14, %t21 # default move                                                                |           |   |   |   |                  5 [t21=>t21]
movq %t15, %t22 # default move                                                                            |   |   |   |   |              5 [t22=>t22]
movq $7, %t23 # const                                                                                     |   |   |   |   |   |          6 [t23=>t23]
movq %t23, %t16 # default move                                                                    |       |   |   |   |   |              6 [t16=>t16]
movq $4, %t24 # const                                                                             |       |   |   |   |   |       |      7 [t24=>t24]
movq %t24, %t17 # default move                                                                    |   |   |   |   |   |   |              7 [t17=>t17]
movq %t16, %t25 # minus lexp -> r                                                                     |   |   |   |   |   |           |  7 [t25=>t25]
sub %t17, %t25                                                                                            |   |   |   |   |           |  6 [t25=>t25]
movq %t25, %t7 # move arg 0 to temp                             |                                         |   |   |   |   |           |  7 [t7=>rdi]
call printi # exp call ( no return value )                                                                |   |   |   |   |              5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t22, %t15 # default move                                                                |           |   |   |   |                  5 [t15=>r15]
movq %t21, %t14 # default move                                                            |   |           |   |   |                      5 [t14=>r14]
movq %t20, %t13 # default move                                                        |   |   |           |   |                          5 [t13=>r13]
movq %t19, %t12 # default move                                                    |   |   |   |           |                              5 [t12=>r12]
movq %t18, %t3 # default move                       |                             |   |   |   |                                          5 [t3=>rbx]
jmp L0                                              |                             |   |   |   |                                          5 null
L0:                                                 |                             |   |   |   |                                          5 null
# sink                                                                                                                                   0 null
[92mTest Result: ./tests/pminus.tig passed.[0m
0: t18 interferes with:t15 t14 t13 t12 
1: t12 interferes with:t18 t15 t14 t13 
2: t13 interferes with:t19 t18 t15 t14 
3: t14 interferes with:t20 t19 t18 t15 
4: t15 interferes with:t21 t20 t19 t18 
5: t19 interferes with:t18 t15 t14 t13 
6: t20 interferes with:t19 t18 t15 t14 
7: t21 interferes with:t20 t19 t18 t15 
8: t22 interferes with:t21 t20 t19 t18 
9: t23 interferes with:t22 t21 t20 t19 t18 
10: t16 interferes with:t22 t21 t20 t19 t18 
11: t24 interferes with:t22 t21 t20 t19 t18 t16 
12: t17 interferes with:t22 t21 t20 t19 t18 t16 
13: t25 interferes with:t22 t21 t20 t19 t18 t17 
14: t2 interferes with:t22 t21 t20 t19 t18 t17 
15: t5 interferes with:t22 t21 t20 t19 t18 t2 
16: t7 interferes with:t22 t21 t20 t19 t18 
17: t4 interferes with:t22 t21 t20 t19 t18 
18: t6 interferes with:t22 t21 t20 t19 t18 
19: t8 interferes with:t22 t21 t20 t19 t18 
20: t9 interferes with:t22 t21 t20 t19 t18 
21: t10 interferes with:t22 t21 t20 t19 t18 
22: t11 interferes with:t22 t21 t20 t19 t18 
23: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L1: : def => null, use => null
movq %t3, %t18 # default move : def => [t18=>t18], use => [t3=>rbx]
movq %t12, %t19 # default move : def => [t19=>t19], use => [t12=>r12]
movq %t13, %t20 # default move : def => [t20=>t20], use => [t13=>r13]
movq %t14, %t21 # default move : def => [t21=>t21], use => [t14=>r14]
movq %t15, %t22 # default move : def => [t22=>t22], use => [t15=>r15]
movq $3, %t23 # const : def => [t23=>t23], use => null
movq %t23, %t16 # default move : def => [t16=>t16], use => [t23=>t23]
movq $4, %t24 # const : def => [t24=>t24], use => null
movq %t24, %t17 # default move : def => [t17=>t17], use => [t24=>t24]
movq %t16, %t25 # mul lexp -> r : def => [t25=>t25], use => [t16=>t16]
movq %t25, %t2 # mul r -> rax : def => [t2=>rax], use => [t25=>t25]
imul %t2 # mul rax * rexp  : def => [t2=>rax,t5=>rdx], use => [t2=>rax,t17=>t17]
movq %t2, %t25 # mul rax -> r : def => [t25=>t25], use => [t2=>rax]
movq %t25, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t25=>t25]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t25=>t25,t7=>rdi]
movq %t22, %t15 # default move : def => [t15=>r15], use => [t22=>t22]
movq %t21, %t14 # default move : def => [t14=>r14], use => [t21=>t21]
movq %t20, %t13 # default move : def => [t13=>r13], use => [t20=>t20]
movq %t19, %t12 # default move : def => [t12=>r12], use => [t19=>t19]
movq %t18, %t3 # default move : def => [t3=>rbx], use => [t18=>t18]
jmp L0 : def => null, use => null
L0: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L1: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t18 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t18=>t18]
movq %t12, %t19 # default move => [t13=>r13,t14=>r14,t15=>r15,t18=>t18,t19=>t19]
movq %t13, %t20 # default move => [t14=>r14,t15=>r15,t18=>t18,t19=>t19,t20=>t20]
movq %t14, %t21 # default move => [t15=>r15,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t15, %t22 # default move => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $3, %t23 # const => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23]
movq %t23, %t16 # default move => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $4, %t24 # const => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t24=>t24]
movq %t24, %t17 # default move => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t16, %t25 # mul lexp -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t25=>t25]
movq %t25, %t2 # mul r -> rax => [t2=>rax,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
imul %t2 # mul rax * rexp  => [t2=>rax,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t2, %t25 # mul rax -> r => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t25=>t25]
movq %t25, %t7 # move arg 0 to temp => [t7=>rdi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t25=>t25]
call printi # exp call ( no return value ) => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t22, %t15 # default move => [t15=>r15,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t21, %t14 # default move => [t14=>r14,t15=>r15,t18=>t18,t19=>t19,t20=>t20]
movq %t20, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t18=>t18,t19=>t19]
movq %t19, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t18=>t18]
movq %t18, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L0 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L0: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                  t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 rc def
L1:                                                 |                             |   |   |   |                                          5 null
movq %t3, %t18 # default move                                                     |   |   |   |           |                              5 [t18=>t18]
movq %t12, %t19 # default move                                                        |   |   |           |   |                          5 [t19=>t19]
movq %t13, %t20 # default move                                                            |   |           |   |   |                      5 [t20=>t20]
movq %t14, %t21 # default move                                                                |           |   |   |   |                  5 [t21=>t21]
movq %t15, %t22 # default move                                                                            |   |   |   |   |              5 [t22=>t22]
movq $3, %t23 # const                                                                                     |   |   |   |   |   |          6 [t23=>t23]
movq %t23, %t16 # default move                                                                    |       |   |   |   |   |              6 [t16=>t16]
movq $4, %t24 # const                                                                             |       |   |   |   |   |       |      7 [t24=>t24]
movq %t24, %t17 # default move                                                                    |   |   |   |   |   |   |              7 [t17=>t17]
movq %t16, %t25 # mul lexp -> r                                                                       |   |   |   |   |   |           |  7 [t25=>t25]
movq %t25, %t2 # mul r -> rax                    |                                                    |   |   |   |   |   |              7 [t2=>rax]
imul %t2 # mul rax * rexp                        |                                                        |   |   |   |   |              6 [t2=>rax,t5=>rdx]
movq %t2, %t25 # mul rax -> r                                                                             |   |   |   |   |           |  6 [t25=>t25]
movq %t25, %t7 # move arg 0 to temp                             |                                         |   |   |   |   |           |  7 [t7=>rdi]
call printi # exp call ( no return value )                                                                |   |   |   |   |              5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t22, %t15 # default move                                                                |           |   |   |   |                  5 [t15=>r15]
movq %t21, %t14 # default move                                                            |   |           |   |   |                      5 [t14=>r14]
movq %t20, %t13 # default move                                                        |   |   |           |   |                          5 [t13=>r13]
movq %t19, %t12 # default move                                                    |   |   |   |           |                              5 [t12=>r12]
movq %t18, %t3 # default move                       |                             |   |   |   |                                          5 [t3=>rbx]
jmp L0                                              |                             |   |   |   |                                          5 null
L0:                                                 |                             |   |   |   |                                          5 null
# sink                                                                                                                                   0 null
[91mTest Result: ./tests/pmult.tig failed.[0m
0: t18 interferes with:t15 t14 t13 t12 
1: t12 interferes with:t18 t15 t14 t13 
2: t13 interferes with:t19 t18 t15 t14 
3: t14 interferes with:t20 t19 t18 t15 
4: t15 interferes with:t21 t20 t19 t18 
5: t19 interferes with:t18 t15 t14 t13 
6: t20 interferes with:t19 t18 t15 t14 
7: t21 interferes with:t20 t19 t18 t15 
8: t22 interferes with:t21 t20 t19 t18 
9: t23 interferes with:t22 t21 t20 t19 t18 
10: t16 interferes with:t22 t21 t20 t19 t18 
11: t24 interferes with:t22 t21 t20 t19 t18 t16 
12: t17 interferes with:t22 t21 t20 t19 t18 t16 
13: t25 interferes with:t22 t21 t20 t19 t18 t17 
14: t7 interferes with:t22 t21 t20 t19 t18 
15: t2 interferes with:t22 t21 t20 t19 t18 
16: t4 interferes with:t22 t21 t20 t19 t18 
17: t5 interferes with:t22 t21 t20 t19 t18 
18: t6 interferes with:t22 t21 t20 t19 t18 
19: t8 interferes with:t22 t21 t20 t19 t18 
20: t9 interferes with:t22 t21 t20 t19 t18 
21: t10 interferes with:t22 t21 t20 t19 t18 
22: t11 interferes with:t22 t21 t20 t19 t18 
23: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L1: : def => null, use => null
movq %t3, %t18 # default move : def => [t18=>t18], use => [t3=>rbx]
movq %t12, %t19 # default move : def => [t19=>t19], use => [t12=>r12]
movq %t13, %t20 # default move : def => [t20=>t20], use => [t13=>r13]
movq %t14, %t21 # default move : def => [t21=>t21], use => [t14=>r14]
movq %t15, %t22 # default move : def => [t22=>t22], use => [t15=>r15]
movq $3, %t23 # const : def => [t23=>t23], use => null
movq %t23, %t16 # default move : def => [t16=>t16], use => [t23=>t23]
movq $4, %t24 # const : def => [t24=>t24], use => null
movq %t24, %t17 # default move : def => [t17=>t17], use => [t24=>t24]
movq %t16, %t25 # add lexp -> r : def => [t25=>t25], use => [t16=>t16]
add %t17, %t25 : def => [t25=>t25], use => [t17=>t17,t25=>t25]
movq %t25, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t25=>t25]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t25=>t25,t7=>rdi]
movq %t22, %t15 # default move : def => [t15=>r15], use => [t22=>t22]
movq %t21, %t14 # default move : def => [t14=>r14], use => [t21=>t21]
movq %t20, %t13 # default move : def => [t13=>r13], use => [t20=>t20]
movq %t19, %t12 # default move : def => [t12=>r12], use => [t19=>t19]
movq %t18, %t3 # default move : def => [t3=>rbx], use => [t18=>t18]
jmp L0 : def => null, use => null
L0: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L1: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t18 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t18=>t18]
movq %t12, %t19 # default move => [t13=>r13,t14=>r14,t15=>r15,t18=>t18,t19=>t19]
movq %t13, %t20 # default move => [t14=>r14,t15=>r15,t18=>t18,t19=>t19,t20=>t20]
movq %t14, %t21 # default move => [t15=>r15,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t15, %t22 # default move => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $3, %t23 # const => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23]
movq %t23, %t16 # default move => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $4, %t24 # const => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t24=>t24]
movq %t24, %t17 # default move => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t16, %t25 # add lexp -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t25=>t25]
add %t17, %t25 => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t25=>t25]
movq %t25, %t7 # move arg 0 to temp => [t7=>rdi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t25=>t25]
call printi # exp call ( no return value ) => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t22, %t15 # default move => [t15=>r15,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t21, %t14 # default move => [t14=>r14,t15=>r15,t18=>t18,t19=>t19,t20=>t20]
movq %t20, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t18=>t18,t19=>t19]
movq %t19, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t18=>t18]
movq %t18, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L0 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L0: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                  t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 rc def
L1:                                                 |                             |   |   |   |                                          5 null
movq %t3, %t18 # default move                                                     |   |   |   |           |                              5 [t18=>t18]
movq %t12, %t19 # default move                                                        |   |   |           |   |                          5 [t19=>t19]
movq %t13, %t20 # default move                                                            |   |           |   |   |                      5 [t20=>t20]
movq %t14, %t21 # default move                                                                |           |   |   |   |                  5 [t21=>t21]
movq %t15, %t22 # default move                                                                            |   |   |   |   |              5 [t22=>t22]
movq $3, %t23 # const                                                                                     |   |   |   |   |   |          6 [t23=>t23]
movq %t23, %t16 # default move                                                                    |       |   |   |   |   |              6 [t16=>t16]
movq $4, %t24 # const                                                                             |       |   |   |   |   |       |      7 [t24=>t24]
movq %t24, %t17 # default move                                                                    |   |   |   |   |   |   |              7 [t17=>t17]
movq %t16, %t25 # add lexp -> r                                                                       |   |   |   |   |   |           |  7 [t25=>t25]
add %t17, %t25                                                                                            |   |   |   |   |           |  6 [t25=>t25]
movq %t25, %t7 # move arg 0 to temp                             |                                         |   |   |   |   |           |  7 [t7=>rdi]
call printi # exp call ( no return value )                                                                |   |   |   |   |              5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t22, %t15 # default move                                                                |           |   |   |   |                  5 [t15=>r15]
movq %t21, %t14 # default move                                                            |   |           |   |   |                      5 [t14=>r14]
movq %t20, %t13 # default move                                                        |   |   |           |   |                          5 [t13=>r13]
movq %t19, %t12 # default move                                                    |   |   |   |           |                              5 [t12=>r12]
movq %t18, %t3 # default move                       |                             |   |   |   |                                          5 [t3=>rbx]
jmp L0                                              |                             |   |   |   |                                          5 null
L0:                                                 |                             |   |   |   |                                          5 null
# sink                                                                                                                                   0 null
[92mTest Result: ./tests/pplus.tig passed.[0m
0: t16 interferes with:t15 t14 t13 t12 
1: t12 interferes with:t16 t15 t14 t13 
2: t13 interferes with:t17 t16 t15 t14 
3: t14 interferes with:t18 t17 t16 t15 
4: t15 interferes with:t19 t18 t17 t16 
5: t17 interferes with:t16 t15 t14 t13 
6: t18 interferes with:t17 t16 t15 t14 
7: t19 interferes with:t18 t17 t16 t15 
8: t20 interferes with:t19 t18 t17 t16 
9: t21 interferes with:t20 t19 t18 t17 t16 
10: t7 interferes with:t20 t19 t18 t17 t16 
11: t2 interferes with:t20 t19 t18 t17 t16 
12: t4 interferes with:t20 t19 t18 t17 t16 
13: t5 interferes with:t20 t19 t18 t17 t16 
14: t6 interferes with:t20 t19 t18 t17 t16 
15: t8 interferes with:t20 t19 t18 t17 t16 
16: t9 interferes with:t20 t19 t18 t17 t16 
17: t10 interferes with:t20 t19 t18 t17 t16 
18: t11 interferes with:t20 t19 t18 t17 t16 
19: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L2: : def => null, use => null
movq %t3, %t16 # default move : def => [t16=>t16], use => [t3=>rbx]
movq %t12, %t17 # default move : def => [t17=>t17], use => [t12=>r12]
movq %t13, %t18 # default move : def => [t18=>t18], use => [t13=>r13]
movq %t14, %t19 # default move : def => [t19=>t19], use => [t14=>r14]
movq %t15, %t20 # default move : def => [t20=>t20], use => [t15=>r15]
movq $L0, %t21 # default name : def => [t21=>t21], use => null
movq %t21, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t21=>t21]
call print # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t21=>t21,t7=>rdi]
movq %t20, %t15 # default move : def => [t15=>r15], use => [t20=>t20]
movq %t19, %t14 # default move : def => [t14=>r14], use => [t19=>t19]
movq %t18, %t13 # default move : def => [t13=>r13], use => [t18=>t18]
movq %t17, %t12 # default move : def => [t12=>r12], use => [t17=>t17]
movq %t16, %t3 # default move : def => [t3=>rbx], use => [t16=>t16]
jmp L1 : def => null, use => null
L1: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L2: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t16 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16]
movq %t12, %t17 # default move => [t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17]
movq %t13, %t18 # default move => [t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18]
movq %t14, %t19 # default move => [t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19]
movq %t15, %t20 # default move => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
movq $L0, %t21 # default name => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t21, %t7 # move arg 0 to temp => [t7=>rdi,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
call print # exp call ( no return value ) => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
movq %t20, %t15 # default move => [t15=>r15,t16=>t16,t17=>t17,t18=>t18,t19=>t19]
movq %t19, %t14 # default move => [t14=>r14,t15=>r15,t16=>t16,t17=>t17,t18=>t18]
movq %t18, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t16=>t16,t17=>t17]
movq %t17, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t16=>t16]
movq %t16, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L1 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L1: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                 t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 rc def
L2:                                                |                             |   |   |   |                          5 null
movq %t3, %t16 # default move                                                    |   |   |   |   |                      5 [t16=>t16]
movq %t12, %t17 # default move                                                       |   |   |   |   |                  5 [t17=>t17]
movq %t13, %t18 # default move                                                           |   |   |   |   |              5 [t18=>t18]
movq %t14, %t19 # default move                                                               |   |   |   |   |          5 [t19=>t19]
movq %t15, %t20 # default move                                                                   |   |   |   |   |      5 [t20=>t20]
movq $L0, %t21 # default name                                                                    |   |   |   |   |   |  6 [t21=>t21]
movq %t21, %t7 # move arg 0 to temp                            |                                 |   |   |   |   |   |  7 [t7=>rdi]
call print # exp call ( no return value )                                                        |   |   |   |   |      5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t20, %t15 # default move                                                               |   |   |   |   |          5 [t15=>r15]
movq %t19, %t14 # default move                                                           |   |   |   |   |              5 [t14=>r14]
movq %t18, %t13 # default move                                                       |   |   |   |   |                  5 [t13=>r13]
movq %t17, %t12 # default move                                                   |   |   |   |   |                      5 [t12=>r12]
movq %t16, %t3 # default move                      |                             |   |   |   |                          5 [t3=>rbx]
jmp L1                                             |                             |   |   |   |                          5 null
L1:                                                |                             |   |   |   |                          5 null
# sink                                                                                                                  0 null
[92mTest Result: ./tests/print.tig passed.[0m
Chaining type dec
0: t18 interferes with:t15 t14 t13 t12 
1: t12 interferes with:t18 t15 t14 t13 
2: t13 interferes with:t19 t18 t15 t14 
3: t14 interferes with:t20 t19 t18 t15 
4: t15 interferes with:t21 t20 t19 t18 
5: t19 interferes with:t18 t15 t14 t13 
6: t20 interferes with:t19 t18 t15 t14 
7: t21 interferes with:t20 t19 t18 t15 
8: t22 interferes with:t21 t20 t19 t18 
9: t23 interferes with:t22 t21 t20 t19 t18 
10: t7 interferes with:t17 t2 t22 t21 t20 t19 t18 
11: t2 interferes with:t17 t22 t21 t20 t19 t18 
12: t4 interferes with:t17 t22 t21 t20 t19 t18 t2 
13: t5 interferes with:t17 t22 t21 t20 t19 t18 t2 
14: t6 interferes with:t17 t22 t21 t20 t19 t18 t2 
15: t8 interferes with:t17 t22 t21 t20 t19 t18 t2 
16: t9 interferes with:t17 t22 t21 t20 t19 t18 t2 
17: t10 interferes with:t17 t22 t21 t20 t19 t18 t2 
18: t11 interferes with:t17 t22 t21 t20 t19 t18 t2 
19: t16 interferes with:t22 t21 t20 t19 t18 
20: t24 interferes with:t22 t21 t20 t19 t18 t16 
21: t25 interferes with:t16 t24 t22 t21 t20 t19 t18 
22: t26 interferes with:t25 t22 t21 t20 t19 t18 t16 
23: t27 interferes with:t22 t21 t20 t19 t18 t16 
24: t28 interferes with:t16 t27 t22 t21 t20 t19 t18 
25: t29 interferes with:t28 t22 t21 t20 t19 t18 t16 
26: t30 interferes with:t22 t21 t20 t19 t18 t16 
27: t31 interferes with:t16 t30 t22 t21 t20 t19 t18 
28: t32 interferes with:t31 t22 t21 t20 t19 t18 t16 
29: t17 interferes with:t22 t21 t20 t19 t18 
30: t33 interferes with:t22 t21 t20 t19 t18 t17 
31: t34 interferes with:t17 t33 t22 t21 t20 t19 t18 
32: t35 interferes with:t34 t22 t21 t20 t19 t18 t17 
33: t36 interferes with:t22 t21 t20 t19 t18 t17 
34: t37 interferes with:t17 t36 t22 t21 t20 t19 t18 
35: t38 interferes with:t37 t22 t21 t20 t19 t18 t17 
36: t39 interferes with:t22 t21 t20 t19 t18 t17 
37: t40 interferes with:t17 t39 t22 t21 t20 t19 t18 
38: t41 interferes with:t22 t21 t20 t19 t18 t17 
39: t42 interferes with:t22 t21 t20 t19 t18 t17 
40: t43 interferes with:t42 t22 t21 t20 t19 t18 
41: t44 interferes with:t22 t21 t20 t19 t18 
42: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L9: : def => null, use => null
movq %t3, %t18 # default move : def => [t18=>t18], use => [t3=>rbx]
movq %t12, %t19 # default move : def => [t19=>t19], use => [t12=>r12]
movq %t13, %t20 # default move : def => [t20=>t20], use => [t13=>r13]
movq %t14, %t21 # default move : def => [t21=>t21], use => [t14=>r14]
movq %t15, %t22 # default move : def => [t22=>t22], use => [t15=>r15]
movq $24, %t23 # const : def => [t23=>t23], use => null
movq %t23, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t23=>t23]
call initRecord # default call : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t23=>t23,t7=>rdi]
movq %t2, %t16 # default move : def => [t16=>t16], use => [t2=>rax]
movq $0, %t24 # const : def => [t24=>t24], use => null
movq %t16, %t25 # add lexp -> r : def => [t25=>t25], use => [t16=>t16]
add %t24, %t25 : def => [t25=>t25], use => [t24=>t24,t25=>t25]
movq $10, %t26 # const : def => [t26=>t26], use => null
movq %t26, (%t25) # store : def => null, use => [t26=>t26,t25=>t25]
movq $8, %t27 # const : def => [t27=>t27], use => null
movq %t16, %t28 # add lexp -> r : def => [t28=>t28], use => [t16=>t16]
add %t27, %t28 : def => [t28=>t28], use => [t27=>t27,t28=>t28]
movq $20, %t29 # const : def => [t29=>t29], use => null
movq %t29, (%t28) # store : def => null, use => [t29=>t29,t28=>t28]
movq $16, %t30 # const : def => [t30=>t30], use => null
movq %t16, %t31 # add lexp -> r : def => [t31=>t31], use => [t16=>t16]
add %t30, %t31 : def => [t31=>t31], use => [t30=>t30,t31=>t31]
movq $0, %t32 # const : def => [t32=>t32], use => null
movq %t32, (%t31) # store : def => null, use => [t32=>t32,t31=>t31]
movq %t16, %t17 # default move : def => [t17=>t17], use => [t16=>t16]
movq $0, %t33 # const : def => [t33=>t33], use => null
movq %t17, %t34 # add lexp -> r : def => [t34=>t34], use => [t17=>t17]
add %t33, %t34 : def => [t34=>t34], use => [t33=>t33,t34=>t34]
movq $20, %t35 # const : def => [t35=>t35], use => null
movq %t35, (%t34) # store : def => null, use => [t35=>t35,t34=>t34]
movq $8, %t36 # const : def => [t36=>t36], use => null
movq %t17, %t37 # add lexp -> r : def => [t37=>t37], use => [t17=>t17]
add %t36, %t37 : def => [t37=>t37], use => [t36=>t36,t37=>t37]
movq $21, %t38 # const : def => [t38=>t38], use => null
movq %t38, (%t37) # store : def => null, use => [t38=>t38,t37=>t37]
movq $0, %t39 # const : def => [t39=>t39], use => null
movq %t17, %t40 # add lexp -> r : def => [t40=>t40], use => [t17=>t17]
add %t39, %t40 : def => [t40=>t40], use => [t39=>t39,t40=>t40]
movq (%t40), %t41 # default load : def => [t41=>t41], use => [t40=>t40]
movq %t41, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t41=>t41]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t41=>t41,t7=>rdi]
movq $8, %t42 # const : def => [t42=>t42], use => null
movq %t17, %t43 # add lexp -> r : def => [t43=>t43], use => [t17=>t17]
add %t42, %t43 : def => [t43=>t43], use => [t42=>t42,t43=>t43]
movq (%t43), %t44 # default load : def => [t44=>t44], use => [t43=>t43]
movq %t44, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t44=>t44]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t44=>t44,t7=>rdi]
movq %t22, %t15 # default move : def => [t15=>r15], use => [t22=>t22]
movq %t21, %t14 # default move : def => [t14=>r14], use => [t21=>t21]
movq %t20, %t13 # default move : def => [t13=>r13], use => [t20=>t20]
movq %t19, %t12 # default move : def => [t12=>r12], use => [t19=>t19]
movq %t18, %t3 # default move : def => [t3=>rbx], use => [t18=>t18]
jmp L8 : def => null, use => null
L8: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L9: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t18 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t18=>t18]
movq %t12, %t19 # default move => [t13=>r13,t14=>r14,t15=>r15,t18=>t18,t19=>t19]
movq %t13, %t20 # default move => [t14=>r14,t15=>r15,t18=>t18,t19=>t19,t20=>t20]
movq %t14, %t21 # default move => [t15=>r15,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t15, %t22 # default move => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $24, %t23 # const => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23]
movq %t23, %t7 # move arg 0 to temp => [t7=>rdi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23]
call initRecord # default call => [t2=>rax,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t2, %t16 # default move => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $0, %t24 # const => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t24=>t24]
movq %t16, %t25 # add lexp -> r => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t24=>t24,t25=>t25]
add %t24, %t25 => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t25=>t25]
movq $10, %t26 # const => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t25=>t25,t26=>t26]
movq %t26, (%t25) # store => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $8, %t27 # const => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t27=>t27]
movq %t16, %t28 # add lexp -> r => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t27=>t27,t28=>t28]
add %t27, %t28 => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t28=>t28]
movq $20, %t29 # const => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t28=>t28,t29=>t29]
movq %t29, (%t28) # store => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $16, %t30 # const => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t30=>t30]
movq %t16, %t31 # add lexp -> r => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t30=>t30,t31=>t31]
add %t30, %t31 => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t31=>t31]
movq $0, %t32 # const => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t31=>t31,t32=>t32]
movq %t32, (%t31) # store => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t16, %t17 # default move => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $0, %t33 # const => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t33=>t33]
movq %t17, %t34 # add lexp -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t33=>t33,t34=>t34]
add %t33, %t34 => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t34=>t34]
movq $20, %t35 # const => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t34=>t34,t35=>t35]
movq %t35, (%t34) # store => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $8, %t36 # const => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t36=>t36]
movq %t17, %t37 # add lexp -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t36=>t36,t37=>t37]
add %t36, %t37 => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t37=>t37]
movq $21, %t38 # const => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t37=>t37,t38=>t38]
movq %t38, (%t37) # store => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $0, %t39 # const => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t39=>t39]
movq %t17, %t40 # add lexp -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t39=>t39,t40=>t40]
add %t39, %t40 => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t40=>t40]
movq (%t40), %t41 # default load => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t41=>t41]
movq %t41, %t7 # move arg 0 to temp => [t7=>rdi,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t41=>t41]
call printi # exp call ( no return value ) => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $8, %t42 # const => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t42=>t42]
movq %t17, %t43 # add lexp -> r => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t42=>t42,t43=>t43]
add %t42, %t43 => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t43=>t43]
movq (%t43), %t44 # default load => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t44=>t44]
movq %t44, %t7 # move arg 0 to temp => [t7=>rdi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t44=>t44]
call printi # exp call ( no return value ) => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t22, %t15 # default move => [t15=>r15,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t21, %t14 # default move => [t14=>r14,t15=>r15,t18=>t18,t19=>t19,t20=>t20]
movq %t20, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t18=>t18,t19=>t19]
movq %t19, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t18=>t18]
movq %t18, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L8 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L8: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                  t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36 t37 t38 t39 t40 t41 t42 t43 t44 rc def
L9:                                                 |                             |   |   |   |                                                                                                                      5 null
movq %t3, %t18 # default move                                                     |   |   |   |           |                                                                                                          5 [t18=>t18]
movq %t12, %t19 # default move                                                        |   |   |           |   |                                                                                                      5 [t19=>t19]
movq %t13, %t20 # default move                                                            |   |           |   |   |                                                                                                  5 [t20=>t20]
movq %t14, %t21 # default move                                                                |           |   |   |   |                                                                                              5 [t21=>t21]
movq %t15, %t22 # default move                                                                            |   |   |   |   |                                                                                          5 [t22=>t22]
movq $24, %t23 # const                                                                                    |   |   |   |   |   |                                                                                      6 [t23=>t23]
movq %t23, %t7 # move arg 0 to temp                             |                                         |   |   |   |   |   |                                                                                      7 [t7=>rdi]
call initRecord # default call                   |                                                        |   |   |   |   |                                                                                          6 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t2, %t16 # default move                                                                     |       |   |   |   |   |                                                                                          6 [t16=>t16]
movq $0, %t24 # const                                                                             |       |   |   |   |   |       |                                                                                  7 [t24=>t24]
movq %t16, %t25 # add lexp -> r                                                                   |       |   |   |   |   |       |   |                                                                              8 [t25=>t25]
add %t24, %t25                                                                                    |       |   |   |   |   |           |                                                                              7 [t25=>t25]
movq $10, %t26 # const                                                                            |       |   |   |   |   |           |   |                                                                          8 [t26=>t26]
movq %t26, (%t25) # store                                                                         |       |   |   |   |   |                                                                                          6 null
movq $8, %t27 # const                                                                             |       |   |   |   |   |                   |                                                                      7 [t27=>t27]
movq %t16, %t28 # add lexp -> r                                                                   |       |   |   |   |   |                   |   |                                                                  8 [t28=>t28]
add %t27, %t28                                                                                    |       |   |   |   |   |                       |                                                                  7 [t28=>t28]
movq $20, %t29 # const                                                                            |       |   |   |   |   |                       |   |                                                              8 [t29=>t29]
movq %t29, (%t28) # store                                                                         |       |   |   |   |   |                                                                                          6 null
movq $16, %t30 # const                                                                            |       |   |   |   |   |                               |                                                          7 [t30=>t30]
movq %t16, %t31 # add lexp -> r                                                                   |       |   |   |   |   |                               |   |                                                      8 [t31=>t31]
add %t30, %t31                                                                                    |       |   |   |   |   |                                   |                                                      7 [t31=>t31]
movq $0, %t32 # const                                                                             |       |   |   |   |   |                                   |   |                                                  8 [t32=>t32]
movq %t32, (%t31) # store                                                                         |       |   |   |   |   |                                                                                          6 null
movq %t16, %t17 # default move                                                                        |   |   |   |   |   |                                                                                          6 [t17=>t17]
movq $0, %t33 # const                                                                                 |   |   |   |   |   |                                           |                                              7 [t33=>t33]
movq %t17, %t34 # add lexp -> r                                                                       |   |   |   |   |   |                                           |   |                                          8 [t34=>t34]
add %t33, %t34                                                                                        |   |   |   |   |   |                                               |                                          7 [t34=>t34]
movq $20, %t35 # const                                                                                |   |   |   |   |   |                                               |   |                                      8 [t35=>t35]
movq %t35, (%t34) # store                                                                             |   |   |   |   |   |                                                                                          6 null
movq $8, %t36 # const                                                                                 |   |   |   |   |   |                                                       |                                  7 [t36=>t36]
movq %t17, %t37 # add lexp -> r                                                                       |   |   |   |   |   |                                                       |   |                              8 [t37=>t37]
add %t36, %t37                                                                                        |   |   |   |   |   |                                                           |                              7 [t37=>t37]
movq $21, %t38 # const                                                                                |   |   |   |   |   |                                                           |   |                          8 [t38=>t38]
movq %t38, (%t37) # store                                                                             |   |   |   |   |   |                                                                                          6 null
movq $0, %t39 # const                                                                                 |   |   |   |   |   |                                                                   |                      7 [t39=>t39]
movq %t17, %t40 # add lexp -> r                                                                       |   |   |   |   |   |                                                                   |   |                  8 [t40=>t40]
add %t39, %t40                                                                                        |   |   |   |   |   |                                                                       |                  7 [t40=>t40]
movq (%t40), %t41 # default load                                                                      |   |   |   |   |   |                                                                           |              7 [t41=>t41]
movq %t41, %t7 # move arg 0 to temp                             |                                     |   |   |   |   |   |                                                                           |              8 [t7=>rdi]
call printi # exp call ( no return value )                                                            |   |   |   |   |   |                                                                                          6 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq $8, %t42 # const                                                                                 |   |   |   |   |   |                                                                               |          7 [t42=>t42]
movq %t17, %t43 # add lexp -> r                                                                           |   |   |   |   |                                                                               |   |      7 [t43=>t43]
add %t42, %t43                                                                                            |   |   |   |   |                                                                                   |      6 [t43=>t43]
movq (%t43), %t44 # default load                                                                          |   |   |   |   |                                                                                       |  6 [t44=>t44]
movq %t44, %t7 # move arg 0 to temp                             |                                         |   |   |   |   |                                                                                       |  7 [t7=>rdi]
call printi # exp call ( no return value )                                                                |   |   |   |   |                                                                                          5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t22, %t15 # default move                                                                |           |   |   |   |                                                                                              5 [t15=>r15]
movq %t21, %t14 # default move                                                            |   |           |   |   |                                                                                                  5 [t14=>r14]
movq %t20, %t13 # default move                                                        |   |   |           |   |                                                                                                      5 [t13=>r13]
movq %t19, %t12 # default move                                                    |   |   |   |           |                                                                                                          5 [t12=>r12]
movq %t18, %t3 # default move                       |                             |   |   |   |                                                                                                                      5 [t3=>rbx]
jmp L8                                              |                             |   |   |   |                                                                                                                      5 null
L8:                                                 |                             |   |   |   |                                                                                                                      5 null
# sink                                                                                                                                                                                                               0 null
t17 cost: 2
0: t18 interferes with:t15 t14 t13 t12 t0 
1: t0 interferes with:
2: t12 interferes with:t18 t15 t14 t13 
3: t13 interferes with:t19 t18 t15 t14 
4: t14 interferes with:t20 t19 t18 t15 
5: t15 interferes with:t21 t20 t19 t18 
6: t19 interferes with:t18 t15 t14 t13 t0 
7: t20 interferes with:t19 t18 t15 t14 t0 
8: t21 interferes with:t20 t19 t18 t15 t0 
9: t22 interferes with:t21 t20 t19 t18 t0 
10: t23 interferes with:t22 t21 t20 t19 t18 t0 
11: t7 interferes with:t2 t22 t21 t20 t19 t18 t0 
12: t2 interferes with:t22 t21 t20 t19 t18 t0 
13: t4 interferes with:t22 t21 t20 t19 t18 t2 t0 
14: t5 interferes with:t22 t21 t20 t19 t18 t2 t0 
15: t6 interferes with:t22 t21 t20 t19 t18 t2 t0 
16: t8 interferes with:t22 t21 t20 t19 t18 t2 t0 
17: t9 interferes with:t22 t21 t20 t19 t18 t2 t0 
18: t10 interferes with:t22 t21 t20 t19 t18 t2 t0 
19: t11 interferes with:t22 t21 t20 t19 t18 t2 t0 
20: t16 interferes with:t22 t21 t20 t19 t18 t0 
21: t24 interferes with:t22 t21 t20 t19 t18 t16 t0 
22: t25 interferes with:t16 t24 t22 t21 t20 t19 t18 t0 
23: t26 interferes with:t25 t22 t21 t20 t19 t18 t16 t0 
24: t27 interferes with:t22 t21 t20 t19 t18 t16 t0 
25: t28 interferes with:t16 t27 t22 t21 t20 t19 t18 t0 
26: t29 interferes with:t28 t22 t21 t20 t19 t18 t16 t0 
27: t30 interferes with:t22 t21 t20 t19 t18 t16 t0 
28: t31 interferes with:t16 t30 t22 t21 t20 t19 t18 t0 
29: t32 interferes with:t31 t22 t21 t20 t19 t18 t16 t0 
30: t17 interferes with:t42 t39 t36 t33 t22 t21 t20 t19 t18 t0 
31: t45 interferes with:t22 t21 t20 t19 t18 t0 
32: t33 interferes with:t22 t21 t20 t19 t18 t0 
33: t46 interferes with:t33 t22 t21 t20 t19 t18 t0 
34: t34 interferes with:t33 t22 t21 t20 t19 t18 t0 
35: t35 interferes with:t34 t22 t21 t20 t19 t18 t0 
36: t36 interferes with:t22 t21 t20 t19 t18 t0 
37: t47 interferes with:t36 t22 t21 t20 t19 t18 t0 
38: t37 interferes with:t36 t22 t21 t20 t19 t18 t0 
39: t38 interferes with:t37 t22 t21 t20 t19 t18 t0 
40: t39 interferes with:t22 t21 t20 t19 t18 t0 
41: t48 interferes with:t39 t22 t21 t20 t19 t18 t0 
42: t40 interferes with:t39 t22 t21 t20 t19 t18 t0 
43: t41 interferes with:t22 t21 t20 t19 t18 t0 
44: t42 interferes with:t22 t21 t20 t19 t18 t0 
45: t49 interferes with:t42 t22 t21 t20 t19 t18 
46: t43 interferes with:t42 t22 t21 t20 t19 t18 
47: t44 interferes with:t22 t21 t20 t19 t18 
48: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L9: : def => null, use => null
movq %t3, %t18 # default move : def => [t18=>t18], use => [t3=>rbx]
movq %t12, %t19 # default move : def => [t19=>t19], use => [t12=>r12]
movq %t13, %t20 # default move : def => [t20=>t20], use => [t13=>r13]
movq %t14, %t21 # default move : def => [t21=>t21], use => [t14=>r14]
movq %t15, %t22 # default move : def => [t22=>t22], use => [t15=>r15]
movq $24, %t23 # const : def => [t23=>t23], use => null
movq %t23, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t23=>t23]
call initRecord # default call : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t23=>t23,t7=>rdi]
movq %t2, %t16 # default move : def => [t16=>t16], use => [t2=>rax]
movq $0, %t24 # const : def => [t24=>t24], use => null
movq %t16, %t25 # add lexp -> r : def => [t25=>t25], use => [t16=>t16]
add %t24, %t25 : def => [t25=>t25], use => [t24=>t24,t25=>t25]
movq $10, %t26 # const : def => [t26=>t26], use => null
movq %t26, (%t25) # store : def => null, use => [t26=>t26,t25=>t25]
movq $8, %t27 # const : def => [t27=>t27], use => null
movq %t16, %t28 # add lexp -> r : def => [t28=>t28], use => [t16=>t16]
add %t27, %t28 : def => [t28=>t28], use => [t27=>t27,t28=>t28]
movq $20, %t29 # const : def => [t29=>t29], use => null
movq %t29, (%t28) # store : def => null, use => [t29=>t29,t28=>t28]
movq $16, %t30 # const : def => [t30=>t30], use => null
movq %t16, %t31 # add lexp -> r : def => [t31=>t31], use => [t16=>t16]
add %t30, %t31 : def => [t31=>t31], use => [t30=>t30,t31=>t31]
movq $0, %t32 # const : def => [t32=>t32], use => null
movq %t32, (%t31) # store : def => null, use => [t32=>t32,t31=>t31]
movq %t16, %t17 # default move : def => [t17=>t17], use => [t16=>t16]
movq %t17, %t45 # spill s : def => [t45=>t45], use => [t17=>t17]
movq %t45, -8(%t0) # spill s : def => null, use => [t0=>rbp,t45=>t45]
movq $0, %t33 # const : def => [t33=>t33], use => null
movq -8(%t0), %t46 # spill l : def => [t46=>t46], use => [t0=>rbp]
movq %t46, %t17 # spill l : def => [t17=>t17], use => [t46=>t46]
movq %t17, %t34 # add lexp -> r : def => [t34=>t34], use => [t17=>t17]
add %t33, %t34 : def => [t34=>t34], use => [t33=>t33,t34=>t34]
movq $20, %t35 # const : def => [t35=>t35], use => null
movq %t35, (%t34) # store : def => null, use => [t35=>t35,t34=>t34]
movq $8, %t36 # const : def => [t36=>t36], use => null
movq -8(%t0), %t47 # spill l : def => [t47=>t47], use => [t0=>rbp]
movq %t47, %t17 # spill l : def => [t17=>t17], use => [t47=>t47]
movq %t17, %t37 # add lexp -> r : def => [t37=>t37], use => [t17=>t17]
add %t36, %t37 : def => [t37=>t37], use => [t36=>t36,t37=>t37]
movq $21, %t38 # const : def => [t38=>t38], use => null
movq %t38, (%t37) # store : def => null, use => [t38=>t38,t37=>t37]
movq $0, %t39 # const : def => [t39=>t39], use => null
movq -8(%t0), %t48 # spill l : def => [t48=>t48], use => [t0=>rbp]
movq %t48, %t17 # spill l : def => [t17=>t17], use => [t48=>t48]
movq %t17, %t40 # add lexp -> r : def => [t40=>t40], use => [t17=>t17]
add %t39, %t40 : def => [t40=>t40], use => [t39=>t39,t40=>t40]
movq (%t40), %t41 # default load : def => [t41=>t41], use => [t40=>t40]
movq %t41, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t41=>t41]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t41=>t41,t7=>rdi]
movq $8, %t42 # const : def => [t42=>t42], use => null
movq -8(%t0), %t49 # spill l : def => [t49=>t49], use => [t0=>rbp]
movq %t49, %t17 # spill l : def => [t17=>t17], use => [t49=>t49]
movq %t17, %t43 # add lexp -> r : def => [t43=>t43], use => [t17=>t17]
add %t42, %t43 : def => [t43=>t43], use => [t42=>t42,t43=>t43]
movq (%t43), %t44 # default load : def => [t44=>t44], use => [t43=>t43]
movq %t44, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t44=>t44]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t44=>t44,t7=>rdi]
movq %t22, %t15 # default move : def => [t15=>r15], use => [t22=>t22]
movq %t21, %t14 # default move : def => [t14=>r14], use => [t21=>t21]
movq %t20, %t13 # default move : def => [t13=>r13], use => [t20=>t20]
movq %t19, %t12 # default move : def => [t12=>r12], use => [t19=>t19]
movq %t18, %t3 # default move : def => [t3=>rbx], use => [t18=>t18]
jmp L8 : def => null, use => null
L8: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L9: => [t0=>rbp,t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t18 # default move => [t0=>rbp,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t18=>t18]
movq %t12, %t19 # default move => [t0=>rbp,t13=>r13,t14=>r14,t15=>r15,t18=>t18,t19=>t19]
movq %t13, %t20 # default move => [t0=>rbp,t14=>r14,t15=>r15,t18=>t18,t19=>t19,t20=>t20]
movq %t14, %t21 # default move => [t0=>rbp,t15=>r15,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t15, %t22 # default move => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $24, %t23 # const => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23]
movq %t23, %t7 # move arg 0 to temp => [t0=>rbp,t7=>rdi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23]
call initRecord # default call => [t0=>rbp,t2=>rax,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t2, %t16 # default move => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $0, %t24 # const => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t24=>t24]
movq %t16, %t25 # add lexp -> r => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t24=>t24,t25=>t25]
add %t24, %t25 => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t25=>t25]
movq $10, %t26 # const => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t25=>t25,t26=>t26]
movq %t26, (%t25) # store => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $8, %t27 # const => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t27=>t27]
movq %t16, %t28 # add lexp -> r => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t27=>t27,t28=>t28]
add %t27, %t28 => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t28=>t28]
movq $20, %t29 # const => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t28=>t28,t29=>t29]
movq %t29, (%t28) # store => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $16, %t30 # const => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t30=>t30]
movq %t16, %t31 # add lexp -> r => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t30=>t30,t31=>t31]
add %t30, %t31 => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t31=>t31]
movq $0, %t32 # const => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t31=>t31,t32=>t32]
movq %t32, (%t31) # store => [t0=>rbp,t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t16, %t17 # default move => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t17, %t45 # spill s => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t45=>t45]
movq %t45, -8(%t0) # spill s => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $0, %t33 # const => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t33=>t33]
movq -8(%t0), %t46 # spill l => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t33=>t33,t46=>t46]
movq %t46, %t17 # spill l => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t33=>t33]
movq %t17, %t34 # add lexp -> r => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t33=>t33,t34=>t34]
add %t33, %t34 => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t34=>t34]
movq $20, %t35 # const => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t34=>t34,t35=>t35]
movq %t35, (%t34) # store => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $8, %t36 # const => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t36=>t36]
movq -8(%t0), %t47 # spill l => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t36=>t36,t47=>t47]
movq %t47, %t17 # spill l => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t36=>t36]
movq %t17, %t37 # add lexp -> r => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t36=>t36,t37=>t37]
add %t36, %t37 => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t37=>t37]
movq $21, %t38 # const => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t37=>t37,t38=>t38]
movq %t38, (%t37) # store => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $0, %t39 # const => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t39=>t39]
movq -8(%t0), %t48 # spill l => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t39=>t39,t48=>t48]
movq %t48, %t17 # spill l => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t39=>t39]
movq %t17, %t40 # add lexp -> r => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t39=>t39,t40=>t40]
add %t39, %t40 => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t40=>t40]
movq (%t40), %t41 # default load => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t41=>t41]
movq %t41, %t7 # move arg 0 to temp => [t0=>rbp,t7=>rdi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t41=>t41]
call printi # exp call ( no return value ) => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $8, %t42 # const => [t0=>rbp,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t42=>t42]
movq -8(%t0), %t49 # spill l => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t42=>t42,t49=>t49]
movq %t49, %t17 # spill l => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t42=>t42]
movq %t17, %t43 # add lexp -> r => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t42=>t42,t43=>t43]
add %t42, %t43 => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t43=>t43]
movq (%t43), %t44 # default load => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t44=>t44]
movq %t44, %t7 # move arg 0 to temp => [t7=>rdi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t44=>t44]
call printi # exp call ( no return value ) => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t22, %t15 # default move => [t15=>r15,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t21, %t14 # default move => [t14=>r14,t15=>r15,t18=>t18,t19=>t19,t20=>t20]
movq %t20, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t18=>t18,t19=>t19]
movq %t19, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t18=>t18]
movq %t18, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L8 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L8: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                  t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36 t37 t38 t39 t40 t41 t42 t43 t44 t45 t46 t47 t48 t49 rc def
L9:                                        |        |                             |   |   |   |                                                                                                                                          6 null
movq %t3, %t18 # default move              |                                      |   |   |   |           |                                                                                                                              6 [t18=>t18]
movq %t12, %t19 # default move             |                                          |   |   |           |   |                                                                                                                          6 [t19=>t19]
movq %t13, %t20 # default move             |                                              |   |           |   |   |                                                                                                                      6 [t20=>t20]
movq %t14, %t21 # default move             |                                                  |           |   |   |   |                                                                                                                  6 [t21=>t21]
movq %t15, %t22 # default move             |                                                              |   |   |   |   |                                                                                                              6 [t22=>t22]
movq $24, %t23 # const                     |                                                              |   |   |   |   |   |                                                                                                          7 [t23=>t23]
movq %t23, %t7 # move arg 0 to temp        |                    |                                         |   |   |   |   |   |                                                                                                          8 [t7=>rdi]
call initRecord # default call             |     |                                                        |   |   |   |   |                                                                                                              7 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t2, %t16 # default move              |                                                      |       |   |   |   |   |                                                                                                              7 [t16=>t16]
movq $0, %t24 # const                      |                                                      |       |   |   |   |   |       |                                                                                                      8 [t24=>t24]
movq %t16, %t25 # add lexp -> r            |                                                      |       |   |   |   |   |       |   |                                                                                                  9 [t25=>t25]
add %t24, %t25                             |                                                      |       |   |   |   |   |           |                                                                                                  8 [t25=>t25]
movq $10, %t26 # const                     |                                                      |       |   |   |   |   |           |   |                                                                                              9 [t26=>t26]
movq %t26, (%t25) # store                  |                                                      |       |   |   |   |   |                                                                                                              7 null
movq $8, %t27 # const                      |                                                      |       |   |   |   |   |                   |                                                                                          8 [t27=>t27]
movq %t16, %t28 # add lexp -> r            |                                                      |       |   |   |   |   |                   |   |                                                                                      9 [t28=>t28]
add %t27, %t28                             |                                                      |       |   |   |   |   |                       |                                                                                      8 [t28=>t28]
movq $20, %t29 # const                     |                                                      |       |   |   |   |   |                       |   |                                                                                  9 [t29=>t29]
movq %t29, (%t28) # store                  |                                                      |       |   |   |   |   |                                                                                                              7 null
movq $16, %t30 # const                     |                                                      |       |   |   |   |   |                               |                                                                              8 [t30=>t30]
movq %t16, %t31 # add lexp -> r            |                                                      |       |   |   |   |   |                               |   |                                                                          9 [t31=>t31]
add %t30, %t31                             |                                                      |       |   |   |   |   |                                   |                                                                          8 [t31=>t31]
movq $0, %t32 # const                      |                                                      |       |   |   |   |   |                                   |   |                                                                      9 [t32=>t32]
movq %t32, (%t31) # store                  |                                                      |       |   |   |   |   |                                                                                                              7 null
movq %t16, %t17 # default move             |                                                          |   |   |   |   |   |                                                                                                              7 [t17=>t17]
movq %t17, %t45 # spill s                  |                                                              |   |   |   |   |                                                                                           |                  7 [t45=>t45]
movq %t45, -8(%t0) # spill s               |                                                              |   |   |   |   |                                                                                                              6 null
movq $0, %t33 # const                      |                                                              |   |   |   |   |                                           |                                                                  7 [t33=>t33]
movq -8(%t0), %t46 # spill l               |                                                              |   |   |   |   |                                           |                                                   |              8 [t46=>t46]
movq %t46, %t17 # spill l                  |                                                          |   |   |   |   |   |                                           |                                                                  8 [t17=>t17]
movq %t17, %t34 # add lexp -> r            |                                                              |   |   |   |   |                                           |   |                                                              8 [t34=>t34]
add %t33, %t34                             |                                                              |   |   |   |   |                                               |                                                              7 [t34=>t34]
movq $20, %t35 # const                     |                                                              |   |   |   |   |                                               |   |                                                          8 [t35=>t35]
movq %t35, (%t34) # store                  |                                                              |   |   |   |   |                                                                                                              6 null
movq $8, %t36 # const                      |                                                              |   |   |   |   |                                                       |                                                      7 [t36=>t36]
movq -8(%t0), %t47 # spill l               |                                                              |   |   |   |   |                                                       |                                           |          8 [t47=>t47]
movq %t47, %t17 # spill l                  |                                                          |   |   |   |   |   |                                                       |                                                      8 [t17=>t17]
movq %t17, %t37 # add lexp -> r            |                                                              |   |   |   |   |                                                       |   |                                                  8 [t37=>t37]
add %t36, %t37                             |                                                              |   |   |   |   |                                                           |                                                  7 [t37=>t37]
movq $21, %t38 # const                     |                                                              |   |   |   |   |                                                           |   |                                              8 [t38=>t38]
movq %t38, (%t37) # store                  |                                                              |   |   |   |   |                                                                                                              6 null
movq $0, %t39 # const                      |                                                              |   |   |   |   |                                                                   |                                          7 [t39=>t39]
movq -8(%t0), %t48 # spill l               |                                                              |   |   |   |   |                                                                   |                                   |      8 [t48=>t48]
movq %t48, %t17 # spill l                  |                                                          |   |   |   |   |   |                                                                   |                                          8 [t17=>t17]
movq %t17, %t40 # add lexp -> r            |                                                              |   |   |   |   |                                                                   |   |                                      8 [t40=>t40]
add %t39, %t40                             |                                                              |   |   |   |   |                                                                       |                                      7 [t40=>t40]
movq (%t40), %t41 # default load           |                                                              |   |   |   |   |                                                                           |                                  7 [t41=>t41]
movq %t41, %t7 # move arg 0 to temp        |                    |                                         |   |   |   |   |                                                                           |                                  8 [t7=>rdi]
call printi # exp call ( no return value ) |                                                              |   |   |   |   |                                                                                                              6 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq $8, %t42 # const                      |                                                              |   |   |   |   |                                                                               |                              7 [t42=>t42]
movq -8(%t0), %t49 # spill l                                                                              |   |   |   |   |                                                                               |                           |  7 [t49=>t49]
movq %t49, %t17 # spill l                                                                             |   |   |   |   |   |                                                                               |                              7 [t17=>t17]
movq %t17, %t43 # add lexp -> r                                                                           |   |   |   |   |                                                                               |   |                          7 [t43=>t43]
add %t42, %t43                                                                                            |   |   |   |   |                                                                                   |                          6 [t43=>t43]
movq (%t43), %t44 # default load                                                                          |   |   |   |   |                                                                                       |                      6 [t44=>t44]
movq %t44, %t7 # move arg 0 to temp                             |                                         |   |   |   |   |                                                                                       |                      7 [t7=>rdi]
call printi # exp call ( no return value )                                                                |   |   |   |   |                                                                                                              5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t22, %t15 # default move                                                                |           |   |   |   |                                                                                                                  5 [t15=>r15]
movq %t21, %t14 # default move                                                            |   |           |   |   |                                                                                                                      5 [t14=>r14]
movq %t20, %t13 # default move                                                        |   |   |           |   |                                                                                                                          5 [t13=>r13]
movq %t19, %t12 # default move                                                    |   |   |   |           |                                                                                                                              5 [t12=>r12]
movq %t18, %t3 # default move                       |                             |   |   |   |                                                                                                                                          5 [t3=>rbx]
jmp L8                                              |                             |   |   |   |                                                                                                                                          5 null
L8:                                                 |                             |   |   |   |                                                                                                                                          5 null
# sink                                                                                                                                                                                                                                   0 null
[92mTest Result: ./tests/record_assign.tig passed.[0m
Chaining type dec
0: t18 interferes with:t15 t14 t13 t12 
1: t12 interferes with:t18 t15 t14 t13 
2: t13 interferes with:t19 t18 t15 t14 
3: t14 interferes with:t20 t19 t18 t15 
4: t15 interferes with:t21 t20 t19 t18 
5: t19 interferes with:t18 t15 t14 t13 
6: t20 interferes with:t19 t18 t15 t14 
7: t21 interferes with:t20 t19 t18 t15 
8: t22 interferes with:t21 t20 t19 t18 
9: t23 interferes with:t22 t21 t20 t19 t18 
10: t7 interferes with:t2 t22 t21 t20 t19 t18 
11: t2 interferes with:t22 t21 t20 t19 t18 
12: t4 interferes with:t22 t21 t20 t19 t18 t2 
13: t5 interferes with:t22 t21 t20 t19 t18 t2 
14: t6 interferes with:t22 t21 t20 t19 t18 t2 
15: t8 interferes with:t22 t21 t20 t19 t18 t2 
16: t9 interferes with:t22 t21 t20 t19 t18 t2 
17: t10 interferes with:t22 t21 t20 t19 t18 t2 
18: t11 interferes with:t22 t21 t20 t19 t18 t2 
19: t16 interferes with:t22 t21 t20 t19 t18 
20: t24 interferes with:t22 t21 t20 t19 t18 t16 
21: t25 interferes with:t16 t24 t22 t21 t20 t19 t18 
22: t26 interferes with:t25 t22 t21 t20 t19 t18 t16 
23: t27 interferes with:t22 t21 t20 t19 t18 t16 
24: t28 interferes with:t16 t27 t22 t21 t20 t19 t18 
25: t29 interferes with:t28 t22 t21 t20 t19 t18 t16 
26: t17 interferes with:t22 t21 t20 t19 t18 
27: t30 interferes with:t22 t21 t20 t19 t18 t17 
28: t31 interferes with:t30 t22 t21 t20 t19 t18 
29: t32 interferes with:t22 t21 t20 t19 t18 
30: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L3: : def => null, use => null
movq %t3, %t18 # default move : def => [t18=>t18], use => [t3=>rbx]
movq %t12, %t19 # default move : def => [t19=>t19], use => [t12=>r12]
movq %t13, %t20 # default move : def => [t20=>t20], use => [t13=>r13]
movq %t14, %t21 # default move : def => [t21=>t21], use => [t14=>r14]
movq %t15, %t22 # default move : def => [t22=>t22], use => [t15=>r15]
movq $16, %t23 # const : def => [t23=>t23], use => null
movq %t23, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t23=>t23]
call initRecord # default call : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t23=>t23,t7=>rdi]
movq %t2, %t16 # default move : def => [t16=>t16], use => [t2=>rax]
movq $0, %t24 # const : def => [t24=>t24], use => null
movq %t16, %t25 # add lexp -> r : def => [t25=>t25], use => [t16=>t16]
add %t24, %t25 : def => [t25=>t25], use => [t24=>t24,t25=>t25]
movq $10, %t26 # const : def => [t26=>t26], use => null
movq %t26, (%t25) # store : def => null, use => [t26=>t26,t25=>t25]
movq $8, %t27 # const : def => [t27=>t27], use => null
movq %t16, %t28 # add lexp -> r : def => [t28=>t28], use => [t16=>t16]
add %t27, %t28 : def => [t28=>t28], use => [t27=>t27,t28=>t28]
movq $0, %t29 # const : def => [t29=>t29], use => null
movq %t29, (%t28) # store : def => null, use => [t29=>t29,t28=>t28]
movq %t16, %t17 # default move : def => [t17=>t17], use => [t16=>t16]
movq $0, %t30 # const : def => [t30=>t30], use => null
movq %t17, %t31 # add lexp -> r : def => [t31=>t31], use => [t17=>t17]
add %t30, %t31 : def => [t31=>t31], use => [t30=>t30,t31=>t31]
movq (%t31), %t32 # default load : def => [t32=>t32], use => [t31=>t31]
movq %t32, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t32=>t32]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t32=>t32,t7=>rdi]
movq %t22, %t15 # default move : def => [t15=>r15], use => [t22=>t22]
movq %t21, %t14 # default move : def => [t14=>r14], use => [t21=>t21]
movq %t20, %t13 # default move : def => [t13=>r13], use => [t20=>t20]
movq %t19, %t12 # default move : def => [t12=>r12], use => [t19=>t19]
movq %t18, %t3 # default move : def => [t3=>rbx], use => [t18=>t18]
jmp L2 : def => null, use => null
L2: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L3: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t18 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t18=>t18]
movq %t12, %t19 # default move => [t13=>r13,t14=>r14,t15=>r15,t18=>t18,t19=>t19]
movq %t13, %t20 # default move => [t14=>r14,t15=>r15,t18=>t18,t19=>t19,t20=>t20]
movq %t14, %t21 # default move => [t15=>r15,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t15, %t22 # default move => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $16, %t23 # const => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23]
movq %t23, %t7 # move arg 0 to temp => [t7=>rdi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t23=>t23]
call initRecord # default call => [t2=>rax,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t2, %t16 # default move => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $0, %t24 # const => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t24=>t24]
movq %t16, %t25 # add lexp -> r => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t24=>t24,t25=>t25]
add %t24, %t25 => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t25=>t25]
movq $10, %t26 # const => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t25=>t25,t26=>t26]
movq %t26, (%t25) # store => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $8, %t27 # const => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t27=>t27]
movq %t16, %t28 # add lexp -> r => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t27=>t27,t28=>t28]
add %t27, %t28 => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t28=>t28]
movq $0, %t29 # const => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t28=>t28,t29=>t29]
movq %t29, (%t28) # store => [t16=>t16,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t16, %t17 # default move => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $0, %t30 # const => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t30=>t30]
movq %t17, %t31 # add lexp -> r => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t30=>t30,t31=>t31]
add %t30, %t31 => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t31=>t31]
movq (%t31), %t32 # default load => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t32=>t32]
movq %t32, %t7 # move arg 0 to temp => [t7=>rdi,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t32=>t32]
call printi # exp call ( no return value ) => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t22, %t15 # default move => [t15=>r15,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t21, %t14 # default move => [t14=>r14,t15=>r15,t18=>t18,t19=>t19,t20=>t20]
movq %t20, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t18=>t18,t19=>t19]
movq %t19, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t18=>t18]
movq %t18, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L2 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L2: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                  t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 rc def
L3:                                                 |                             |   |   |   |                                                                      5 null
movq %t3, %t18 # default move                                                     |   |   |   |           |                                                          5 [t18=>t18]
movq %t12, %t19 # default move                                                        |   |   |           |   |                                                      5 [t19=>t19]
movq %t13, %t20 # default move                                                            |   |           |   |   |                                                  5 [t20=>t20]
movq %t14, %t21 # default move                                                                |           |   |   |   |                                              5 [t21=>t21]
movq %t15, %t22 # default move                                                                            |   |   |   |   |                                          5 [t22=>t22]
movq $16, %t23 # const                                                                                    |   |   |   |   |   |                                      6 [t23=>t23]
movq %t23, %t7 # move arg 0 to temp                             |                                         |   |   |   |   |   |                                      7 [t7=>rdi]
call initRecord # default call                   |                                                        |   |   |   |   |                                          6 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t2, %t16 # default move                                                                     |       |   |   |   |   |                                          6 [t16=>t16]
movq $0, %t24 # const                                                                             |       |   |   |   |   |       |                                  7 [t24=>t24]
movq %t16, %t25 # add lexp -> r                                                                   |       |   |   |   |   |       |   |                              8 [t25=>t25]
add %t24, %t25                                                                                    |       |   |   |   |   |           |                              7 [t25=>t25]
movq $10, %t26 # const                                                                            |       |   |   |   |   |           |   |                          8 [t26=>t26]
movq %t26, (%t25) # store                                                                         |       |   |   |   |   |                                          6 null
movq $8, %t27 # const                                                                             |       |   |   |   |   |                   |                      7 [t27=>t27]
movq %t16, %t28 # add lexp -> r                                                                   |       |   |   |   |   |                   |   |                  8 [t28=>t28]
add %t27, %t28                                                                                    |       |   |   |   |   |                       |                  7 [t28=>t28]
movq $0, %t29 # const                                                                             |       |   |   |   |   |                       |   |              8 [t29=>t29]
movq %t29, (%t28) # store                                                                         |       |   |   |   |   |                                          6 null
movq %t16, %t17 # default move                                                                        |   |   |   |   |   |                                          6 [t17=>t17]
movq $0, %t30 # const                                                                                 |   |   |   |   |   |                               |          7 [t30=>t30]
movq %t17, %t31 # add lexp -> r                                                                           |   |   |   |   |                               |   |      7 [t31=>t31]
add %t30, %t31                                                                                            |   |   |   |   |                                   |      6 [t31=>t31]
movq (%t31), %t32 # default load                                                                          |   |   |   |   |                                       |  6 [t32=>t32]
movq %t32, %t7 # move arg 0 to temp                             |                                         |   |   |   |   |                                       |  7 [t7=>rdi]
call printi # exp call ( no return value )                                                                |   |   |   |   |                                          5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t22, %t15 # default move                                                                |           |   |   |   |                                              5 [t15=>r15]
movq %t21, %t14 # default move                                                            |   |           |   |   |                                                  5 [t14=>r14]
movq %t20, %t13 # default move                                                        |   |   |           |   |                                                      5 [t13=>r13]
movq %t19, %t12 # default move                                                    |   |   |   |           |                                                          5 [t12=>r12]
movq %t18, %t3 # default move                       |                             |   |   |   |                                                                      5 [t3=>rbx]
jmp L2                                              |                             |   |   |   |                                                                      5 null
L2:                                                 |                             |   |   |   |                                                                      5 null
# sink                                                                                                                                                               0 null
[92mTest Result: ./tests/record_dec.tig passed.[0m
0: t23 interferes with:t15 t14 t13 t12 t0 
1: t0 interferes with:
2: t12 interferes with:t23 t15 t14 t13 
3: t13 interferes with:t24 t23 t15 t14 
4: t14 interferes with:t25 t24 t23 t15 
5: t15 interferes with:t26 t25 t24 t23 
6: t24 interferes with:t23 t15 t14 t13 t0 
7: t25 interferes with:t24 t23 t15 t14 t0 
8: t26 interferes with:t25 t24 t23 t15 t0 
9: t27 interferes with:t26 t25 t24 t23 t0 
10: t29 interferes with:t27 t26 t25 t24 t23 t0 
11: t30 interferes with:t0 t29 t27 t26 t25 t24 t23 
12: t31 interferes with:t30 t27 t26 t25 t24 t23 t0 
13: t32 interferes with:t27 t26 t25 t24 t23 t0 
14: t16 interferes with:t27 t26 t25 t24 t23 t0 
15: t6 interferes with:t2 t27 t26 t25 t24 t23 t0 
16: t7 interferes with:t2 t27 t26 t25 t24 t23 t16 t6 
17: t2 interferes with:t27 t26 t25 t24 t23 
18: t4 interferes with:t27 t26 t25 t24 t23 t2 
19: t5 interferes with:t27 t26 t25 t24 t23 t2 
20: t8 interferes with:t27 t26 t25 t24 t23 t2 
21: t9 interferes with:t27 t26 t25 t24 t23 t2 
22: t10 interferes with:t27 t26 t25 t24 t23 t2 
23: t11 interferes with:t27 t26 t25 t24 t23 t2 
24: t28 interferes with:t27 t26 t25 t24 t23 
25: t3 interferes with:t15 t14 t13 t12 
registers:14
### Uses and Defs
L2: : def => null, use => null
movq %t3, %t23 # default move : def => [t23=>t23], use => [t3=>rbx]
movq %t12, %t24 # default move : def => [t24=>t24], use => [t12=>r12]
movq %t13, %t25 # default move : def => [t25=>t25], use => [t13=>r13]
movq %t14, %t26 # default move : def => [t26=>t26], use => [t14=>r14]
movq %t15, %t27 # default move : def => [t27=>t27], use => [t15=>r15]
movq $-8, %t29 # const : def => [t29=>t29], use => null
movq %t0, %t30 # add lexp -> r : def => [t30=>t30], use => [t0=>rbp]
add %t29, %t30 : def => [t30=>t30], use => [t29=>t29,t30=>t30]
movq $4, %t31 # const : def => [t31=>t31], use => null
movq %t31, (%t30) # store : def => null, use => [t31=>t31,t30=>t30]
movq $3, %t32 # const : def => [t32=>t32], use => null
movq %t32, %t16 # default move : def => [t16=>t16], use => [t32=>t32]
movq %t16, %t6 # move arg 1 to temp : def => [t6=>rsi], use => [t16=>t16]
movq %t0, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t0=>rbp]
call L0 # default call : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t16=>t16,t6=>rsi,t0=>rbp,t7=>rdi]
movq %t2, %t28 # default move : def => [t28=>t28], use => [t2=>rax]
movq %t28, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t28=>t28]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t28=>t28,t7=>rdi]
movq %t27, %t15 # default move : def => [t15=>r15], use => [t27=>t27]
movq %t26, %t14 # default move : def => [t14=>r14], use => [t26=>t26]
movq %t25, %t13 # default move : def => [t13=>r13], use => [t25=>t25]
movq %t24, %t12 # default move : def => [t12=>r12], use => [t24=>t24]
movq %t23, %t3 # default move : def => [t3=>rbx], use => [t23=>t23]
jmp L1 : def => null, use => null
L1: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L2: => [t0=>rbp,t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t23 # default move => [t0=>rbp,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t23=>t23]
movq %t12, %t24 # default move => [t0=>rbp,t13=>r13,t14=>r14,t15=>r15,t23=>t23,t24=>t24]
movq %t13, %t25 # default move => [t0=>rbp,t14=>r14,t15=>r15,t23=>t23,t24=>t24,t25=>t25]
movq %t14, %t26 # default move => [t0=>rbp,t15=>r15,t23=>t23,t24=>t24,t25=>t25,t26=>t26]
movq %t15, %t27 # default move => [t0=>rbp,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27]
movq $-8, %t29 # const => [t0=>rbp,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t29=>t29]
movq %t0, %t30 # add lexp -> r => [t0=>rbp,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t29=>t29,t30=>t30]
add %t29, %t30 => [t0=>rbp,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t30=>t30]
movq $4, %t31 # const => [t0=>rbp,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t30=>t30,t31=>t31]
movq %t31, (%t30) # store => [t0=>rbp,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27]
movq $3, %t32 # const => [t0=>rbp,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t32=>t32]
movq %t32, %t16 # default move => [t0=>rbp,t16=>t16,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27]
movq %t16, %t6 # move arg 1 to temp => [t0=>rbp,t6=>rsi,t16=>t16,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27]
movq %t0, %t7 # move arg 0 to temp => [t0=>rbp,t6=>rsi,t7=>rdi,t16=>t16,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27]
call L0 # default call => [t2=>rax,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27]
movq %t2, %t28 # default move => [t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28]
movq %t28, %t7 # move arg 0 to temp => [t7=>rdi,t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27,t28=>t28]
call printi # exp call ( no return value ) => [t23=>t23,t24=>t24,t25=>t25,t26=>t26,t27=>t27]
movq %t27, %t15 # default move => [t15=>r15,t23=>t23,t24=>t24,t25=>t25,t26=>t26]
movq %t26, %t14 # default move => [t14=>r14,t15=>r15,t23=>t23,t24=>t24,t25=>t25]
movq %t25, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t23=>t23,t24=>t24]
movq %t24, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t23=>t23]
movq %t23, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L1 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L1: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                  t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 rc def
L2:                                        |        |                             |   |   |   |                                                                      6 null
movq %t3, %t23 # default move              |                                      |   |   |   |                               |                                      6 [t23=>t23]
movq %t12, %t24 # default move             |                                          |   |   |                               |   |                                  6 [t24=>t24]
movq %t13, %t25 # default move             |                                              |   |                               |   |   |                              6 [t25=>t25]
movq %t14, %t26 # default move             |                                                  |                               |   |   |   |                          6 [t26=>t26]
movq %t15, %t27 # default move             |                                                                                  |   |   |   |   |                      6 [t27=>t27]
movq $-8, %t29 # const                     |                                                                                  |   |   |   |   |       |              7 [t29=>t29]
movq %t0, %t30 # add lexp -> r             |                                                                                  |   |   |   |   |       |   |          8 [t30=>t30]
add %t29, %t30                             |                                                                                  |   |   |   |   |           |          7 [t30=>t30]
movq $4, %t31 # const                      |                                                                                  |   |   |   |   |           |   |      8 [t31=>t31]
movq %t31, (%t30) # store                  |                                                                                  |   |   |   |   |                      6 null
movq $3, %t32 # const                      |                                                                                  |   |   |   |   |                   |  7 [t32=>t32]
movq %t32, %t16 # default move             |                                                      |                           |   |   |   |   |                      7 [t16=>t16]
movq %t16, %t6 # move arg 1 to temp        |                 |                                    |                           |   |   |   |   |                      8 [t6=>rsi]
movq %t0, %t7 # move arg 0 to temp         |                 |  |                                 |                           |   |   |   |   |                      9 [t7=>rdi]
call L0 # default call                           |                                                                            |   |   |   |   |                      6 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t2, %t28 # default move                                                                                                 |   |   |   |   |   |                  6 [t28=>t28]
movq %t28, %t7 # move arg 0 to temp                             |                                                             |   |   |   |   |   |                  7 [t7=>rdi]
call printi # exp call ( no return value )                                                                                    |   |   |   |   |                      5 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq %t27, %t15 # default move                                                                |                               |   |   |   |                          5 [t15=>r15]
movq %t26, %t14 # default move                                                            |   |                               |   |   |                              5 [t14=>r14]
movq %t25, %t13 # default move                                                        |   |   |                               |   |                                  5 [t13=>r13]
movq %t24, %t12 # default move                                                    |   |   |   |                               |                                      5 [t12=>r12]
movq %t23, %t3 # default move                       |                             |   |   |   |                                                                      5 [t3=>rbx]
jmp L1                                              |                             |   |   |   |                                                                      5 null
L1:                                                 |                             |   |   |   |                                                                      5 null
# sink                                                                                                                                                               0 null
0: t17 interferes with:t15 t14 t13 t12 t3 t0 
1: t0 interferes with:
2: t3 interferes with:t15 t14 t13 t12 
3: t12 interferes with:t18 t15 t14 t13 
4: t13 interferes with:t19 t18 t15 t14 
5: t14 interferes with:t20 t19 t18 t15 
6: t15 interferes with:t21 t20 t19 t18 
7: t18 interferes with:t17 t15 t14 t13 t12 t0 
8: t19 interferes with:t18 t17 t15 t14 t13 t0 
9: t20 interferes with:t19 t18 t17 t15 t14 t0 
10: t21 interferes with:t20 t19 t18 t17 t15 t0 
11: t22 interferes with:t21 t20 t19 t18 t17 t0 
12: t33 interferes with:t22 t21 t20 t19 t18 t17 t0 
13: t34 interferes with:t22 t21 t20 t19 t18 t17 t0 
14: t35 interferes with:t22 t21 t20 t19 t18 t17 
15: t36 interferes with:t35 t22 t21 t20 t19 t18 t17 
16: t37 interferes with:t36 t22 t21 t20 t19 t18 t17 
17: t38 interferes with:t22 t21 t20 t19 t18 t17 
18: t39 interferes with:t38 t22 t21 t20 t19 t18 
19: t2 interferes with:t38 t22 t21 t20 t19 t18 
20: t5 interferes with:t22 t21 t20 t19 t18 t2 
registers:14
### Uses and Defs
L4: : def => null, use => null
movq %t7, -8(%t0) # store to offset : def => null, use => [t7=>rdi,t0=>rbp]
movq %t6, %t17 # default move : def => [t17=>t17], use => [t6=>rsi]
movq %t3, %t18 # default move : def => [t18=>t18], use => [t3=>rbx]
movq %t12, %t19 # default move : def => [t19=>t19], use => [t12=>r12]
movq %t13, %t20 # default move : def => [t20=>t20], use => [t13=>r13]
movq %t14, %t21 # default move : def => [t21=>t21], use => [t14=>r14]
movq %t15, %t22 # default move : def => [t22=>t22], use => [t15=>r15]
movq $-8, %t33 # const : def => [t33=>t33], use => null
movq %t33, %t34 # add lexp -> r : def => [t34=>t34], use => [t33=>t33]
add %t0, %t34 : def => [t34=>t34], use => [t0=>rbp,t34=>t34]
movq (%t34), %t35 # default load : def => [t35=>t35], use => [t34=>t34]
movq $-8, %t36 # const : def => [t36=>t36], use => null
movq %t35, %t37 # add lexp -> r : def => [t37=>t37], use => [t35=>t35]
add %t36, %t37 : def => [t37=>t37], use => [t36=>t36,t37=>t37]
movq (%t37), %t38 # default load : def => [t38=>t38], use => [t37=>t37]
movq %t17, %t39 # mul lexp -> r : def => [t39=>t39], use => [t17=>t17]
movq %t39, %t2 # mul r -> rax : def => [t2=>rax], use => [t39=>t39]
imul %t2 # mul rax * rexp  : def => [t2=>rax,t5=>rdx], use => [t2=>rax,t38=>t38]
movq %t2, %t39 # mul rax -> r : def => [t39=>t39], use => [t2=>rax]
movq %t39, %t2 # default move : def => [t2=>rax], use => [t39=>t39]
movq %t22, %t15 # default move : def => [t15=>r15], use => [t22=>t22]
movq %t21, %t14 # default move : def => [t14=>r14], use => [t21=>t21]
movq %t20, %t13 # default move : def => [t13=>r13], use => [t20=>t20]
movq %t19, %t12 # default move : def => [t12=>r12], use => [t19=>t19]
movq %t18, %t3 # default move : def => [t3=>rbx], use => [t18=>t18]
jmp L3 : def => null, use => null
L3: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L4: => [t0=>rbp,t3=>rbx,t6=>rsi,t7=>rdi,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t7, -8(%t0) # store to offset => [t0=>rbp,t3=>rbx,t6=>rsi,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t6, %t17 # default move => [t0=>rbp,t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t17=>t17]
movq %t3, %t18 # default move => [t0=>rbp,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t17=>t17,t18=>t18]
movq %t12, %t19 # default move => [t0=>rbp,t13=>r13,t14=>r14,t15=>r15,t17=>t17,t18=>t18,t19=>t19]
movq %t13, %t20 # default move => [t0=>rbp,t14=>r14,t15=>r15,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
movq %t14, %t21 # default move => [t0=>rbp,t15=>r15,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t15, %t22 # default move => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq $-8, %t33 # const => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t33=>t33]
movq %t33, %t34 # add lexp -> r => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t34=>t34]
add %t0, %t34 => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t34=>t34]
movq (%t34), %t35 # default load => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t35=>t35]
movq $-8, %t36 # const => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t35=>t35,t36=>t36]
movq %t35, %t37 # add lexp -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t36=>t36,t37=>t37]
add %t36, %t37 => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t37=>t37]
movq (%t37), %t38 # default load => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t38=>t38]
movq %t17, %t39 # mul lexp -> r => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t38=>t38,t39=>t39]
movq %t39, %t2 # mul r -> rax => [t2=>rax,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t38=>t38]
imul %t2 # mul rax * rexp  => [t2=>rax,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t2, %t39 # mul rax -> r => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22,t39=>t39]
movq %t39, %t2 # default move => [t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t22, %t15 # default move => [t15=>r15,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t21, %t14 # default move => [t14=>r14,t15=>r15,t18=>t18,t19=>t19,t20=>t20]
movq %t20, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t18=>t18,t19=>t19]
movq %t19, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t18=>t18]
movq %t18, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L3 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L3: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                           t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36 t37 t38 t39 rc def
L4:                                 |        |        |  |                 |   |   |   |                                                                                                  8 null
movq %t7, -8(%t0) # store to offset |        |        |                    |   |   |   |                                                                                                  7 null
movq %t6, %t17 # default move       |        |                             |   |   |   |       |                                                                                          7 [t17=>t17]
movq %t3, %t18 # default move       |                                      |   |   |   |       |   |                                                                                      7 [t18=>t18]
movq %t12, %t19 # default move      |                                          |   |   |       |   |   |                                                                                  7 [t19=>t19]
movq %t13, %t20 # default move      |                                              |   |       |   |   |   |                                                                              7 [t20=>t20]
movq %t14, %t21 # default move      |                                                  |       |   |   |   |   |                                                                          7 [t21=>t21]
movq %t15, %t22 # default move      |                                                          |   |   |   |   |   |                                                                      7 [t22=>t22]
movq $-8, %t33 # const              |                                                          |   |   |   |   |   |                                           |                          8 [t33=>t33]
movq %t33, %t34 # add lexp -> r     |                                                          |   |   |   |   |   |                                               |                      8 [t34=>t34]
add %t0, %t34                                                                                  |   |   |   |   |   |                                               |                      7 [t34=>t34]
movq (%t34), %t35 # default load                                                               |   |   |   |   |   |                                                   |                  7 [t35=>t35]
movq $-8, %t36 # const                                                                         |   |   |   |   |   |                                                   |   |              8 [t36=>t36]
movq %t35, %t37 # add lexp -> r                                                                |   |   |   |   |   |                                                       |   |          8 [t37=>t37]
add %t36, %t37                                                                                 |   |   |   |   |   |                                                           |          7 [t37=>t37]
movq (%t37), %t38 # default load                                                               |   |   |   |   |   |                                                               |      7 [t38=>t38]
movq %t17, %t39 # mul lexp -> r                                                                    |   |   |   |   |                                                               |   |  7 [t39=>t39]
movq %t39, %t2 # mul r -> rax             |                                                        |   |   |   |   |                                                               |      7 [t2=>rax]
imul %t2 # mul rax * rexp                 |                                                        |   |   |   |   |                                                                      6 [t2=>rax,t5=>rdx]
movq %t2, %t39 # mul rax -> r                                                                      |   |   |   |   |                                                                   |  6 [t39=>t39]
movq %t39, %t2 # default move                                                                      |   |   |   |   |                                                                      5 [t2=>rax]
movq %t22, %t15 # default move                                                         |           |   |   |   |                                                                          5 [t15=>r15]
movq %t21, %t14 # default move                                                     |   |           |   |   |                                                                              5 [t14=>r14]
movq %t20, %t13 # default move                                                 |   |   |           |   |                                                                                  5 [t13=>r13]
movq %t19, %t12 # default move                                             |   |   |   |           |                                                                                      5 [t12=>r12]
movq %t18, %t3 # default move                |                             |   |   |   |                                                                                                  5 [t3=>rbx]
jmp L3                                       |                             |   |   |   |                                                                                                  5 null
L3:                                          |                             |   |   |   |                                                                                                  5 null
# sink                                                                                                                                                                                    0 null
[91mTest Result: ./tests/static_link_one.tig failed.[0m
0: t17 interferes with:t15 t14 t13 t12 
1: t12 interferes with:t17 t15 t14 t13 
2: t13 interferes with:t18 t17 t15 t14 
3: t14 interferes with:t19 t18 t17 t15 
4: t15 interferes with:t20 t19 t18 t17 
5: t18 interferes with:t17 t15 t14 t13 
6: t19 interferes with:t18 t17 t15 t14 
7: t20 interferes with:t19 t18 t17 t15 
8: t21 interferes with:t20 t19 t18 t17 
9: t22 interferes with:t21 t20 t19 t18 t17 
10: t16 interferes with:t21 t20 t19 t18 t17 
11: t23 interferes with:t21 t20 t19 t18 t17 t16 
12: t3 interferes with:t15 t14 t13 t12 
13: t7 interferes with:t16 t21 t20 t19 t18 t17 
14: t2 interferes with:t21 t20 t19 t18 t17 t16 
15: t4 interferes with:t21 t20 t19 t18 t17 t16 
16: t5 interferes with:t21 t20 t19 t18 t17 t16 
17: t6 interferes with:t21 t20 t19 t18 t17 t16 
18: t8 interferes with:t21 t20 t19 t18 t17 t16 
19: t9 interferes with:t21 t20 t19 t18 t17 t16 
20: t10 interferes with:t21 t20 t19 t18 t17 t16 
21: t11 interferes with:t21 t20 t19 t18 t17 t16 
22: t24 interferes with:t21 t20 t19 t18 t17 t16 
23: t25 interferes with:t24 t21 t20 t19 t18 t17 
registers:14
### Uses and Defs
L4: : def => null, use => null
movq %t3, %t17 # default move : def => [t17=>t17], use => [t3=>rbx]
movq %t12, %t18 # default move : def => [t18=>t18], use => [t12=>r12]
movq %t13, %t19 # default move : def => [t19=>t19], use => [t13=>r13]
movq %t14, %t20 # default move : def => [t20=>t20], use => [t14=>r14]
movq %t15, %t21 # default move : def => [t21=>t21], use => [t15=>r15]
movq $4, %t22 # const : def => [t22=>t22], use => null
movq %t22, %t16 # default move : def => [t16=>t16], use => [t22=>t22]
L1: : def => null, use => null
movq $0, %t23 # const : def => [t23=>t23], use => null
cmp %t16, %t23 : def => null, use => [t16=>t16,t23=>t23]
jg L2 : def => null, use => null
L0: : def => null, use => null
movq %t21, %t15 # default move : def => [t15=>r15], use => [t21=>t21]
movq %t20, %t14 # default move : def => [t14=>r14], use => [t20=>t20]
movq %t19, %t13 # default move : def => [t13=>r13], use => [t19=>t19]
movq %t18, %t12 # default move : def => [t12=>r12], use => [t18=>t18]
movq %t17, %t3 # default move : def => [t3=>rbx], use => [t17=>t17]
jmp L3 : def => null, use => null
L5: : def => null, use => null
L2: : def => null, use => null
movq %t16, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t16=>t16]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t16=>t16,t7=>rdi]
movq $1, %t24 # const : def => [t24=>t24], use => null
movq %t16, %t25 # minus lexp -> r : def => [t25=>t25], use => [t16=>t16]
sub %t24, %t25 : def => [t25=>t25], use => [t24=>t24,t25=>t25]
movq %t25, %t16 # default move : def => [t16=>t16], use => [t25=>t25]
jmp L1 : def => null, use => null
L3: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L4: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t17 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t17=>t17]
movq %t12, %t18 # default move => [t13=>r13,t14=>r14,t15=>r15,t17=>t17,t18=>t18]
movq %t13, %t19 # default move => [t14=>r14,t15=>r15,t17=>t17,t18=>t18,t19=>t19]
movq %t14, %t20 # default move => [t15=>r15,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
movq %t15, %t21 # default move => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq $4, %t22 # const => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t22, %t16 # default move => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
L1: => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq $0, %t23 # const => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t23=>t23]
cmp %t16, %t23 => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
jg L2 => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
L0: => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t21, %t15 # default move => [t15=>r15,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
movq %t20, %t14 # default move => [t14=>r14,t15=>r15,t17=>t17,t18=>t18,t19=>t19]
movq %t19, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t17=>t17,t18=>t18]
movq %t18, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t17=>t17]
movq %t17, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L3 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L5: => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
L2: => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t16, %t7 # move arg 0 to temp => [t7=>rdi,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
call printi # exp call ( no return value ) => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq $1, %t24 # const => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t24=>t24]
movq %t16, %t25 # minus lexp -> r => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t24=>t24,t25=>t25]
sub %t24, %t25 => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t25=>t25]
movq %t25, %t16 # default move => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
jmp L1 => [t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
L3: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                  t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 rc def
L4:                                                 |                             |   |   |   |                                          5 null
movq %t3, %t17 # default move                                                     |   |   |   |       |                                  5 [t17=>t17]
movq %t12, %t18 # default move                                                        |   |   |       |   |                              5 [t18=>t18]
movq %t13, %t19 # default move                                                            |   |       |   |   |                          5 [t19=>t19]
movq %t14, %t20 # default move                                                                |       |   |   |   |                      5 [t20=>t20]
movq %t15, %t21 # default move                                                                        |   |   |   |   |                  5 [t21=>t21]
movq $4, %t22 # const                                                                                 |   |   |   |   |   |              6 [t22=>t22]
movq %t22, %t16 # default move                                                                    |   |   |   |   |   |                  6 [t16=>t16]
L1:                                                                                               |   |   |   |   |   |                  6 null
movq $0, %t23 # const                                                                             |   |   |   |   |   |       |          7 [t23=>t23]
cmp %t16, %t23                                                                                    |   |   |   |   |   |                  6 null
jg L2                                                                                             |   |   |   |   |   |                  6 null
L0:                                                                                                   |   |   |   |   |                  5 null
movq %t21, %t15 # default move                                                                |       |   |   |   |                      5 [t15=>r15]
movq %t20, %t14 # default move                                                            |   |       |   |   |                          5 [t14=>r14]
movq %t19, %t13 # default move                                                        |   |   |       |   |                              5 [t13=>r13]
movq %t18, %t12 # default move                                                    |   |   |   |       |                                  5 [t12=>r12]
movq %t17, %t3 # default move                       |                             |   |   |   |                                          5 [t3=>rbx]
jmp L3                                              |                             |   |   |   |                                          5 null
L5:                                                                                               |   |   |   |   |   |                  6 null
L2:                                                                                               |   |   |   |   |   |                  6 null
movq %t16, %t7 # move arg 0 to temp                             |                                 |   |   |   |   |   |                  7 [t7=>rdi]
call printi # exp call ( no return value )                                                        |   |   |   |   |   |                  6 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq $1, %t24 # const                                                                             |   |   |   |   |   |           |      7 [t24=>t24]
movq %t16, %t25 # minus lexp -> r                                                                     |   |   |   |   |           |   |  7 [t25=>t25]
sub %t24, %t25                                                                                        |   |   |   |   |               |  6 [t25=>t25]
movq %t25, %t16 # default move                                                                    |   |   |   |   |   |                  6 [t16=>t16]
jmp L1                                                                                            |   |   |   |   |   |                  6 null
L3:                                                 |                             |   |   |   |                                          5 null
# sink                                                                                                                                   0 null
t16 cost: 2
0: t17 interferes with:t15 t14 t13 t12 t0 
1: t0 interferes with:
2: t12 interferes with:t17 t15 t14 t13 
3: t13 interferes with:t18 t17 t15 t14 
4: t14 interferes with:t19 t18 t17 t15 
5: t15 interferes with:t20 t19 t18 t17 
6: t18 interferes with:t17 t15 t14 t13 t0 
7: t19 interferes with:t18 t17 t15 t14 t0 
8: t20 interferes with:t19 t18 t17 t15 t0 
9: t21 interferes with:t20 t19 t18 t17 t0 
10: t22 interferes with:t21 t20 t19 t18 t17 t0 
11: t16 interferes with:t24 t7 t23 t21 t20 t19 t18 t17 t0 
12: t26 interferes with:t21 t20 t19 t18 t17 t0 
13: t23 interferes with:t21 t20 t19 t18 t17 t0 
14: t27 interferes with:t23 t21 t20 t19 t18 t17 t0 
15: t3 interferes with:t15 t14 t13 t12 
16: t28 interferes with:t21 t20 t19 t18 t17 t0 
17: t7 interferes with:t21 t20 t19 t18 t17 t0 
18: t29 interferes with:t21 t20 t19 t18 t17 t7 t0 
19: t2 interferes with:t21 t20 t19 t18 t17 t0 
20: t4 interferes with:t21 t20 t19 t18 t17 t0 
21: t5 interferes with:t21 t20 t19 t18 t17 t0 
22: t6 interferes with:t21 t20 t19 t18 t17 t0 
23: t8 interferes with:t21 t20 t19 t18 t17 t0 
24: t9 interferes with:t21 t20 t19 t18 t17 t0 
25: t10 interferes with:t21 t20 t19 t18 t17 t0 
26: t11 interferes with:t21 t20 t19 t18 t17 t0 
27: t24 interferes with:t21 t20 t19 t18 t17 t0 
28: t30 interferes with:t24 t21 t20 t19 t18 t17 t0 
29: t25 interferes with:t24 t21 t20 t19 t18 t17 t0 
30: t31 interferes with:t21 t20 t19 t18 t17 t0 
registers:14
### Uses and Defs
L4: : def => null, use => null
movq %t3, %t17 # default move : def => [t17=>t17], use => [t3=>rbx]
movq %t12, %t18 # default move : def => [t18=>t18], use => [t12=>r12]
movq %t13, %t19 # default move : def => [t19=>t19], use => [t13=>r13]
movq %t14, %t20 # default move : def => [t20=>t20], use => [t14=>r14]
movq %t15, %t21 # default move : def => [t21=>t21], use => [t15=>r15]
movq $4, %t22 # const : def => [t22=>t22], use => null
movq %t22, %t16 # default move : def => [t16=>t16], use => [t22=>t22]
movq %t16, %t26 # spill s : def => [t26=>t26], use => [t16=>t16]
movq %t26, -8(%t0) # spill s : def => null, use => [t0=>rbp,t26=>t26]
L1: : def => null, use => null
movq $0, %t23 # const : def => [t23=>t23], use => null
movq -8(%t0), %t27 # spill l : def => [t27=>t27], use => [t0=>rbp]
movq %t27, %t16 # spill l : def => [t16=>t16], use => [t27=>t27]
cmp %t16, %t23 : def => null, use => [t16=>t16,t23=>t23]
jg L2 : def => null, use => null
L0: : def => null, use => null
movq %t21, %t15 # default move : def => [t15=>r15], use => [t21=>t21]
movq %t20, %t14 # default move : def => [t14=>r14], use => [t20=>t20]
movq %t19, %t13 # default move : def => [t13=>r13], use => [t19=>t19]
movq %t18, %t12 # default move : def => [t12=>r12], use => [t18=>t18]
movq %t17, %t3 # default move : def => [t3=>rbx], use => [t17=>t17]
jmp L3 : def => null, use => null
L5: : def => null, use => null
L2: : def => null, use => null
movq -8(%t0), %t28 # spill l : def => [t28=>t28], use => [t0=>rbp]
movq %t28, %t16 # spill l : def => [t16=>t16], use => [t28=>t28]
movq %t16, %t7 # move arg 0 to temp : def => [t7=>rdi], use => [t16=>t16]
movq -8(%t0), %t29 # spill l : def => [t29=>t29], use => [t0=>rbp]
movq %t29, %t16 # spill l : def => [t16=>t16], use => [t29=>t29]
call printi # exp call ( no return value ) : def => [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11], use => [t16=>t16,t7=>rdi]
movq $1, %t24 # const : def => [t24=>t24], use => null
movq -8(%t0), %t30 # spill l : def => [t30=>t30], use => [t0=>rbp]
movq %t30, %t16 # spill l : def => [t16=>t16], use => [t30=>t30]
movq %t16, %t25 # minus lexp -> r : def => [t25=>t25], use => [t16=>t16]
sub %t24, %t25 : def => [t25=>t25], use => [t24=>t24,t25=>t25]
movq %t25, %t16 # default move : def => [t16=>t16], use => [t25=>t25]
movq %t16, %t31 # spill s : def => [t31=>t31], use => [t16=>t16]
movq %t31, -8(%t0) # spill s : def => null, use => [t0=>rbp,t31=>t31]
jmp L1 : def => null, use => null
L3: : def => null, use => null
# sink  : def => null, use => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
### Liveness
L4: => [t0=>rbp,t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
movq %t3, %t17 # default move => [t0=>rbp,t12=>r12,t13=>r13,t14=>r14,t15=>r15,t17=>t17]
movq %t12, %t18 # default move => [t0=>rbp,t13=>r13,t14=>r14,t15=>r15,t17=>t17,t18=>t18]
movq %t13, %t19 # default move => [t0=>rbp,t14=>r14,t15=>r15,t17=>t17,t18=>t18,t19=>t19]
movq %t14, %t20 # default move => [t0=>rbp,t15=>r15,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
movq %t15, %t21 # default move => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq $4, %t22 # const => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t22=>t22]
movq %t22, %t16 # default move => [t0=>rbp,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t16, %t26 # spill s => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t26=>t26]
movq %t26, -8(%t0) # spill s => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
L1: => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq $0, %t23 # const => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t23=>t23]
movq -8(%t0), %t27 # spill l => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t23=>t23,t27=>t27]
movq %t27, %t16 # spill l => [t0=>rbp,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t23=>t23]
cmp %t16, %t23 => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
jg L2 => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
L0: => [t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t21, %t15 # default move => [t15=>r15,t17=>t17,t18=>t18,t19=>t19,t20=>t20]
movq %t20, %t14 # default move => [t14=>r14,t15=>r15,t17=>t17,t18=>t18,t19=>t19]
movq %t19, %t13 # default move => [t13=>r13,t14=>r14,t15=>r15,t17=>t17,t18=>t18]
movq %t18, %t12 # default move => [t12=>r12,t13=>r13,t14=>r14,t15=>r15,t17=>t17]
movq %t17, %t3 # default move => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
jmp L3 => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
L5: => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
L2: => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq -8(%t0), %t28 # spill l => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t28=>t28]
movq %t28, %t16 # spill l => [t0=>rbp,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t16, %t7 # move arg 0 to temp => [t0=>rbp,t7=>rdi,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq -8(%t0), %t29 # spill l => [t0=>rbp,t7=>rdi,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t29=>t29]
movq %t29, %t16 # spill l => [t0=>rbp,t7=>rdi,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
call printi # exp call ( no return value ) => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq $1, %t24 # const => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t24=>t24]
movq -8(%t0), %t30 # spill l => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t24=>t24,t30=>t30]
movq %t30, %t16 # spill l => [t0=>rbp,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t24=>t24]
movq %t16, %t25 # minus lexp -> r => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t24=>t24,t25=>t25]
sub %t24, %t25 => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t25=>t25]
movq %t25, %t16 # default move => [t0=>rbp,t16=>t16,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
movq %t16, %t31 # spill s => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21,t31=>t31]
movq %t31, -8(%t0) # spill s => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
jmp L1 => [t0=>rbp,t17=>t17,t18=>t18,t19=>t19,t20=>t20,t21=>t21]
L3: => [t3=>rbx,t12=>r12,t13=>r13,t14=>r14,t15=>r15]
# sink  => null
Assembly                                  t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 rc def
L4:                                        |        |                             |   |   |   |                                                                  6 null
movq %t3, %t17 # default move              |                                      |   |   |   |       |                                                          6 [t17=>t17]
movq %t12, %t18 # default move             |                                          |   |   |       |   |                                                      6 [t18=>t18]
movq %t13, %t19 # default move             |                                              |   |       |   |   |                                                  6 [t19=>t19]
movq %t14, %t20 # default move             |                                                  |       |   |   |   |                                              6 [t20=>t20]
movq %t15, %t21 # default move             |                                                          |   |   |   |   |                                          6 [t21=>t21]
movq $4, %t22 # const                      |                                                          |   |   |   |   |   |                                      7 [t22=>t22]
movq %t22, %t16 # default move             |                                                      |   |   |   |   |   |                                          7 [t16=>t16]
movq %t16, %t26 # spill s                  |                                                          |   |   |   |   |                   |                      7 [t26=>t26]
movq %t26, -8(%t0) # spill s               |                                                          |   |   |   |   |                                          6 null
L1:                                        |                                                          |   |   |   |   |                                          6 null
movq $0, %t23 # const                      |                                                          |   |   |   |   |       |                                  7 [t23=>t23]
movq -8(%t0), %t27 # spill l               |                                                          |   |   |   |   |       |               |                  8 [t27=>t27]
movq %t27, %t16 # spill l                  |                                                      |   |   |   |   |   |       |                                  8 [t16=>t16]
cmp %t16, %t23                             |                                                          |   |   |   |   |                                          6 null
jg L2                                      |                                                          |   |   |   |   |                                          6 null
L0:                                                                                                   |   |   |   |   |                                          5 null
movq %t21, %t15 # default move                                                                |       |   |   |   |                                              5 [t15=>r15]
movq %t20, %t14 # default move                                                            |   |       |   |   |                                                  5 [t14=>r14]
movq %t19, %t13 # default move                                                        |   |   |       |   |                                                      5 [t13=>r13]
movq %t18, %t12 # default move                                                    |   |   |   |       |                                                          5 [t12=>r12]
movq %t17, %t3 # default move                       |                             |   |   |   |                                                                  5 [t3=>rbx]
jmp L3                                              |                             |   |   |   |                                                                  5 null
L5:                                        |                                                          |   |   |   |   |                                          6 null
L2:                                        |                                                          |   |   |   |   |                                          6 null
movq -8(%t0), %t28 # spill l               |                                                          |   |   |   |   |                           |              7 [t28=>t28]
movq %t28, %t16 # spill l                  |                                                      |   |   |   |   |   |                                          7 [t16=>t16]
movq %t16, %t7 # move arg 0 to temp        |                    |                                     |   |   |   |   |                                          7 [t7=>rdi]
movq -8(%t0), %t29 # spill l               |                    |                                     |   |   |   |   |                               |          8 [t29=>t29]
movq %t29, %t16 # spill l                  |                    |                                 |   |   |   |   |   |                                          8 [t16=>t16]
call printi # exp call ( no return value ) |                                                          |   |   |   |   |                                          6 [t2=>rax,t4=>rcx,t5=>rdx,t6=>rsi,t7=>rdi,t8=>r8,t9=>r9,t10=>r10,t11=>r11]
movq $1, %t24 # const                      |                                                          |   |   |   |   |           |                              7 [t24=>t24]
movq -8(%t0), %t30 # spill l               |                                                          |   |   |   |   |           |                       |      8 [t30=>t30]
movq %t30, %t16 # spill l                  |                                                      |   |   |   |   |   |           |                              8 [t16=>t16]
movq %t16, %t25 # minus lexp -> r          |                                                          |   |   |   |   |           |   |                          8 [t25=>t25]
sub %t24, %t25                             |                                                          |   |   |   |   |               |                          7 [t25=>t25]
movq %t25, %t16 # default move             |                                                      |   |   |   |   |   |                                          7 [t16=>t16]
movq %t16, %t31 # spill s                  |                                                          |   |   |   |   |                                       |  7 [t31=>t31]
movq %t31, -8(%t0) # spill s               |                                                          |   |   |   |   |                                          6 null
jmp L1                                     |                                                          |   |   |   |   |                                          6 null
L3:                                                 |                             |   |   |   |                                                                  5 null
# sink                                                                                                                                                           0 null
[91mTest Result: ./tests/while.tig failed.[0m
