Consider Grammar
S -> if E then S else S
S -> begin S L
S -> pring E
L -> end
L -> ; S L
E -> num = num


int tok = getNextToken();

void eat(int t){
	/is the current token the same as the one we are eating ?
	//if not, its an error
	tok = getNextToken();
}

Parser Fucntion
void parse()	{
	S();
}

void S() {
	switch(tok){
		case IF:
			eat(IF);E();eat(THEN);S();eat(ELSE);S(); break;
		case BEGIN:
			eat(BEGIN); S(); L(); break;
		cae PRINT:
			eat(PRINT); E(); break;
	
	}
}

void L(){

}

void E(){

}


void main(){
	String[] toks = new String['if 1 = 1 then begin if 2 = 2 then print nu"];
	parser.parse(toks);
}




Z -> d
Z -> XYZ
Y -> ''
Y -> c
X -> Y
X -> a


acd

Z
XYZ
aYZ
acZ
acd


ad

Z
XYZ
aYZ
a''Z
a''d






