
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Mon Oct 21 23:29:38 IST 2019
//----------------------------------------------------

package Parse;


/** CUP v0.10k generated parser.
  * @version Mon Oct 21 23:29:38 IST 2019
  */
public class Grm extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public Grm() {super();}

  /** Constructor which sets the default scanner. */
  public Grm(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\047\000\002\002\004\000\002\003\003\000\002\010" +
    "\003\000\002\010\003\000\002\011\006\000\002\013\003" +
    "\000\002\013\003\000\002\013\003\000\002\030\005\000" +
    "\002\031\005\000\002\015\004\000\002\015\002\000\002" +
    "\016\005\000\002\016\002\000\002\014\005\000\002\020" +
    "\006\000\002\020\010\000\002\021\004\000\002\027\004" +
    "\000\002\027\005\000\002\004\003\000\002\004\003\000" +
    "\002\004\003\000\002\004\003\000\002\004\003\000\002" +
    "\004\003\000\002\005\004\000\002\005\002\000\002\026" +
    "\005\000\002\006\007\000\002\007\004\000\002\007\002" +
    "\000\002\032\010\000\002\025\006\000\002\022\004\000" +
    "\002\022\002\000\002\023\005\000\002\023\002\000\002" +
    "\024\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\112\000\016\004\016\005\015\006\005\016\004\036" +
    "\007\046\022\001\002\000\006\004\103\017\ufff6\001\002" +
    "\000\036\002\uffec\004\uffec\005\uffec\006\uffec\007\uffec\015" +
    "\uffec\016\uffec\017\uffec\036\uffec\046\uffec\047\uffec\050\uffec" +
    "\055\uffec\056\uffec\001\002\000\022\007\ufffa\014\ufffa\016" +
    "\ufffa\017\ufffa\035\ufffa\047\ufffa\055\ufffa\056\ufffa\001\002" +
    "\000\004\051\101\001\002\000\004\002\000\001\002\000" +
    "\036\002\uffea\004\uffea\005\uffea\006\uffea\007\uffea\015\uffea" +
    "\016\uffea\017\uffea\036\uffea\046\uffea\047\uffea\050\uffea\055" +
    "\uffea\056\uffea\001\002\000\006\014\062\016\061\001\002" +
    "\000\004\002\060\001\002\000\036\002\uffe9\004\uffe9\005" +
    "\uffe9\006\uffe9\007\uffe9\015\uffe9\016\uffe9\017\uffe9\036\uffe9" +
    "\046\uffe9\047\uffe9\050\uffe9\055\uffe9\056\uffe9\001\002\000" +
    "\036\002\uffeb\004\uffeb\005\uffeb\006\uffeb\007\uffeb\015\uffeb" +
    "\016\uffeb\017\uffeb\036\uffeb\046\uffeb\047\uffeb\050\uffeb\055" +
    "\uffeb\056\uffeb\001\002\000\010\014\053\016\ufffc\020\054" +
    "\001\002\000\036\002\uffed\004\uffed\005\uffed\006\uffed\007" +
    "\uffed\015\uffed\016\uffed\017\uffed\036\uffed\046\uffed\047\uffed" +
    "\050\uffed\055\uffed\056\uffed\001\002\000\022\007\ufffb\014" +
    "\ufffb\016\ufffb\017\ufffb\035\ufffb\047\ufffb\055\ufffb\056\ufffb" +
    "\001\002\000\036\002\uffe8\004\uffe8\005\uffe8\006\uffe8\007" +
    "\uffe8\015\uffe8\016\uffe8\017\uffe8\036\uffe8\046\uffe8\047\uffe8" +
    "\050\uffe8\055\uffe8\056\uffe8\001\002\000\010\047\uffe2\055" +
    "\024\056\027\001\002\000\004\047\045\001\002\000\004" +
    "\004\036\001\002\000\010\047\ufffe\055\ufffe\056\ufffe\001" +
    "\002\000\010\047\uffff\055\uffff\056\uffff\001\002\000\004" +
    "\004\032\001\002\000\010\047\uffe2\055\024\056\027\001" +
    "\002\000\004\047\uffe3\001\002\000\004\025\033\001\002" +
    "\000\010\004\035\016\004\036\007\001\002\000\010\047" +
    "\ufffd\055\ufffd\056\ufffd\001\002\000\016\007\ufffc\017\ufffc" +
    "\035\ufffc\047\ufffc\055\ufffc\056\ufffc\001\002\000\006\010" +
    "\037\035\040\001\002\000\010\004\035\016\004\036\007" +
    "\001\002\000\016\004\016\005\015\006\005\016\004\036" +
    "\007\046\022\001\002\000\010\047\ufff2\055\ufff2\056\ufff2" +
    "\001\002\000\004\035\043\001\002\000\016\004\016\005" +
    "\015\006\005\016\004\036\007\046\022\001\002\000\010" +
    "\047\ufff1\055\ufff1\056\ufff1\001\002\000\020\004\016\005" +
    "\015\006\005\016\004\036\007\046\022\050\uffe6\001\002" +
    "\000\022\004\016\005\015\006\005\015\uffe6\016\004\036" +
    "\007\046\022\050\uffe6\001\002\000\004\050\050\001\002" +
    "\000\036\002\uffe4\004\uffe4\005\uffe4\006\uffe4\007\uffe4\015" +
    "\uffe4\016\uffe4\017\uffe4\036\uffe4\046\uffe4\047\uffe4\050\uffe4" +
    "\055\uffe4\056\uffe4\001\002\000\006\015\uffe7\050\uffe7\001" +
    "\002\000\036\002\ufff0\004\ufff0\005\ufff0\006\ufff0\007\ufff0" +
    "\015\ufff0\016\ufff0\017\ufff0\036\ufff0\046\ufff0\047\ufff0\050" +
    "\ufff0\055\ufff0\056\ufff0\001\002\000\020\004\016\005\015" +
    "\006\005\015\uffe6\016\004\036\007\046\022\001\002\000" +
    "\004\004\055\001\002\000\036\002\uffef\004\uffef\005\uffef" +
    "\006\uffef\007\uffef\015\uffef\016\uffef\017\uffef\036\uffef\046" +
    "\uffef\047\uffef\050\uffef\055\uffef\056\uffef\001\002\000\004" +
    "\015\057\001\002\000\036\002\uffee\004\uffee\005\uffee\006" +
    "\uffee\007\uffee\015\uffee\016\uffee\017\uffee\036\uffee\046\uffee" +
    "\047\uffee\050\uffee\055\uffee\056\uffee\001\002\000\004\002" +
    "\001\001\002\000\006\004\067\017\uffde\001\002\000\016" +
    "\004\016\005\015\006\005\016\004\036\007\046\022\001" +
    "\002\000\004\015\064\001\002\000\004\051\065\001\002" +
    "\000\016\004\016\005\015\006\005\016\004\036\007\046" +
    "\022\001\002\000\036\002\uffe1\004\uffe1\005\uffe1\006\uffe1" +
    "\007\uffe1\015\uffe1\016\uffe1\017\uffe1\036\uffe1\046\uffe1\047" +
    "\uffe1\050\uffe1\055\uffe1\056\uffe1\001\002\000\004\025\077" +
    "\001\002\000\004\017\076\001\002\000\006\007\072\017" +
    "\uffdc\001\002\000\004\004\067\001\002\000\004\017\uffdf" +
    "\001\002\000\006\007\072\017\uffdc\001\002\000\004\017" +
    "\uffdd\001\002\000\036\002\uffe0\004\uffe0\005\uffe0\006\uffe0" +
    "\007\uffe0\015\uffe0\016\uffe0\017\uffe0\036\uffe0\046\uffe0\047" +
    "\uffe0\050\uffe0\055\uffe0\056\uffe0\001\002\000\016\004\016" +
    "\005\015\006\005\016\004\036\007\046\022\001\002\000" +
    "\006\007\uffdb\017\uffdb\001\002\000\004\004\102\001\002" +
    "\000\022\007\ufff9\014\ufff9\016\ufff9\017\ufff9\035\ufff9\047" +
    "\ufff9\055\ufff9\056\ufff9\001\002\000\004\010\113\001\002" +
    "\000\004\017\112\001\002\000\006\007\106\017\ufff4\001" +
    "\002\000\004\004\103\001\002\000\004\017\ufff7\001\002" +
    "\000\006\007\106\017\ufff4\001\002\000\004\017\ufff5\001" +
    "\002\000\022\007\ufff8\014\ufff8\016\ufff8\017\ufff8\035\ufff8" +
    "\047\ufff8\055\ufff8\056\ufff8\001\002\000\010\004\035\016" +
    "\004\036\007\001\002\000\006\007\ufff3\017\ufff3\001\002" +
    "" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\112\000\024\003\012\004\007\006\013\013\011\021" +
    "\016\025\010\030\005\031\017\032\020\001\001\000\006" +
    "\014\104\015\103\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\027\051\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\007\022\010" +
    "\027\011\024\020\025\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\007\030\010\027\011\024\020\025\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\013\033\030" +
    "\005\031\017\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\013\041\030\005\031\017\001" +
    "\001\000\022\004\040\006\013\013\011\021\016\025\010" +
    "\030\005\031\017\032\020\001\001\000\002\001\001\000" +
    "\002\001\001\000\022\004\043\006\013\013\011\021\016" +
    "\025\010\030\005\031\017\032\020\001\001\000\002\001" +
    "\001\000\024\004\045\005\046\006\013\013\011\021\016" +
    "\025\010\030\005\031\017\032\020\001\001\000\024\004" +
    "\045\005\050\006\013\013\011\021\016\025\010\030\005" +
    "\031\017\032\020\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\024\004\045" +
    "\005\055\006\013\013\011\021\016\025\010\030\005\031" +
    "\017\032\020\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\022\067\024\070\001\001\000\022\004\062\006\013" +
    "\013\011\021\016\025\010\030\005\031\017\032\020\001" +
    "\001\000\002\001\001\000\002\001\001\000\022\004\065" +
    "\006\013\013\011\021\016\025\010\030\005\031\017\032" +
    "\020\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\023\072\001\001\000\004\024\073\001" +
    "\001\000\002\001\001\000\004\023\074\001\001\000\002" +
    "\001\001\000\002\001\001\000\022\004\077\006\013\013" +
    "\011\021\016\025\010\030\005\031\017\032\020\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\016\106\001\001" +
    "\000\004\014\107\001\001\000\002\001\001\000\004\016" +
    "\110\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\013\113\030\005\031\017\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Grm$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Grm$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Grm$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  /** Scan to get the next Symbol. */
  public java_cup.runtime.Symbol scan()
    throws java.lang.Exception
    {
 return lexer.nextToken(); 
    }

 
  //public Absyn.Exp parseResult;
  Lexer lexer;

  public void syntax_error(java_cup.runtime.Symbol current) {
   report_error("Syntax error (" + current.sym + ")", current);
  }

  ErrorMsg.ErrorMsg errorMsg;

  public void report_error(String message, 
			   java_cup.runtime.Symbol info) {
      errorMsg.error(info.left, message);
  }

  public Grm(Lexer l, ErrorMsg.ErrorMsg err) {
    this();
    errorMsg=err;
    lexer=l;
  }

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Grm$actions {

 static Symbol.Symbol sym(String s) {
	         return Symbol.Symbol.symbol(s);
	        }
	    
  private final Grm parser;

  /** Constructor */
  CUP$Grm$actions(Grm parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Grm$do_action(
    int                        CUP$Grm$act_num,
    java_cup.runtime.lr_parser CUP$Grm$parser,
    java.util.Stack            CUP$Grm$stack,
    int                        CUP$Grm$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Grm$result;

      /* select the action based on the action number */
      switch (CUP$Grm$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // fieldCreate ::= ID EQ exp 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(18/*fieldCreate*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-2)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // fieldCreateListAux ::= 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(17/*fieldCreateListAux*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // fieldCreateListAux ::= COMMA fieldCreate fieldCreateListAux 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(17/*fieldCreateListAux*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-2)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // fieldCreateList ::= 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(16/*fieldCreateList*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // fieldCreateList ::= fieldCreate fieldCreateListAux 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(16/*fieldCreateList*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-1)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // recCreate ::= ty LBRACE fieldCreateList RBRACE 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(19/*recCreate*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-3)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // arrCreate ::= ty LBRACK exp RBRACK OF exp 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(24/*arrCreate*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-5)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // decList ::= 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(5/*decList*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // decList ::= dec decList 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(5/*decList*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-1)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // letExp ::= LET decList IN expList END 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(4/*letExp*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-4)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // assignment ::= lValue ASSIGN exp 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(20/*assignment*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-2)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // expList ::= 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(3/*expList*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // expList ::= exp expList 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(3/*expList*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-1)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // exp ::= arrCreate 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(2/*exp*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // exp ::= letExp 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(2/*exp*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // exp ::= recCreate 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(2/*exp*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // exp ::= STRING 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(2/*exp*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // exp ::= INT 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(2/*exp*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // exp ::= lValue 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(2/*exp*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // lValueAux ::= LBRACK expList RBRACK 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Grm$stack.elementAt(CUP$Grm$top-1)).value;

              CUP$Grm$result = new java_cup.runtime.Symbol(21/*lValueAux*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-2)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // lValueAux ::= DOT ID 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(21/*lValueAux*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-1)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // lValue ::= ID lValueAux 
            {
              Object RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-1)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-1)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$Grm$stack.elementAt(CUP$Grm$top-1)).value;

              CUP$Grm$result = new java_cup.runtime.Symbol(15/*lValue*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-1)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // varDec ::= VAR ID COLON ty ASSIGN exp 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(14/*varDec*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-5)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // varDec ::= VAR ID ASSIGN exp 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(14/*varDec*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-3)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // fieldDec ::= ID COLON ty 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(10/*fieldDec*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-2)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // fieldDecListAux ::= 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(12/*fieldDecListAux*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // fieldDecListAux ::= COMMA fieldDec fieldDecListAux 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(12/*fieldDecListAux*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-2)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // fieldDecList ::= 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(11/*fieldDecList*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // fieldDecList ::= fieldDec fieldDecListAux 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(11/*fieldDecList*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-1)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // recTy ::= LBRACE fieldDecList RBRACE 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(23/*recTy*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-2)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // arrTy ::= ARRAY OF ID 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(22/*arrTy*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-2)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // ty ::= arrTy 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(9/*ty*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // ty ::= recTy 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(9/*ty*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // ty ::= ID 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(9/*ty*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // tyDec ::= TYPE ID EQ ty 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(7/*tyDec*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-3)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // dec ::= tyDec 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(6/*dec*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // dec ::= varDec 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(6/*dec*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // program ::= exp 
            {
              Object RESULT = null;

              CUP$Grm$result = new java_cup.runtime.Symbol(1/*program*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          return CUP$Grm$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= program EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Grm$stack.elementAt(CUP$Grm$top-1)).value;
		RESULT = start_val;
              CUP$Grm$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-1)).left, ((java_cup.runtime.Symbol)CUP$Grm$stack.elementAt(CUP$Grm$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$Grm$parser.done_parsing();
          return CUP$Grm$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

